{
    "pipes": [],
    "interfaces": [
        {
            "name": "IDropDownData",
            "id": "interface-IDropDownData-9750047d093167bcdfcb6f3b5b6f1c7728c2645c5641893ef45a4b8c56b6ff8c711b68e4785454d0ede29ef758cd5d0c6759bb752ff88db3e890d61fa1103f99",
            "file": "src/app/components/drop-down-menu/drop-down-menu.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit } from '@angular/core'\r\n\r\nexport interface IDropDownData {\r\n    name: string\r\n    onClick: () => void\r\n}\r\n\r\n@Component({\r\n    selector: 'app-drop-down-menu',\r\n    templateUrl: './drop-down-menu.component.html',\r\n    styleUrls: ['./drop-down-menu.component.scss'],\r\n})\r\nexport class DropDownMenuComponent {\r\n    @Input() dropdownData: IDropDownData[] = [];\r\n}\r\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "onClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IItems",
            "id": "interface-IItems-0c28d942d6b8374e2651da3257ae612a2f50e18050b2ecf7246b9cbbfd211e66a386867040c341ac9430c3a9a0ff8da8d7c955cb2fcc4a8e17229fafde1f0953",
            "file": "src/app/components/navigation-menu/navigation-menu.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core'\r\nimport { NavigationEnd, Router } from '@angular/router'\r\n\r\ninterface IItems {\r\n    name: string\r\n    icon: string\r\n    path: string\r\n}\r\n\r\n@Component({\r\n    selector: 'app-navigation-menu',\r\n    templateUrl: './navigation-menu.component.html',\r\n    styleUrls: ['./navigation-menu.component.scss'],\r\n})\r\nexport class NavigationMenuComponent implements OnInit {\r\n    @Input() items: IItems[] = []\r\n    currentUrl: string = '/home'\r\n    ngOnInit() {\r\n        this.router.events.subscribe((event) => {\r\n            if (event instanceof NavigationEnd) {\r\n                this.currentUrl = event.url\r\n            }\r\n        })\r\n    }\r\n    constructor(private router: Router) {}\r\n}\r\n",
            "properties": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ILogin",
            "id": "interface-ILogin-0f9c50e83c8a2629def77ad51cd6f29e84cad4b340e40477979a27ed1b5ad806f82f91b5f340d229f48de0e96ddc79997f69dc3ecc6bc182b3c06627cf617886",
            "file": "src/app/services/user-auth.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from '@angular/core'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { environment } from 'src/environments/environment'\r\nimport { Router } from '@angular/router'\r\nimport { tap } from 'rxjs/operators'\r\nimport { Observable } from 'rxjs'\r\n\r\ninterface ILogin {\r\n    identifier: string\r\n    password: string\r\n}\r\n\r\ninterface IRegister {\r\n    username: string\r\n    email: string\r\n    password: string\r\n}\r\n\r\n@Injectable()\r\nexport class UserAuthService {\r\n    private apiUrl = environment.apiUrl\r\n    constructor(private http: HttpClient, private router: Router) {}\r\n    loginUser(user: ILogin) {\r\n        return this.http.post(this.apiUrl, user)\r\n    }\r\n    registerUser(user: IRegister): Observable<any> {\r\n        return this.http.post(`${this.apiUrl}/register`, user).pipe(\r\n            tap((response: any) => {\r\n                localStorage.setItem('token', response.jwt)\r\n            })\r\n        )\r\n    }\r\n    fetchMoviesSeries(seachVal: string, pageNo: number) {\r\n        const token = localStorage.getItem('token')\r\n        const headers = { Authorization: `Bearer ${token}` }\r\n\r\n        return this.http.get(\r\n            `https://api.themoviedb.org/3/search/multi?query=${seachVal}&api_key=1d42d448b0d527e767f463355d242d88&language=en-US&page=${pageNo}&include_adult=false`,\r\n            { headers }\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Removes the token from localStorage and navigates the user to the login page.\r\n     * After clearing the token, it waits for 2 seconds before navigating to the login page.\r\n     * This method is called when the user logs out.\r\n     */\r\n    logOutUser() {\r\n        localStorage.clear()\r\n        setTimeout(() => {\r\n            this.router.navigate(['/login'])\r\n        }, 1000)\r\n    }\r\n\r\n    fetchTrendingMovies() {\r\n        const token = localStorage.getItem('token')\r\n        const headers = { Authorization: `Bearer ${token}` }\r\n        return this.http.get('https://api.themoviedb.org/3/trending/movie/week?api_key=1d42d448b0d527e767f463355d242d88', {\r\n            headers,\r\n        })\r\n    }\r\n\r\n    fetchPopularMovies() {\r\n        const token = localStorage.getItem('token')\r\n        const headers = { Authorization: `Bearer ${token}` }\r\n        return this.http.get('https://api.themoviedb.org/3/movie/popular?api_key=1d42d448b0d527e767f463355d242d88&language=en-US&page=3', {\r\n            headers,\r\n        })\r\n    }\r\n\r\n    fetchMovieData(movieId: number) {\r\n        return this.http.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=1d42d448b0d527e767f463355d242d88`)\r\n    }\r\n\r\n    fetchMovieCast(movieId: number) {\r\n        return this.http.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=1d42d448b0d527e767f463355d242d88`)\r\n    }\r\n    logoutUser() {\r\n        localStorage.clear()\r\n    }\r\n    fetchMovieGenre(movieSeries: string) {\r\n        return this.http.get(\r\n            `https://api.themoviedb.org/3/genre/${movieSeries}/list?api_key=1d42d448b0d527e767f463355d242d88&language=en-US`\r\n        )\r\n    }\r\n    fetchMovieGenreDetails(movieSeries: string, pageNo: number, genreId: string) {\r\n        return this.http.get(\r\n            `https://api.themoviedb.org/3/discover/${movieSeries}?api_key=1d42d448b0d527e767f463355d242d88&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${pageNo}&with_genres=${genreId}`\r\n        )\r\n    }\r\n}\r\n",
            "properties": [
                {
                    "name": "identifier",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IMovieSeries",
            "id": "interface-IMovieSeries-069dacf44f97c900ccf9d70e2ebecf754652a158c515d13a4a3920145902f956d93f4c920e5e5a80ebb10a2be4bdf8bc279df933a690cb019ff0d252f901b716",
            "file": "src/app/modules/movie-genre-details-page/movie-genre-details-page.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, OnInit } from '@angular/core'\r\nimport { ActivatedRoute, Params, Router } from '@angular/router'\r\nimport { UserAuthService } from 'src/app/services/user-auth.service'\r\nimport { environment } from 'src/environments/environment'\r\n\r\ninterface IMovieSeries {\r\n    adult: boolean\r\n    backdrop_path: string\r\n    genre_ids: []\r\n    id: number\r\n    media_type: string\r\n    original_language: string\r\n    original_title: string\r\n    original_name: string\r\n    overview: string\r\n    popularity: number\r\n    poster_path: string\r\n    release_date: string\r\n    first_air_date: string\r\n    title: string\r\n    video: boolean\r\n    vote_average: number\r\n    vote_count: number\r\n}\r\n@Component({\r\n    selector: 'app-movie-genre-details-page',\r\n    templateUrl: './movie-genre-details-page.component.html',\r\n    styleUrls: ['./movie-genre-details-page.component.scss'],\r\n})\r\nexport class MovieGenreDetailsPageComponent implements OnInit {\r\n    imageBaseUrl: string = environment.imageBaseUrl\r\n    movieGenreDetails: IMovieSeries[] = []\r\n    currentPage: number = 1\r\n    currentMovieorSeriesUrl: string = ''\r\n    constructor(public userAuth: UserAuthService, private router: Router, private activatedRoute: ActivatedRoute) {}\r\n\r\n    ngOnInit(): void {\r\n        this.activatedRoute.params.subscribe((params) => {\r\n            this.currentMovieorSeriesUrl = this.router.url\r\n            if (this.router.url.includes('movies')) {\r\n                this.userAuth.fetchMovieGenreDetails('movie', this.currentPage, params['id']).subscribe((res: any) => {\r\n                    console.log(res)\r\n                    this.movieGenreDetails = res.results\r\n                })\r\n            } else if (this.router.url.includes('series')) {\r\n                this.userAuth.fetchMovieGenreDetails('tv', this.currentPage, params['id']).subscribe((res: any) => {\r\n                    console.log(res)\r\n                    this.movieGenreDetails = res.results\r\n                })\r\n            }\r\n        })\r\n    }\r\n    onScroll() {\r\n        this.currentPage++\r\n        this.activatedRoute.params.subscribe((params: Params) => {\r\n            this.userAuth.fetchMovieGenreDetails('movie', this.currentPage, params['id']).subscribe((res: any) => {\r\n                this.movieGenreDetails = [...this.movieGenreDetails, ...res.results]\r\n            })\r\n        })\r\n    }\r\n}\r\n",
            "properties": [
                {
                    "name": "adult",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "backdrop_path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "first_air_date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "genre_ids",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "media_type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "original_language",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "original_name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "original_title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "overview",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "popularity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "poster_path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "release_date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "video",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "vote_average",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "vote_count",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IMovieSeries",
            "id": "interface-IMovieSeries-433e493dcc54672fa320f05567e3316756136d0a76c1d56409296ba4d6c3ea4674e99f38be5d6f5f1f87862937b418c93ddcd33c47977a4bb10bcb433cf57017-1",
            "file": "src/app/modules/search-result-page/search-result-page.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, OnInit } from '@angular/core'\r\nimport { ActivatedRoute, Params, Router } from '@angular/router'\r\nimport { UserAuthService } from 'src/app/services/user-auth.service'\r\n\r\ninterface IMovieSeries {\r\n    adult: boolean\r\n    backdrop_path: string\r\n    genre_ids: []\r\n    id: number\r\n    media_type: string\r\n    original_language: string\r\n    original_title: string\r\n    original_name: string\r\n    overview: string\r\n    popularity: number\r\n    poster_path: string\r\n    release_date: string\r\n    first_air_date: string\r\n    title: string\r\n    video: boolean\r\n    vote_average: number\r\n    vote_count: number\r\n}\r\n\r\n@Component({\r\n    selector: 'app-search-result-page',\r\n    templateUrl: './search-result-page.component.html',\r\n    styleUrls: ['./search-result-page.component.scss'],\r\n})\r\nexport class SearchResultPageComponent implements OnInit {\r\n    allMovies: IMovieSeries[] = []\r\n    currentPage = 1\r\n    currentMovieSeries: string = ''\r\n    totalItems: number | null = null\r\n    constructor(public userAuth: UserAuthService, private router: Router, private activatedRoute: ActivatedRoute) {}\r\n    ngOnInit(): void {\r\n        this.activatedRoute.params.subscribe((params) => {\r\n            this.userAuth.fetchMoviesSeries(params['query'], this.currentPage).subscribe((res: any) => {\r\n                this.currentMovieSeries = params['query']\r\n                this.totalItems = res.total_results\r\n                this.allMovies = res.results\r\n                if (this.allMovies.length === 0) {\r\n                    this.router.navigate(['/no-result', params['query']])\r\n                }\r\n            })\r\n        })\r\n    }\r\n    onScroll() {\r\n        this.currentPage++\r\n        this.activatedRoute.params.subscribe((params: Params) => {\r\n            this.userAuth.fetchMoviesSeries(params['query'], this.currentPage).subscribe((res: any) => {\r\n                this.allMovies = [...this.allMovies, ...res.results]\r\n            })\r\n        })\r\n    }\r\n}\r\n",
            "properties": [
                {
                    "name": "adult",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "backdrop_path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "first_air_date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "genre_ids",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "media_type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "original_language",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "original_name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "original_title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "overview",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "popularity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "poster_path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "release_date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "video",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "vote_average",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "vote_count",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "IMovieSeries-1"
        },
        {
            "name": "IRegister",
            "id": "interface-IRegister-0f9c50e83c8a2629def77ad51cd6f29e84cad4b340e40477979a27ed1b5ad806f82f91b5f340d229f48de0e96ddc79997f69dc3ecc6bc182b3c06627cf617886",
            "file": "src/app/services/user-auth.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from '@angular/core'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { environment } from 'src/environments/environment'\r\nimport { Router } from '@angular/router'\r\nimport { tap } from 'rxjs/operators'\r\nimport { Observable } from 'rxjs'\r\n\r\ninterface ILogin {\r\n    identifier: string\r\n    password: string\r\n}\r\n\r\ninterface IRegister {\r\n    username: string\r\n    email: string\r\n    password: string\r\n}\r\n\r\n@Injectable()\r\nexport class UserAuthService {\r\n    private apiUrl = environment.apiUrl\r\n    constructor(private http: HttpClient, private router: Router) {}\r\n    loginUser(user: ILogin) {\r\n        return this.http.post(this.apiUrl, user)\r\n    }\r\n    registerUser(user: IRegister): Observable<any> {\r\n        return this.http.post(`${this.apiUrl}/register`, user).pipe(\r\n            tap((response: any) => {\r\n                localStorage.setItem('token', response.jwt)\r\n            })\r\n        )\r\n    }\r\n    fetchMoviesSeries(seachVal: string, pageNo: number) {\r\n        const token = localStorage.getItem('token')\r\n        const headers = { Authorization: `Bearer ${token}` }\r\n\r\n        return this.http.get(\r\n            `https://api.themoviedb.org/3/search/multi?query=${seachVal}&api_key=1d42d448b0d527e767f463355d242d88&language=en-US&page=${pageNo}&include_adult=false`,\r\n            { headers }\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Removes the token from localStorage and navigates the user to the login page.\r\n     * After clearing the token, it waits for 2 seconds before navigating to the login page.\r\n     * This method is called when the user logs out.\r\n     */\r\n    logOutUser() {\r\n        localStorage.clear()\r\n        setTimeout(() => {\r\n            this.router.navigate(['/login'])\r\n        }, 1000)\r\n    }\r\n\r\n    fetchTrendingMovies() {\r\n        const token = localStorage.getItem('token')\r\n        const headers = { Authorization: `Bearer ${token}` }\r\n        return this.http.get('https://api.themoviedb.org/3/trending/movie/week?api_key=1d42d448b0d527e767f463355d242d88', {\r\n            headers,\r\n        })\r\n    }\r\n\r\n    fetchPopularMovies() {\r\n        const token = localStorage.getItem('token')\r\n        const headers = { Authorization: `Bearer ${token}` }\r\n        return this.http.get('https://api.themoviedb.org/3/movie/popular?api_key=1d42d448b0d527e767f463355d242d88&language=en-US&page=3', {\r\n            headers,\r\n        })\r\n    }\r\n\r\n    fetchMovieData(movieId: number) {\r\n        return this.http.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=1d42d448b0d527e767f463355d242d88`)\r\n    }\r\n\r\n    fetchMovieCast(movieId: number) {\r\n        return this.http.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=1d42d448b0d527e767f463355d242d88`)\r\n    }\r\n    logoutUser() {\r\n        localStorage.clear()\r\n    }\r\n    fetchMovieGenre(movieSeries: string) {\r\n        return this.http.get(\r\n            `https://api.themoviedb.org/3/genre/${movieSeries}/list?api_key=1d42d448b0d527e767f463355d242d88&language=en-US`\r\n        )\r\n    }\r\n    fetchMovieGenreDetails(movieSeries: string, pageNo: number, genreId: string) {\r\n        return this.http.get(\r\n            `https://api.themoviedb.org/3/discover/${movieSeries}?api_key=1d42d448b0d527e767f463355d242d88&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${pageNo}&with_genres=${genreId}`\r\n        )\r\n    }\r\n}\r\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-dcc5c3137cd472dd0002d85b562efd23162e3eff53ca4438a6251e6c46e3b8299076255380d1d42f386510cb6f2cbaab49fa5b5f253be459cdc3869428c5c400",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\r\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "BookmarkService",
            "id": "injectable-BookmarkService-cd23b7866ba46850ec2b200a1a9bb8b2fd1d9f9aba0212a680dfec46e30e74c13411cd8a5a63d46d0097e1aa2f2854129a4190bdbdb3f1d9a09aab37470ca7d5",
            "file": "src/app/services/bookmark.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "addItem",
                    "args": [
                        {
                            "name": "movieData",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{ title: '', label: '', image: '', id: '', year: '' }"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "movieData",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{ title: '', label: '', image: '', id: '', year: '' }",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getItems",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "removeItem",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core'\r\n\r\n@Injectable()\r\nexport class BookmarkService {\r\n    constructor() {}\r\n\r\n    addItem(movieData = { title: '', label: '', image: '', id: '', year: '' }) {\r\n        console.log('inside additem')\r\n        let bookmarkedItems = JSON.parse(localStorage.getItem('bookmarkedItems') || '[]')\r\n        localStorage.setItem('bookmarkedItems', JSON.stringify(bookmarkedItems))\r\n        const existingItem = bookmarkedItems.find((item: any) => item.id === movieData.id)\r\n        if (existingItem) {\r\n            // Item with same id already exists in local storage\r\n            return\r\n        }\r\n        const newBookmark = movieData\r\n        bookmarkedItems.push(newBookmark) // add the new bookmarked item\r\n        localStorage.setItem('bookmarkedItems', JSON.stringify(bookmarkedItems)) // save the updated array back to local storage\r\n    }\r\n    removeItem(id: string) {\r\n        let bookmarkedItems = JSON.parse(localStorage.getItem('bookmarkedItems') || '[]')\r\n        bookmarkedItems = bookmarkedItems.filter((item: any) => item.id !== id)\r\n        localStorage.setItem('bookmarkedItems', JSON.stringify(bookmarkedItems))\r\n        console.log('locastorage with removed item')\r\n    }\r\n    getItems() {\r\n        return localStorage.getItem('bookmarkedItems')\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 4
            },
            "type": "injectable"
        },
        {
            "name": "UserAuthService",
            "id": "injectable-UserAuthService-0f9c50e83c8a2629def77ad51cd6f29e84cad4b340e40477979a27ed1b5ad806f82f91b5f340d229f48de0e96ddc79997f69dc3ecc6bc182b3c06627cf617886",
            "file": "src/app/services/user-auth.service.ts",
            "properties": [
                {
                    "name": "apiUrl",
                    "defaultValue": "environment.apiUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "fetchMovieCast",
                    "args": [
                        {
                            "name": "movieId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "movieId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "fetchMovieData",
                    "args": [
                        {
                            "name": "movieId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "movieId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "fetchMovieGenre",
                    "args": [
                        {
                            "name": "movieSeries",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "movieSeries",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "fetchMovieGenreDetails",
                    "args": [
                        {
                            "name": "movieSeries",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "pageNo",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "genreId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "movieSeries",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "pageNo",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "genreId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "fetchMoviesSeries",
                    "args": [
                        {
                            "name": "seachVal",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "pageNo",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "seachVal",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "pageNo",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "fetchPopularMovies",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "fetchTrendingMovies",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "loginUser",
                    "args": [
                        {
                            "name": "user",
                            "type": "ILogin",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "ILogin",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "logoutUser",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "logOutUser",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRemoves the token from localStorage and navigates the user to the login page.\nAfter clearing the token, it waits for 2 seconds before navigating to the login page.\nThis method is called when the user logs out.\n",
                    "description": "<p>Removes the token from localStorage and navigates the user to the login page.\nAfter clearing the token, it waits for 2 seconds before navigating to the login page.\nThis method is called when the user logs out.</p>\n"
                },
                {
                    "name": "registerUser",
                    "args": [
                        {
                            "name": "user",
                            "type": "IRegister",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "IRegister",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { environment } from 'src/environments/environment'\r\nimport { Router } from '@angular/router'\r\nimport { tap } from 'rxjs/operators'\r\nimport { Observable } from 'rxjs'\r\n\r\ninterface ILogin {\r\n    identifier: string\r\n    password: string\r\n}\r\n\r\ninterface IRegister {\r\n    username: string\r\n    email: string\r\n    password: string\r\n}\r\n\r\n@Injectable()\r\nexport class UserAuthService {\r\n    private apiUrl = environment.apiUrl\r\n    constructor(private http: HttpClient, private router: Router) {}\r\n    loginUser(user: ILogin) {\r\n        return this.http.post(this.apiUrl, user)\r\n    }\r\n    registerUser(user: IRegister): Observable<any> {\r\n        return this.http.post(`${this.apiUrl}/register`, user).pipe(\r\n            tap((response: any) => {\r\n                localStorage.setItem('token', response.jwt)\r\n            })\r\n        )\r\n    }\r\n    fetchMoviesSeries(seachVal: string, pageNo: number) {\r\n        const token = localStorage.getItem('token')\r\n        const headers = { Authorization: `Bearer ${token}` }\r\n\r\n        return this.http.get(\r\n            `https://api.themoviedb.org/3/search/multi?query=${seachVal}&api_key=1d42d448b0d527e767f463355d242d88&language=en-US&page=${pageNo}&include_adult=false`,\r\n            { headers }\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Removes the token from localStorage and navigates the user to the login page.\r\n     * After clearing the token, it waits for 2 seconds before navigating to the login page.\r\n     * This method is called when the user logs out.\r\n     */\r\n    logOutUser() {\r\n        localStorage.clear()\r\n        setTimeout(() => {\r\n            this.router.navigate(['/login'])\r\n        }, 1000)\r\n    }\r\n\r\n    fetchTrendingMovies() {\r\n        const token = localStorage.getItem('token')\r\n        const headers = { Authorization: `Bearer ${token}` }\r\n        return this.http.get('https://api.themoviedb.org/3/trending/movie/week?api_key=1d42d448b0d527e767f463355d242d88', {\r\n            headers,\r\n        })\r\n    }\r\n\r\n    fetchPopularMovies() {\r\n        const token = localStorage.getItem('token')\r\n        const headers = { Authorization: `Bearer ${token}` }\r\n        return this.http.get('https://api.themoviedb.org/3/movie/popular?api_key=1d42d448b0d527e767f463355d242d88&language=en-US&page=3', {\r\n            headers,\r\n        })\r\n    }\r\n\r\n    fetchMovieData(movieId: number) {\r\n        return this.http.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=1d42d448b0d527e767f463355d242d88`)\r\n    }\r\n\r\n    fetchMovieCast(movieId: number) {\r\n        return this.http.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=1d42d448b0d527e767f463355d242d88`)\r\n    }\r\n    logoutUser() {\r\n        localStorage.clear()\r\n    }\r\n    fetchMovieGenre(movieSeries: string) {\r\n        return this.http.get(\r\n            `https://api.themoviedb.org/3/genre/${movieSeries}/list?api_key=1d42d448b0d527e767f463355d242d88&language=en-US`\r\n        )\r\n    }\r\n    fetchMovieGenreDetails(movieSeries: string, pageNo: number, genreId: string) {\r\n        return this.http.get(\r\n            `https://api.themoviedb.org/3/discover/${movieSeries}?api_key=1d42d448b0d527e767f463355d242d88&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${pageNo}&with_genres=${genreId}`\r\n        )\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [
        {
            "name": "AuthGuardService",
            "id": "injectable-AuthGuardService-cd9de8ae55fbe0585606b7ec0f64b76fb0e075cb95ce18ae91aa11f8dc7e58aa0043316deb9f0c9cdc9926ba02baffea01b20c7252055f91876d9c9bcec7f82e",
            "file": "src/app/services/auth-guard.service.ts",
            "properties": [
                {
                    "name": "jwtHelper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "JwtHelperService",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "router",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Router",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isAuthenticated",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core'\r\nimport { CanActivate, Router } from '@angular/router'\r\nimport { JwtHelperService } from '@auth0/angular-jwt'\r\n\r\n@Injectable()\r\nexport class AuthGuardService implements CanActivate {\r\n    constructor(public router: Router, public jwtHelper: JwtHelperService) {}\r\n\r\n    private isAuthenticated(): boolean {\r\n        const token = localStorage.getItem('token')\r\n        return !this.jwtHelper.isTokenExpired(token)\r\n    }\r\n\r\n    canActivate(): boolean {\r\n        if (!this.isAuthenticated()) {\r\n            this.router.navigate(['/login'])\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "jwtHelper",
                        "type": "JwtHelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "jwtHelper",
                        "type": "JwtHelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        },
        {
            "name": "LoginRegisterAuthService",
            "id": "injectable-LoginRegisterAuthService-24ca399cb72e42419967ff822c846566b1fb17c96194be2b5e305ba3478f620529b42547e4124dc4f56b0a8135acbbbd497f43ca423a253cb2422746c5bd6903",
            "file": "src/app/services/login-register-auth.service.ts",
            "properties": [
                {
                    "name": "jwtHelper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "JwtHelperService",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "router",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Router",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isAuthenticated",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core'\r\nimport { CanActivate, Router } from '@angular/router'\r\nimport { JwtHelperService } from '@auth0/angular-jwt'\r\n\r\n@Injectable()\r\nexport class LoginRegisterAuthService implements CanActivate {\r\n    constructor(public router: Router, public jwtHelper: JwtHelperService) {}\r\n\r\n    private isAuthenticated(): boolean {\r\n        const token = localStorage.getItem('token')\r\n        return !this.jwtHelper.isTokenExpired(token)\r\n    }\r\n\r\n    canActivate(): boolean {\r\n        if (this.isAuthenticated()) {\r\n            this.router.navigate(['/home'])\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "jwtHelper",
                        "type": "JwtHelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "jwtHelper",
                        "type": "JwtHelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        }
    ],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-57f7842a3644b3cfc6b077cdaa16c6af2adafc5a5aae5478421089d3390f7a12930516c0596c51b8777447492a8f53d13d3a8eb6d8042257efcdec8c033732cc",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'ott-app'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\r\nimport { FormControl, Validators } from '@angular/forms'\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent {\r\n    title = 'ott-app'\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/styles/index\";\r\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<router-outlet></router-outlet>\r\n"
        },
        {
            "name": "BannerComponent",
            "id": "component-BannerComponent-571aef9d93dad238051d1d13f62994a44630859ce61bea5f6fec42b0d698c6c37cc0d11c204a2b7bc5d8a58c20550b4e5fe0d66570aa39b900f3847e9510fc79",
            "file": "src/app/components/banner/banner.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-banner",
            "styleUrls": [
                "./banner.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./banner.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "background",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "overview",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "voteAverage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "year",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core'\r\n\r\n@Component({\r\n    selector: 'app-banner',\r\n    templateUrl: './banner.component.html',\r\n    styleUrls: ['./banner.component.scss'],\r\n})\r\nexport class BannerComponent {\r\n    @Input() background: string = ''\r\n    @Input() year: string = ''\r\n    @Input() overview: string = ''\r\n    @Input() title: string = ''\r\n    @Input() voteAverage: string = ''\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\r\n\r\n.background-body {\r\n    height: 400px;\r\n    background-repeat: no-repeat;\r\n    margin-top: $spacing-xl;\r\n    background-size: cover;\r\n    background-position: center;\r\n}\r\n.banner-info {\r\n    color: $white;\r\n    width: 60%;\r\n    height: 100%;\r\n    padding: $spacing-xsm 0 $spacing-xsm $spacing-lgs;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n}\r\n.banner-title {\r\n    margin-bottom: $spacing-xxxs;\r\n}\r\n.second-line-detail {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: $spacing-xxxs;\r\n    margin-bottom: $spacing-xxxs;\r\n}\r\n@media (max-width: 768px) {\r\n    .banner-title {\r\n        font-size: $font-size-normal;\r\n    }\r\n    .banner-info {\r\n        width: 100%;\r\n        padding: $spacing-xsm $spacing-lgs;\r\n    }\r\n}\r\n",
                    "styleUrl": "./banner.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div\r\n    class=\"background-body\"\r\n    [style.backgroundImage]=\"\r\n        'linear-gradient(to right, rgba(128, 128, 128, 1) 0%, rgba(128, 128, 128, 0.7) 50%, rgba(128, 128, 128, 0) 100%),url(' +\r\n        background +\r\n        ')'\r\n    \"\r\n>\r\n    <div class=\"banner-info\">\r\n        <h2 class=\"banner-title\">\r\n            {{ title }}\r\n        </h2>\r\n        <div class=\"second-line-detail\">\r\n            <p>Vote: {{ voteAverage }}</p>\r\n            <p>.</p>\r\n            <p class=\"detail-year\">{{ year }}</p>\r\n        </div>\r\n        <p class=\"banner-detail\">\r\n            {{ overview }}\r\n        </p>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "BookmarkIconComponent",
            "id": "component-BookmarkIconComponent-9aea432504e0f1c484673f5cc777ec8bf3f99bc1681f043a4d9440c573ec5cca71b185301223baee14fe9ebfad0a38d1a2ce77ad37a8cbed0343baa42d70cf50",
            "file": "src/app/components/bookmark-icon/bookmark-icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-bookmark-icon",
            "styleUrls": [
                "./bookmark-icon.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./bookmark-icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "image",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "year",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "removeMovie",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "isBookmark",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "checkBookmarkStatus",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onBookmark",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core'\r\nimport { BookmarkService } from 'src/app/services/bookmark.service'\r\n\r\n@Component({\r\n    selector: 'app-bookmark-icon',\r\n    templateUrl: './bookmark-icon.component.html',\r\n    styleUrls: ['./bookmark-icon.component.scss'],\r\n})\r\nexport class BookmarkIconComponent implements OnInit {\r\n    isBookmark = false\r\n    @Input() title: string = ''\r\n    @Input() image: string = ''\r\n    @Input() year: string = ''\r\n    @Input() label: string = ''\r\n    @Input() id: string = ''\r\n    @Output() removeMovie = new EventEmitter()\r\n\r\n    constructor(private bookmark: BookmarkService) {}\r\n\r\n    ngOnInit() {\r\n        this.checkBookmarkStatus()\r\n    }\r\n\r\n    checkBookmarkStatus() {\r\n        const bookmarkedItems = JSON.parse(localStorage.getItem('bookmarkedItems') ?? '[]')\r\n        console.log(bookmarkedItems)\r\n        const index = bookmarkedItems.filter((item: any) => item.id === this.id).length - 1\r\n        if (index !== -1) {\r\n            this.isBookmark = true\r\n        }\r\n    }\r\n\r\n    onBookmark(event: Event) {\r\n        event.stopPropagation()\r\n        if (this.isBookmark === false) {\r\n            const newMovieBookmark = {\r\n                title: this.title,\r\n                label: this.label,\r\n                image: this.image,\r\n                id: this.id,\r\n                year: this.year,\r\n            }\r\n            this.bookmark.addItem(newMovieBookmark)\r\n            this.isBookmark = true\r\n        } else if (this.isBookmark) {\r\n            this.bookmark.removeItem(this.id)\r\n            this.removeMovie.emit()\r\n\r\n            this.isBookmark = false\r\n        }\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\r\n\r\n.bookmark-icon {\r\n    position: absolute;\r\n    top: $spacing-xxxs;\r\n    right: $spacing-sml;\r\n    z-index: 2;\r\n    width: 15px !important;\r\n}\r\n\r\n.btn-container {\r\n    background: #111111;\r\n    opacity: 0.4;\r\n    width: $spacing-lgs;\r\n    height: $spacing-lgs;\r\n    border-radius: 50%;\r\n    position: absolute;\r\n    top: 4%;\r\n    right: 6%;\r\n    z-index: 0;\r\n    border: none;\r\n}\r\n",
                    "styleUrl": "./bookmark-icon.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "bookmark",
                        "type": "BookmarkService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "bookmark",
                        "type": "BookmarkService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<button class=\"btn-container\" (click)=\"onBookmark($event)\">\r\n    <img [src]=\"isBookmark ? 'assets/bookmarked.png' : 'assets/notBookmarked.png'\" class=\"bookmark-icon\" alt=\"bookmark\" />\r\n</button>\r\n"
        },
        {
            "name": "BookmarkPageComponent",
            "id": "component-BookmarkPageComponent-0edef2e0e2e8a4cbceaf3f5b7dcfac2a382f1b8bdd2493d913051a063f152b3e60daabda44f772d29eec40776901a1e41d908b272cbc59cb6b11b0504d0a520c",
            "file": "src/app/modules/bookmark-page/bookmark-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-bookmark-page",
            "styleUrls": [
                "./bookmark-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./bookmark-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "bookmarkedCards",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "imageBaseUrl",
                    "defaultValue": "environment.imageBaseUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "getItems",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onMovieRemoval",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core'\r\nimport { environment } from 'src/environments/environment'\r\n\r\n@Component({\r\n    selector: 'app-bookmark-page',\r\n    templateUrl: './bookmark-page.component.html',\r\n    styleUrls: ['./bookmark-page.component.scss'],\r\n})\r\nexport class BookmarkPageComponent implements OnInit {\r\n    imageBaseUrl: string = environment.imageBaseUrl\r\n    bookmarkedCards: any[] = []\r\n    ngOnInit(): void {\r\n        this.getItems()\r\n    }\r\n    onMovieRemoval() {\r\n        this.getItems()\r\n    }\r\n    getItems() {\r\n        const card: any = localStorage.getItem('bookmarkedItems')\r\n        this.bookmarkedCards = JSON.parse(card)\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\r\n\r\n.bookmark-title {\r\n    color: $white;\r\n    font-size: $font-size-xxl;\r\n    line-height: 1.5;\r\n    margin-bottom: $spacing-normal;\r\n    margin-top: $spacing-lg;\r\n}\r\n\r\n.movie {\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 1fr);\r\n    grid-gap: $spacing-md;\r\n    background-color: $theme-color-base;\r\n}\r\n@media (max-width: 768px) {\r\n    .movie {\r\n        grid-template-columns: repeat(2, 1fr);\r\n    }\r\n    .search-results {\r\n        padding: 0 $spacing-xsm;\r\n    }\r\n}\r\n@media (max-width: 420px) {\r\n    .movie {\r\n        grid-template-columns: repeat(1, 1fr);\r\n    }\r\n}\r\n",
                    "styleUrl": "./bookmark-page.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"bookmark-title\">{{ bookmarkedCards.length === 0 ? 'No Bookmarked Items' : 'Bookmarked Movies' }}</div>\r\n<div class=\"movie\">\r\n    <div *ngFor=\"let movie of bookmarkedCards\">\r\n        <app-movie-series-card\r\n            routerLink=\"details/{{ movie.id }}\"\r\n            label=\"{{ movie.label }}\"\r\n            title=\"{{ movie.title }}\"\r\n            year=\"{{ movie.year }}\"\r\n            [image]='imageBaseUrl + movie.image'\r\n            icon=\"{{ movie.label === 'Movie' ? 'assets/movie-icon.png' : 'assets/series-icon.png' }}\"\r\n            id=\"{{ movie.id }}\"\r\n            (removeMovie)=\"onMovieRemoval()\"\r\n        ></app-movie-series-card>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-8ceaf520f96e5437b08eeda244d84efb29effe62ddca4fc38eaa229085c2a1126c5715e61445bae741505aca1e4d377b350cb05fadd1dc45d9b2bbf7527029f1",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 747,
                            "end": 761,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 748,
                                "end": 756,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-button',\r\n  template: ` <button\r\n    type=\"button\"\r\n    (click)=\"onClick.emit($event)\"\r\n    [ngClass]=\"classes\"\r\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n  >\r\n    {{ label }}\r\n  </button>`,\r\n  styleUrls: ['./button.css'],\r\n})\r\nexport default class ButtonComponent {\r\n  /**\r\n   * Is this the principal call to action on the page?\r\n   */\r\n  @Input()\r\n  primary = false;\r\n\r\n  /**\r\n   * What background color to use\r\n   */\r\n  @Input()\r\n  backgroundColor?: string;\r\n\r\n  /**\r\n   * How large should the button be?\r\n   */\r\n  @Input()\r\n  size: 'small' | 'medium' | 'large' = 'medium';\r\n\r\n  /**\r\n   * Button contents\r\n   *\r\n   * @required\r\n   */\r\n  @Input()\r\n  label = 'Button';\r\n\r\n  /**\r\n   * Optional click handler\r\n   */\r\n  @Output()\r\n  onClick = new EventEmitter<Event>();\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\r\n\r\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  font-weight: 700;\r\n  border: 0;\r\n  border-radius: 3em;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  line-height: 1;\r\n}\r\n.storybook-button--primary {\r\n  color: white;\r\n  background-color: #1ea7fd;\r\n}\r\n.storybook-button--secondary {\r\n  color: #333;\r\n  background-color: transparent;\r\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\r\n}\r\n.storybook-button--small {\r\n  font-size: 12px;\r\n  padding: 10px 16px;\r\n}\r\n.storybook-button--medium {\r\n  font-size: 14px;\r\n  padding: 11px 20px;\r\n}\r\n.storybook-button--large {\r\n  font-size: 16px;\r\n  padding: 12px 24px;\r\n}\r\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-e0cf9f722e342d5bac30ff03e121ce5adcf16b958f68a6e69b0c2316e0c0d0d24cb8ea2d2f47bb83b7fb41f9f80ead0a14fc849ace7e6b65b5c1608db5f8b53f-1",
            "file": "src/app/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'small'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "\"large\" | \"small\"",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "\"primary\" | \"secondary\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input} from '@angular/core'\r\n\r\n@Component({\r\n    selector: 'app-button',\r\n    templateUrl: './button.component.html',\r\n    styleUrls: ['./button.component.scss'],\r\n})\r\nexport class ButtonComponent {\r\n    @Input() label = ''\r\n    @Input() disabled = false\r\n    @Input() type: 'primary' | 'secondary' = 'primary'\r\n    @Input() size: 'large' | 'small' = 'small'\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\r\n\r\nbutton {\r\n    border-radius: $border-radius-sm;\r\n    color: $white;\r\n    font-size: $font-size-sm;\r\n    line-height: 1.5;\r\n    border: none;\r\n    width: 174px;\r\n    padding: $spacing-xs 0;\r\n    color: $white;\r\n\r\n    &.large {\r\n        padding: $spacing-sm;\r\n        background-color: $light-grey;\r\n        width: auto;\r\n        font-size: $font-size-xs;\r\n    }\r\n\r\n    &.primary {\r\n        background-color: $dark-red;\r\n        &[disabled] {\r\n            background-color: $light-grey;\r\n        }\r\n        &:not([disabled]) {\r\n            cursor: pointer;\r\n        }\r\n    }\r\n    &.secondary {\r\n        color: $dark-blue-tint;\r\n        background-color: $silver;\r\n        cursor: pointer;\r\n        &[disabled] {\r\n            opacity: 0.5;\r\n        }\r\n    }\r\n}\r\n@media (max-width: 768px) {\r\n    button {\r\n        font-size: $font-size-xs;\r\n        width: 124px;\r\n    }\r\n}\r\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ButtonComponent-1",
            "templateData": "<button\r\n    [ngClass]=\"{\r\n        large: size === 'large',\r\n        primary: type === 'primary',\r\n        secondary: type === 'secondary'\r\n    }\"\r\n    [disabled]=\"disabled\"\r\n    type=\"submit\"\r\n>\r\n    {{ label }}\r\n</button>\r\n"
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-36cd308e82d8f403828843c8d17ea985bff7aea05663e9b6b2834dbf64dee00f4cc970f4ce8d8e7d3ea536191ac9748fac47bdeefc34c8b345713d0cb2393c6c",
            "file": "src/app/components/card/card.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card",
            "styleUrls": [
                "./card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "type",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "\"primary\" | \"secondary\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core'\r\n\r\n@Component({\r\n    selector: 'app-card',\r\n    templateUrl: './card.component.html',\r\n    styleUrls: ['./card.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class CardComponent {\r\n    @Input() type: 'primary' | 'secondary' = 'primary'\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\r\n\r\n.card-container {\r\n    border-radius: $border-radius-md;\r\n    padding: $spacing-xxl $spacing-lg;\r\n    width: 100%;\r\n    color: $white;\r\n    height: 100%;\r\n\r\n    &.primary {\r\n        background-color: $dark-blue-tint;\r\n    }\r\n\r\n    &.secondary {\r\n        background-color: $black;\r\n    }\r\n}\r\n@media (max-width: 768px) {\r\n    .card-container {\r\n        padding: $spacing-md;\r\n        border-radius: $border-radius-sm;\r\n    }\r\n}\r\n",
                    "styleUrl": "./card.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div\r\n    [ngClass]=\"{\r\n        primary: type === 'primary',\r\n        secondary: type === 'secondary'\r\n    }\"\r\n    class=\"card-container\"\r\n>\r\n    <ng-content></ng-content>\r\n</div>\r\n"
        },
        {
            "name": "CastMemberComponent",
            "id": "component-CastMemberComponent-dc3f67207f959dd4a262e1bb78e3cf1765d405d024c2160d467ba15654d1c8a000097bfd3c4f101105ee132f39f1c11033603f28c36d4c938b321908eb7e8fd7",
            "file": "src/app/components/cast-member/cast-member.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-cast-member",
            "styleUrls": [
                "./cast-member.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./cast-member.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-cast-member',\r\n    templateUrl: './cast-member.component.html',\r\n    styleUrls: ['./cast-member.component.scss'],\r\n})\r\nexport class CastMemberComponent {\r\n    @Input() name!: string\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\r\n\r\n.cast-member {\r\n    display: inline-block;\r\n    border: 1px solid $white;\r\n    border-radius: $border-radius-sm;\r\n    margin-right: $spacing-xs;\r\n    margin-bottom: $spacing-xs;\r\n    padding: $spacing-xxs $spacing-sml;\r\n    font-size: $font-size-xs;\r\n    line-height: 1.5;\r\n    color: $white;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n    .cast-member {\r\n        font-size: $font-size-xms;\r\n    }\r\n}\r\n",
                    "styleUrl": "./cast-member.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"cast-member\">\r\n    {{ name }}\r\n</div>\r\n\r\n"
        },
        {
            "name": "DashboardComponent",
            "id": "component-DashboardComponent-7077bff6e13dd8161f4ed7be9b97388a47336fab1e7cd2368357378f6433077bf40fd804d8f57fbe6f11f6155c907e34848008b6e2584e97cff36a9da657ce03",
            "file": "src/app/components/dashboard/dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dashboard",
            "styleUrls": [
                "./dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dashboard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>dashboard works!</p>\r\n"
        },
        {
            "name": "DashboardComponent",
            "id": "component-DashboardComponent-a7d8275cb07864c44dce6efa55d633de5e6490d7510ff07312965750a2a4f46bbedeac059c85985684d26792164247d5e9691a1a13c1dce5ec25974d0c4214c3-1",
            "file": "src/app/modules/dashboard/dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dashboard",
            "styleUrls": [
                "./dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dashboard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "allPopularMovies",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "allTrendingMovies",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "customOptions",
                    "defaultValue": "{\r\n        loop: false,\r\n        mouseDrag: false,\r\n        touchDrag: false,\r\n        pullDrag: false,\r\n        dots: false,\r\n        navSpeed: 600,\r\n        navText: ['<img src=\"/assets/prev-button.svg\">', '<img src=\"/assets/next-button.svg\">'],\r\n        responsive: {\r\n            0: {\r\n                items: 1,\r\n            },\r\n            200: {\r\n                items: 2,\r\n            },\r\n            300: {\r\n                items: 2,\r\n            },\r\n            760: {\r\n                items: 3,\r\n            },\r\n            1000: {\r\n                items: 3,\r\n            },\r\n        },\r\n        nav: true,\r\n    }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OwlOptions",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "imageBaseUrl",
                    "defaultValue": "environment.imageBaseUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "fetchPopularMovies",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "fetchTrendingMovies",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { HttpClient } from '@angular/common/http'\r\nimport { Component, OnInit } from '@angular/core'\r\nimport { Router } from '@angular/router'\r\nimport { UserAuthService } from 'src/app/services/user-auth.service'\r\nimport { OwlOptions } from 'ngx-owl-carousel-o'\r\nimport { environment } from 'src/environments/environment'\r\n\r\n@Component({\r\n    selector: 'app-dashboard',\r\n    templateUrl: './dashboard.component.html',\r\n    styleUrls: ['./dashboard.component.scss'],\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n    imageBaseUrl: string = environment.imageBaseUrl;\r\n    customOptions: OwlOptions = {\r\n        loop: false,\r\n        mouseDrag: false,\r\n        touchDrag: false,\r\n        pullDrag: false,\r\n        dots: false,\r\n        navSpeed: 600,\r\n        navText: ['<img src=\"/assets/prev-button.svg\">', '<img src=\"/assets/next-button.svg\">'],\r\n        responsive: {\r\n            0: {\r\n                items: 1,\r\n            },\r\n            200: {\r\n                items: 2,\r\n            },\r\n            300: {\r\n                items: 2,\r\n            },\r\n            760: {\r\n                items: 3,\r\n            },\r\n            1000: {\r\n                items: 3,\r\n            },\r\n        },\r\n        nav: true,\r\n    }\r\n\r\n    allTrendingMovies: any\r\n    allPopularMovies: any\r\n\r\n    constructor(private router: Router, private http: HttpClient, private userAuth: UserAuthService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.fetchTrendingMovies()\r\n        this.fetchPopularMovies()\r\n    }\r\n\r\n    private fetchTrendingMovies() {\r\n        this.userAuth.fetchTrendingMovies().subscribe((res: any) => {\r\n            console.log(res)\r\n            this.allTrendingMovies = res.results\r\n        })\r\n    }\r\n\r\n    private fetchPopularMovies() {\r\n        this.userAuth.fetchPopularMovies().subscribe((res: any) => {\r\n            console.log(res)\r\n            this.allPopularMovies = res.results\r\n            console.log(this.allPopularMovies)\r\n        })\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\r\n\r\n.movie-type-title {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: $spacing-xl;\r\n    flex-wrap: wrap;\r\n}\r\n\r\n.movie-type-label {\r\n    font-weight: 400;\r\n    font-size: $font-size-xxl;\r\n    line-height: 1.5;\r\n    color: $white;\r\n}\r\n\r\n.movie-type-trending {\r\n    margin-right: $spacing-md;\r\n}\r\n\r\n.movie {\r\n    font-size: $font-size-xs;\r\n    line-height: 1.5;\r\n    letter-spacing: 0.07rem;\r\n    color: $white;\r\n    padding: $spcaing-xsl $spacing-sm;\r\n    border: 2px solid $white-tint;\r\n    border-radius: $spacing-xs;\r\n    display: inline-block;\r\n    margin-left: $spacing-sm;\r\n}\r\n\r\n.movie-type-popular {\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    grid-gap: $spacing-md;\r\n}\r\n\r\n.movies {\r\n    background-color: $theme-color-base;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n    .movie-type-popular {\r\n        grid-template-columns: repeat(2, 1fr);\r\n    }\r\n}\r\n",
                    "styleUrl": "./dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userAuth",
                        "type": "UserAuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 44,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userAuth",
                        "type": "UserAuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "DashboardComponent-1",
            "templateData": "<div class=\"movies\">\r\n    <div class=\"movie-type-title\">\r\n        <p class=\"movie-type-label\">Trending</p>\r\n        <p class=\"movie\">MOVIE</p>\r\n    </div>\r\n    <div class=\"movie-type\">\r\n        <div *ngIf=\"allTrendingMovies.length > 0\">\r\n            <owl-carousel-o [options]=\"customOptions\">\r\n                <ng-template carouselSlide *ngFor=\"let movie of allTrendingMovies\">\r\n                    <div class=\"movie-type-trending\">\r\n                        <app-movie-series-card\r\n                            routerLink=\"details/{{ movie.id }}\"\r\n                            title=\"{{ movie.title || movie.name }}\"\r\n                            [image]='imageBaseUrl + movie.poster_path'\r\n                            icon=\"{{ movie.media_type === 'tv' ? 'assets/series-icon.png' : 'assets/movie-icon.png' }}\"\r\n                            label=\"{{ movie.media_type === 'tv' ? 'TV series' : 'Movie' }}\"\r\n                            year=\"{{\r\n                                movie.media_type === 'movie' ? movie.release_date.split('-')[0] : movie.first_air_date.split('-')[0]\r\n                            }}\"\r\n                            id=\"{{ movie.id }}\"\r\n                        ></app-movie-series-card>\r\n                    </div>\r\n                </ng-template>\r\n            </owl-carousel-o>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"movie-type-title\">\r\n        <p class=\"movie-type-label\">Popular</p>\r\n        <p class=\"movie\">MOVIE</p>\r\n    </div>\r\n    <div class=\"movie-type-popular\">\r\n        <div *ngFor=\"let movie of allPopularMovies\">\r\n            <app-movie-series-card\r\n                routerLink=\"/home/details/{{ movie.id }}\"\r\n                title=\"{{ movie.original_title }}\"\r\n                [image]='imageBaseUrl + movie.poster_path'\r\n                icon=\"{{ movie.media_type === 'tv' ? 'assets/series-icon.png' : 'assets/movie-icon.png' }}\"\r\n                label=\"{{ movie.media_type === 'tv' ? 'TV series' : 'Movie' }}\"\r\n                year=\"{{ movie.release_date.split('-')[0] }}\"\r\n                id=\"{{ movie.id }}\"\r\n            ></app-movie-series-card>\r\n        </div>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "DetailPageComponent",
            "id": "component-DetailPageComponent-640a02e1839d95b2309fab467e201a08d167b2257f8d5e23ee052d82d75c1fea16370185a5c23f15c4af92806eebafc0201a90d66282dc8e02c9eacec8839350",
            "file": "src/app/modules/detail-page/detail-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-detail-page",
            "styleUrls": [
                "./detail-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./detail-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "movie",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "movieCredits",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "movieId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { UserAuthService } from 'src/app/services/user-auth.service';\r\n\r\n@Component({\r\n    selector: 'app-detail-page',\r\n    templateUrl: './detail-page.component.html',\r\n    styleUrls: ['./detail-page.component.scss'],\r\n})\r\nexport class DetailPageComponent {\r\n    movieId!: number\r\n    movieCredits: any\r\n    movie: any\r\n\r\n    constructor(private route: ActivatedRoute, private http: HttpClient, private userAuth: UserAuthService) {}\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe((params) => {\r\n            this.movieId = params['id']\r\n            console.log(this.movieId) // Display the movie ID in the console\r\n\r\n            this.userAuth.fetchMovieData(this.movieId).subscribe((movie) => {\r\n                this.movie = movie\r\n                console.log(movie) // Display the movie details in the console\r\n            })\r\n\r\n            // Fetch the movie credits data\r\n            this.userAuth.fetchMovieCast(this.movieId).subscribe((credits) => {\r\n                this.movieCredits = credits\r\n                console.log(credits) // Display the movie credits details in the console\r\n            })\r\n        })\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\r\n\r\n.movie {\r\n    background-color: $theme-color-base;\r\n}\r\n\r\n.movie-conatiner {\r\n    display: flex;\r\n    gap: 5%;\r\n    margin: 0;\r\n    padding: 2%;\r\n}\r\n\r\n.movie-img {\r\n    border-radius: $border-radius-lg;\r\n    height: 35rem;\r\n    margin: 0;\r\n    width: 35%;\r\n}\r\n\r\n.movie-title {\r\n    font-size: $font-size-xxxl;\r\n    line-height: 1.5;\r\n    color: $white;\r\n}\r\n\r\n.movie-rating {\r\n    font-size: $font-size-xxl;\r\n    line-height: 1.5;\r\n    color: $white;\r\n    margin-right: $spacing-sm;\r\n}\r\n\r\n.movie-detail {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    margin-top: $spacing-xxsm;\r\n}\r\n\r\n.movie-label {\r\n    font-size: $font-size-normal;\r\n    line-height: 1.5;\r\n    color: $white;\r\n    margin-top: $spacing-md;\r\n}\r\n\r\n.movie-synopsis {\r\n    font-size: $font-size-sm;\r\n    line-height: 1.75;\r\n    color: $white;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n    .movie-conatiner {\r\n        align-items: center;\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n\r\n    .movie-img {\r\n        width: 100%;\r\n    }\r\n\r\n    .movie-title {\r\n        font-size: $font-size-md;\r\n    }\r\n\r\n    .movie-rating {\r\n        font-size: $font-size-sm;\r\n    }\r\n\r\n    .movie-label {\r\n        font-size: $font-size-sm;\r\n    }\r\n\r\n    .movie-synopsis {\r\n        font-size: $font-size-xs;\r\n        line-height: 2;\r\n    }\r\n}\r\n",
                    "styleUrl": "./detail-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userAuth",
                        "type": "UserAuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userAuth",
                        "type": "UserAuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"movie\">\r\n    <div *ngIf=\"movie\">\r\n        <div class=\"movie-conatiner\">\r\n            <img [src]=\"'https://www.themoviedb.org/t/p/w500' + movie.poster_path\" class=\"movie-img\"/>\r\n            <div>\r\n                <h1 class=\"movie-title\">{{ movie.original_title }}</h1>\r\n                <span class=\"movie-rating\">{{ (movie.vote_average / 2).toFixed(1) }}</span>\r\n                <app-star-rating rating=\"{{ movie.vote_average / 2 }}\"></app-star-rating>\r\n                <div class=\"movie-detail\">\r\n                    <app-movie-detail label=\"Length\" movieDetail=\"{{ movie.runtime }} mins.\"></app-movie-detail>\r\n                    <app-movie-detail label=\"Language\" movieDetail=\"{{ movie.spoken_languages[0].english_name }}\"></app-movie-detail>\r\n                    <app-movie-detail label=\"Year\" movieDetail=\"{{ movie.release_date.split('-')[0] }}\"></app-movie-detail>\r\n                    <app-movie-detail label=\"Status\" movieDetail=\"{{ movie.status }}\"></app-movie-detail>\r\n                </div>\r\n                <div>\r\n                    <h2 class=\"movie-label\">Genres</h2>\r\n                    <app-genre-card *ngFor=\"let genre of movie.genres\" [genre]=\"genre.name\"></app-genre-card>\r\n                </div>\r\n                <h2 class=\"movie-label\">Synopsis</h2>\r\n                <span class=\"movie-synopsis\">{{ movie.overview }}</span>\r\n                <div>\r\n                    <h2 class=\"movie-label\">Casts</h2>\r\n                    <app-cast-member *ngFor=\"let castMember of movieCredits.cast\" [name]=\"castMember.name\"></app-cast-member>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n"
        },
        {
            "name": "DropDownMenuComponent",
            "id": "component-DropDownMenuComponent-9750047d093167bcdfcb6f3b5b6f1c7728c2645c5641893ef45a4b8c56b6ff8c711b68e4785454d0ede29ef758cd5d0c6759bb752ff88db3e890d61fa1103f99",
            "file": "src/app/components/drop-down-menu/drop-down-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-drop-down-menu",
            "styleUrls": [
                "./drop-down-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./drop-down-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "dropdownData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "IDropDownData[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit } from '@angular/core'\r\n\r\nexport interface IDropDownData {\r\n    name: string\r\n    onClick: () => void\r\n}\r\n\r\n@Component({\r\n    selector: 'app-drop-down-menu',\r\n    templateUrl: './drop-down-menu.component.html',\r\n    styleUrls: ['./drop-down-menu.component.scss'],\r\n})\r\nexport class DropDownMenuComponent {\r\n    @Input() dropdownData: IDropDownData[] = [];\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\r\n\r\n.dropdown-menu {\r\n    display: inline-block;\r\n    width: 120px;\r\n    vertical-align: top;\r\n    position: relative;\r\n    line-height: 1.5;\r\n    background-color: $white-tint;\r\n    padding: $spacing-xs 0px $spacing-xs 0px;\r\n    border-radius: $border-radius-sm;\r\n}\r\n\r\n.dropdown-menu :hover {\r\n    background-color: $silver;\r\n}\r\n\r\n.dropdown-menu-container {\r\n    font-family: 'Poppins';\r\n    font-size: $font-size-sm;\r\n    display: flex;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n}\r\n",
                    "styleUrl": "./drop-down-menu.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<span class=\"dropdown-menu\">\r\n    <span *ngFor=\"let item of dropdownData\" (click)=\"item.onClick()\" class=\"dropdown-menu-container\">\r\n        {{ item.name }}\r\n    </span>\r\n</span>\r\n\r\n\r\n"
        },
        {
            "name": "GenreCardComponent",
            "id": "component-GenreCardComponent-dec9f5ae5c7ba6c25c47008703c4e5971c3b83c4f827a43b91f3f4af2da7b4cacb3083a31cf7fbea7edfb1ec073c15eca6c821bbb23c8a3a23cf87d694892e7a",
            "file": "src/app/components/genre-card/genre-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-genre-card",
            "styleUrls": [
                "./genre-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./genre-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "genre",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-genre-card',\r\n    templateUrl: './genre-card.component.html',\r\n    styleUrls: ['./genre-card.component.scss'],\r\n})\r\nexport class GenreCardComponent {\r\n    @Input() genre!: string\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\r\n\r\n.genre {\r\n    display: inline-block;\r\n    padding: $spacing-xxs $spacing-sml;\r\n    background-color: $white;\r\n    border-radius: $spacing-xs;\r\n    margin-right: $spacing-xs;\r\n    font-size: $font-size-sm;\r\n    line-height: 1.5;\r\n    color: $black;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n    .movie-detail {\r\n        font-size: $font-size-xs;\r\n    }\r\n}\r\n",
                    "styleUrl": "./genre-card.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<span class=\"genre\">{{ genre }}</span>"
        },
        {
            "name": "GenreComponent",
            "id": "component-GenreComponent-bd65a6db96dda29442b29bde8fe07b918192bae7b9b339409e475c8378ebc3a1a1790b69d08fec77e9b7e6d6be865fb48e7e7bbc2706672c96a9734b2d693304",
            "file": "src/app/components/genre/genre.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-genre",
            "styleUrls": [
                "./genre.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./genre.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "genre",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "routerURL",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string | null",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core'\r\n\r\n@Component({\r\n    selector: 'app-genre',\r\n    templateUrl: './genre.component.html',\r\n    styleUrls: ['./genre.component.scss'],\r\n})\r\nexport class GenreComponent {\r\n    @Input() genre: string = ''\r\n    @Input() color: string = ''\r\n    @Input() routerURL: string | null = null\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\r\n\r\n.genre-card {\r\n    display: block;\r\n    padding: 104px 0;\r\n    border-radius: $border-radius-lg;\r\n    border: none;\r\n    color: $white;\r\n    font-size: $font-size-md;\r\n    line-height: 1.5;\r\n    text-align: center;\r\n    text-decoration: none;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n    .genre-card {\r\n        font-size: $font-size-sm;\r\n        padding: $spacing-lgs 0;\r\n    }\r\n}\r\n",
                    "styleUrl": "./genre.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<a [routerLink]=\"routerURL\" [style.background-color]=\"color\" class=\"genre-card\">{{ genre }}</a>\r\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-bda17aa3451a9f731685153f2587877b8267c32007f05e7abad3581336e6bc02346a1b660e8c69c4d90b4526b6e047b3ac1f4246252c9dc83985c9148aab5e97",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { User } from './User';\r\n\r\n@Component({\r\n  selector: 'storybook-header',\r\n  template: `<header>\r\n    <div class=\"wrapper\">\r\n      <div>\r\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\r\n              fill=\"#FFF\"\r\n            />\r\n            <path\r\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\r\n              fill=\"#555AB9\"\r\n            />\r\n            <path\r\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\r\n              fill=\"#91BAF8\"\r\n            />\r\n          </g>\r\n        </svg>\r\n        <h1>Acme</h1>\r\n      </div>\r\n      <div>\r\n        <div *ngIf=\"user\">\r\n          <span class=\"welcome\">\r\n            Welcome, <b>{{ user.name }}</b\r\n            >!\r\n          </span>\r\n          <storybook-button\r\n            *ngIf=\"user\"\r\n            size=\"small\"\r\n            (onClick)=\"onLogout.emit($event)\"\r\n            label=\"Log out\"\r\n          ></storybook-button>\r\n        </div>\r\n        <div *ngIf=\"!user\">\r\n          <storybook-button\r\n            *ngIf=\"!user\"\r\n            size=\"small\"\r\n            class=\"margin-left\"\r\n            (onClick)=\"onLogin.emit($event)\"\r\n            label=\"Log in\"\r\n          ></storybook-button>\r\n          <storybook-button\r\n            *ngIf=\"!user\"\r\n            primary\r\n            size=\"small\"\r\n            primary=\"true\"\r\n            class=\"margin-left\"\r\n            (onClick)=\"onCreateAccount.emit($event)\"\r\n            label=\"Sign up\"\r\n          ></storybook-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </header>`,\r\n  styleUrls: ['./header.css'],\r\n})\r\nexport default class HeaderComponent {\r\n  @Input()\r\n  user: User | null = null;\r\n\r\n  @Output()\r\n  onLogin = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onLogout = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onCreateAccount = new EventEmitter<Event>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\r\n  padding: 15px 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\nsvg {\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\nh1 {\r\n  font-weight: 900;\r\n  font-size: 20px;\r\n  line-height: 1;\r\n  margin: 6px 0 6px 10px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\nbutton + button {\r\n  margin-left: 10px;\r\n}\r\n\r\n.welcome {\r\n  color: #333;\r\n  font-size: 14px;\r\n  margin-right: 10px;\r\n}\r\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HomePageComponent",
            "id": "component-HomePageComponent-e3ac10455f4408931bfdf0cd8eb9e4f0ae6ba9d4834f1b5024956ea11a614105aa6e171a58135b160016df5fd9e086dbbed2ed57d787e3c630a68677d836011b",
            "file": "src/app/modules/home-page/home-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home-page",
            "styleUrls": [
                "./home-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./home-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "inputPlaceholder",
                    "defaultValue": "'Search for movies or TV series'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "searchResult",
                    "args": [
                        {
                            "name": "query",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "query",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core'\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router'\r\n\r\n@Component({\r\n    selector: 'app-home-page',\r\n    templateUrl: './home-page.component.html',\r\n    styleUrls: ['./home-page.component.scss'],\r\n})\r\nexport class HomePageComponent implements OnInit {\r\n    inputPlaceholder = 'Search for movies or TV series'\r\n\r\n    constructor(private router: Router, private route: ActivatedRoute) {}\r\n\r\n    ngOnInit() {\r\n        this.router.events.subscribe((event) => {\r\n            if (event instanceof NavigationEnd) {\r\n                this.route.paramMap.subscribe((params) => {\r\n                    const query = params.get('query')\r\n                    if (this.router.url === '/home/movies' || query === 'movies') {\r\n                        this.inputPlaceholder = 'Search for movies'\r\n                    } else if (this.router.url === '/home/series' || query === 'series') {\r\n                        this.inputPlaceholder = 'Search for TV series'\r\n                    } else {\r\n                        this.inputPlaceholder = 'Search for movies or TV series'\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    searchResult(query: string) {\r\n        this.router.navigate(['/home/search', query])\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\r\n\r\n.home {\r\n    background-color: $theme-color-base;\r\n    min-height: 100vh;\r\n}\r\n\r\n.home-container {\r\n    padding: $spacing-md $spacing-xxxlg 0px $spacing-md;\r\n}\r\n\r\n.home-container-details {\r\n    display: flex;\r\n    flex-direction: row;\r\n    gap: $spacing-lg;\r\n}\r\n\r\n.search-bar-movies-card {\r\n    width: 100%;\r\n    min-width: $spacing-xxxs;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n    .home-container-details {\r\n        flex-direction: column-reverse;\r\n    }\r\n    .home-container {\r\n        padding: 0;\r\n    }\r\n    .search-bar-movies-card {\r\n        padding: $spacing-lgs $spacing-normal 0 $spacing-normal;\r\n    }\r\n}\r\n",
                    "styleUrl": "./home-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"home\">\r\n    <div class=\"home-container\">\r\n        <div class=\"home-container-details\">\r\n            <app-navigation-bar></app-navigation-bar>\r\n            <div class=\"search-bar-movies-card\">\r\n                <app-search-bar (search)=\"searchResult($event)\" [inputPlaceholder]=\"inputPlaceholder\"></app-search-bar>\r\n                <router-outlet></router-outlet>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-94fd9d6a55c455a66adc194e4b039d19f33df2d2ce59514495adf3db3e6fafeb0592a0249328c06b81c9cc66113122e6485b2642e35c64e23cf7c9723b51da93",
            "file": "src/app/components/input/input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => InputComponent), multi: true,\n}",
                    "type": "component"
                },
                {
                    "name": "{ provide: NG_VALIDATORS, useExisting: forwardRef(() => InputComponent), multi: true }",
                    "type": "component"
                }
            ],
            "selector": "app-input",
            "styleUrls": [
                "./input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "string | number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onChange",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "error$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 68,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "focusIn",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 69,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgControl",
                    "optional": true,
                    "description": "",
                    "line": 67,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onChangeFn",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 90
                },
                {
                    "name": "onTouchFn",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 92
                },
                {
                    "name": "validationAttempt",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "checkErrors",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 109,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 105,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "validate",
                    "args": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n    Component,\r\n    EventEmitter,\r\n    forwardRef,\r\n    Inject,\r\n    InjectFlags,\r\n    INJECTOR,\r\n    Injector,\r\n    Input,\r\n    OnInit,\r\n    Output,\r\n} from '@angular/core'\r\nimport { Subject } from 'rxjs'\r\nimport { AbstractControl, ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgControl, Validator } from '@angular/forms'\r\n\r\nconst VALIDATION_TXT: any = {\r\n    email: 'Invalid email',\r\n    password: 'Empty password',\r\n    required: 'Field is required',\r\n    username: 'Invalid username',\r\n    MATCH_PASSWORD: 'Password is not matching!',\r\n}\r\n\r\nexport function username(AC: AbstractControl): null | { username: boolean } {\r\n    const regex = /^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/\r\n    if (AC.value === null) {\r\n        return null\r\n    }\r\n    return regex.test(AC.value) ? null : { username: true }\r\n}\r\n\r\nexport function email(AC: AbstractControl): null | { email: boolean } {\r\n    const regex =\r\n        /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n    if (AC.value === null) {\r\n        return null\r\n    }\r\n    return AC.value.indexOf('@') > 64 || AC.value.length > 255 || !regex.test(AC.value) ? { email: true } : null\r\n}\r\n\r\nexport function passwordMatch(AC: AbstractControl): null | { MATCH_PASSWORD: boolean } {\r\n    if (AC.parent?.get('password')?.value === AC.value) return null\r\n    return { MATCH_PASSWORD: true }\r\n}\r\n\r\n@Component({\r\n    selector: 'app-input',\r\n    templateUrl: './input.component.html',\r\n    styleUrls: ['./input.component.scss'],\r\n    providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: forwardRef(() => InputComponent),\r\n            multi: true,\r\n        },\r\n\r\n        { provide: NG_VALIDATORS, useExisting: forwardRef(() => InputComponent), multi: true },\r\n    ],\r\n})\r\nexport class InputComponent implements ControlValueAccessor, OnInit, Validator {\r\n    @Input() label: string = ''\r\n    @Input() type: string = 'text'\r\n    @Input() placeholder: string = ''\r\n    @Input() value: string | number = ''\r\n    @Output() onChange = new EventEmitter<any>()\r\n\r\n    public ngControl?: NgControl\r\n    public error$ = new Subject()\r\n    public focusIn = false\r\n    public validationAttempt = false\r\n\r\n    constructor(@Inject(INJECTOR) private injector: Injector) {}\r\n\r\n    ngOnInit() {\r\n        this.ngControl = this.injector.get(NgControl, undefined, InjectFlags.Optional)\r\n    }\r\n\r\n    validate(control: AbstractControl): any {\r\n        setTimeout(() => {\r\n            if ((!this.focusIn && control.touched) || (this.focusIn && this.validationAttempt)) this.checkErrors()\r\n        })\r\n    }\r\n\r\n    set input(value: string) {\r\n        this.onChangeFn(value)\r\n        this.onTouchFn(value)\r\n        this.onChange.emit(value)\r\n    }\r\n\r\n    onChangeFn: any = () => {}\r\n\r\n    onTouchFn: any = () => {}\r\n\r\n    public writeValue(value: any) {\r\n        this.error$.next(undefined)\r\n        setTimeout(() => {\r\n            this.value = value\r\n        })\r\n    }\r\n\r\n    public registerOnChange(fn: any) {\r\n        this.onChangeFn = fn\r\n    }\r\n\r\n    public registerOnTouched(fn: any) {\r\n        this.onTouchFn = fn\r\n    }\r\n\r\n    public checkErrors(): void {\r\n        if (!this.ngControl?.control?.errors) {\r\n            this.error$.next(undefined)\r\n            return\r\n        }\r\n        const key = Object.keys(this.ngControl.control.errors)[0]\r\n        this.validationAttempt = true\r\n        this.error$.next(VALIDATION_TXT[key])\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\r\n\r\n.input-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: $spacing-lgs;\r\n    position: relative;\r\n}\r\n\r\n.input-container-label {\r\n    margin-bottom: $spacing-xs;\r\n    font-family: 'Poppins';\r\n    font-size: $font-size-sm;\r\n    line-height: 1.5;\r\n    color: $white;\r\n}\r\n.validation-msg {\r\n    margin-top: $spacing-xxs;\r\n    font-size: $font-size-xs;\r\n    position: absolute;\r\n    top: $spacing-xxxl;\r\n    color: $dark-red;\r\n}\r\n\r\n.input-container-value {\r\n    background-color: $dark-grey;\r\n    border-radius: $spacing-xs;\r\n    width: 338px;\r\n    height: $spacing-lgs;\r\n    font-size: $font-size-xs;\r\n    line-height: 1.5;\r\n    color: $silver;\r\n    padding: $spacing-xs $spacing-sm;\r\n    border: none;\r\n    width: 100%;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n    .input-container {\r\n        margin-bottom: $spacing-normal;\r\n        .input-container-label {\r\n            font-size: $font-size-xxs;\r\n        }\r\n        .input-container-value {\r\n            font-size: $font-size-s;\r\n        }\r\n    }\r\n}\r\n",
                    "styleUrl": "./input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 70,
                "jsdoctags": [
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor",
                "OnInit",
                "Validator"
            ],
            "accessors": {
                "input": {
                    "name": "input",
                    "setSignature": {
                        "name": "input",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 84,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<div class=\"input-container\">\r\n    <span class=\"input-container-label\">{{ label }} </span>\r\n    <input [(ngModel)]=\"input\" [type]=\"type\" [placeholder]=\"placeholder\" class=\"input-container-value\" />\r\n    <div class=\"validation-msg\">\r\n        <span *ngIf=\"error$ | async as error\" class=\"error-msg\">{{ error }}</span>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "LoginPageComponent",
            "id": "component-LoginPageComponent-094d8610f36a0a7355e10531f164b99c1ac4ebdb8f598d0b907edc6198c1614cadd0ab5b73a2c3cdebcbfb506696aa73d5b04ce03100ea4de04e44966004709a",
            "file": "src/app/modules/login-page/login-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login-page",
            "styleUrls": [
                "./login-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "errorMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "loginForm",
                    "defaultValue": "this.formBuilder.group({\r\n        email: this.formBuilder.control(null, [Validators.required, email]),\r\n        password: this.formBuilder.control(null, Validators.required),\r\n    })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSignUpClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'\r\nimport { UserAuthService } from 'src/app/services/user-auth.service'\r\nimport { Router } from '@angular/router'\r\nimport { email } from 'src/app/components/input/input.component'\r\n\r\n@Component({\r\n    selector: 'app-login-page',\r\n    templateUrl: './login-page.component.html',\r\n    styleUrls: ['./login-page.component.scss'],\r\n})\r\nexport class LoginPageComponent {\r\n    errorMessage: string = ''\r\n    constructor(private formBuilder: FormBuilder, private userauth: UserAuthService, private router: Router) {}\r\n\r\n    loginForm: FormGroup = this.formBuilder.group({\r\n        email: this.formBuilder.control(null, [Validators.required, email]),\r\n        password: this.formBuilder.control(null, Validators.required),\r\n    })\r\n\r\n    ngOnInit() {\r\n        this.loginForm.get('email')?.valueChanges.subscribe(() => {\r\n            this.errorMessage = ''\r\n        })\r\n        this.loginForm.get('password')?.valueChanges.subscribe(() => {\r\n            this.errorMessage = ''\r\n        })\r\n    }\r\n\r\n    onLogin() {\r\n        const user = {\r\n            identifier: this.loginForm.get('email')?.value,\r\n            password: this.loginForm.get('password')?.value,\r\n        }\r\n        this.userauth.loginUser(user).subscribe(\r\n            (response: any) => {\r\n                console.log('SignIn Successful', response)\r\n                localStorage.setItem('token', response.jwt)\r\n                this.router.navigate(['/home'])\r\n            },\r\n            (error) => {\r\n                console.error('SignIn failed:', error)\r\n                this.errorMessage = `SignIn failed, ${error.error.error.message}`\r\n            }\r\n        )\r\n    }\r\n\r\n    onSignUpClick() {\r\n        this.router.navigate(['/register'])\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\r\n\r\n.login {\r\n    background-image: $background-gradient, url('/assets/background-image.svg');\r\n    height: 100vh;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: $spacing-sml;\r\n    flex-direction: column;\r\n}\r\n\r\n.login-title {\r\n    font-size: $font-size-xl;\r\n    line-height: 1.5;\r\n    text-align: center;\r\n    color: $dark-red;\r\n    position: relative;\r\n    z-index: 1;\r\n    margin-bottom: $spacing-xsm;\r\n}\r\n\r\n.login-title-background {\r\n    position: relative;\r\n    z-index: 0;\r\n    margin-bottom: $spacing-lgs;\r\n\r\n    &:before {\r\n        content: '';\r\n        position: absolute;\r\n        z-index: -1;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        background-color: $black;\r\n        filter: blur(25px);\r\n    }\r\n}\r\n\r\n.login-card {\r\n    width: 870px;\r\n    max-width: 100%;\r\n}\r\n\r\n.signIn-title {\r\n    font-weight: 600;\r\n    font-size: $font-size-md;\r\n    line-height: 1.5;\r\n    align-items: center;\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-bottom: $spacing-lgs;\r\n    gap: $spacing-xxxs;\r\n}\r\n\r\n.signIn-suffix {\r\n    color: $dark-red;\r\n}\r\n\r\n.signIn-btn-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: $spacing-xxxxl;\r\n}\r\n\r\n.singIn-card {\r\n    flex: 0 0 50%;\r\n}\r\n\r\n.signUp {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100%;\r\n}\r\n\r\n.signUp-title {\r\n    font-weight: 600;\r\n    font-size: $font-size-md;\r\n    line-height: 1.5;\r\n    color: $aqua;\r\n}\r\n\r\n.signUp-suffix {\r\n    color: $bright-red;\r\n}\r\n\r\n.signUp-description {\r\n    font-weight: 500;\r\n    font-size: $font-size-xs;\r\n    line-height: 1.5;\r\n    color: $aqua;\r\n}\r\n\r\n.signUp-account {\r\n    color: $white;\r\n}\r\n\r\n.signUp-logo {\r\n    margin-top: $spacing-xxxl;\r\n    margin-bottom: $spacing-xl;\r\n    max-width: 100%;\r\n}\r\n\r\n.signUp-btn-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: $spacing-md;\r\n}\r\n\r\n.responseMessage {\r\n    text-align: center;\r\n    margin-top: $spacing-xs;\r\n    font-family: 'Poppins';\r\n    font-weight: 500;\r\n    font-size: $font-size-xs;\r\n    line-height: 1.5;\r\n}\r\n\r\n.error-message {\r\n    color: $bright-red;\r\n}\r\n\r\n.input-field {\r\n    margin-bottom: $spacing-lg;\r\n    display: block;\r\n}\r\n\r\n.singUp-card {\r\n    flex: 0 0 50%;\r\n}\r\n\r\n@media (min-width: 768px) {\r\n    .signIn {\r\n        display: flex;\r\n        background-color: $dark-blue-tint;\r\n        border-radius: $spacing-sml;\r\n    }\r\n}\r\n@media (max-width: 768px) {\r\n    .login {\r\n        background-image: $background-gradient-mobile, url('/assets/background-image.svg');\r\n        flex-direction: column;\r\n        padding: 0px $spacing-md;\r\n        height: auto;\r\n    }\r\n\r\n    .login-title {\r\n        font-size: $font-size-md;\r\n    }\r\n\r\n    .login-title-container {\r\n        margin-top: $spacing-xxls;\r\n    }\r\n\r\n    .login-card {\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: $spacing-sm;\r\n        margin-bottom: $spacing-xls;\r\n    }\r\n\r\n    .signIn-title {\r\n        font-size: $font-size-sm;\r\n        margin-bottom: $spacing-md;\r\n    }\r\n\r\n    .signIn-btn-container {\r\n        margin-top: $spacing-normal;\r\n    }\r\n\r\n    .signUp-title {\r\n        font-size: $font-size-sm;\r\n    }\r\n\r\n    .signUp-logo {\r\n        margin-top: $spacing-sm;\r\n        margin-bottom: $spacing-sm;\r\n        width: $spacing-xxxl;\r\n    }\r\n\r\n    .signUp-description {\r\n        font-weight: 500;\r\n        font-size: $font-size-s;\r\n        line-height: 1.45;\r\n        color: $aqua;\r\n    }\r\n\r\n    .signUp-btn-container {\r\n        margin-top: $spacing-normal;\r\n    }\r\n\r\n    .singUp-card {\r\n        margin-bottom: $spacing-xls;\r\n    }\r\n\r\n    ::ng-deep app-card > .card-container {\r\n        padding: $spacing-md $background-bg;\r\n    }\r\n}\r\n",
                    "styleUrl": "./login-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userauth",
                        "type": "UserAuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userauth",
                        "type": "UserAuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"login\">\r\n    <div class=\"login-title-container\">\r\n        <div class=\"login-title-background\">\r\n            <h1 class=\"login-title\">Movie OTT</h1>\r\n        </div>\r\n    </div>\r\n    <div class=\"signIn login-card\">\r\n        <app-card type=\"secondary\" class=\"singIn-card\">\r\n            <p class=\"signIn-title\">Sign<span class=\"signIn-suffix\">In</span></p>\r\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin()\">\r\n                <app-input label=\"Email\" placeholder=\"Email\" formControlName=\"email\" name=\"identifier\" class=\"input-field\"></app-input>\r\n                <app-input\r\n                    label=\"Password\"\r\n                    [type]=\"'password'\"\r\n                    placeholder=\"Password\"\r\n                    formControlName=\"password\"\r\n                    name=\"password\"\r\n                ></app-input>\r\n                <div class=\"signIn-btn-container\">\r\n                    <app-button [disabled]=\"!loginForm.valid\" label=\"Sign In\" type=\"primary\"></app-button>\r\n                </div>\r\n            </form>\r\n            <div *ngIf=\"errorMessage\" class=\"error-message responseMessage\">{{ errorMessage }}</div>\r\n        </app-card>\r\n        <app-card class=\"singUp-card\">\r\n            <div class=\"signUp\">\r\n                <div class=\"signUp-title\">Welcome to <span class=\"signUp-suffix\">Movie OTT</span></div>\r\n                <img src=\"/assets/logo.svg\" class=\"signUp-logo\" />\r\n                <p class=\"signUp-description\">New here? <span class=\"signUp-account\">Create an account here</span></p>\r\n                <div class=\"signUp-btn-container\">\r\n                    <app-button (click)=\"onSignUpClick()\" label=\"Sign Up\" type=\"secondary\"></app-button>\r\n                </div>\r\n            </div>\r\n        </app-card>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "MovieDetailComponent",
            "id": "component-MovieDetailComponent-6967f3fd829024965e79c51e76cc68bdd5851594e7b37c3f1a9f4350d946ed3e7eb2b12cea85abcbcde68df604be79b160c5cac8e5fa642734a8abc36f5d73f3",
            "file": "src/app/components/movie-detail/movie-detail.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-movie-detail",
            "styleUrls": [
                "./movie-detail.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./movie-detail.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "movieDetail",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core'\r\n\r\n@Component({\r\n    selector: 'app-movie-detail',\r\n    templateUrl: './movie-detail.component.html',\r\n    styleUrls: ['./movie-detail.component.scss'],\r\n})\r\nexport class MovieDetailComponent {\r\n    @Input() label!: string\r\n    @Input() movieDetail!: string\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\r\n\r\n.movie-detail {\r\n    display: flex;\r\n    flex-direction: column;\r\n    font-size: $font-size-normal;\r\n    line-height: 1.5;\r\n    color: $white;\r\n}\r\n\r\n.movie-detail-label {\r\n    color: $silver;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n    .movie-detail {\r\n        font-size: $font-size-xs;\r\n    }\r\n}\r\n",
                    "styleUrl": "./movie-detail.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"movie-detail\">\r\n    <span class=\"movie-detail-label\">{{ label }}</span>\r\n    {{ movieDetail }}\r\n</div>\r\n"
        },
        {
            "name": "MovieGenreDetailsPageComponent",
            "id": "component-MovieGenreDetailsPageComponent-069dacf44f97c900ccf9d70e2ebecf754652a158c515d13a4a3920145902f956d93f4c920e5e5a80ebb10a2be4bdf8bc279df933a690cb019ff0d252f901b716",
            "file": "src/app/modules/movie-genre-details-page/movie-genre-details-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-movie-genre-details-page",
            "styleUrls": [
                "./movie-genre-details-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./movie-genre-details-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentMovieorSeriesUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "currentPage",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "imageBaseUrl",
                    "defaultValue": "environment.imageBaseUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "movieGenreDetails",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IMovieSeries[]",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "userAuth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserAuthService",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onScroll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core'\r\nimport { ActivatedRoute, Params, Router } from '@angular/router'\r\nimport { UserAuthService } from 'src/app/services/user-auth.service'\r\nimport { environment } from 'src/environments/environment'\r\n\r\ninterface IMovieSeries {\r\n    adult: boolean\r\n    backdrop_path: string\r\n    genre_ids: []\r\n    id: number\r\n    media_type: string\r\n    original_language: string\r\n    original_title: string\r\n    original_name: string\r\n    overview: string\r\n    popularity: number\r\n    poster_path: string\r\n    release_date: string\r\n    first_air_date: string\r\n    title: string\r\n    video: boolean\r\n    vote_average: number\r\n    vote_count: number\r\n}\r\n@Component({\r\n    selector: 'app-movie-genre-details-page',\r\n    templateUrl: './movie-genre-details-page.component.html',\r\n    styleUrls: ['./movie-genre-details-page.component.scss'],\r\n})\r\nexport class MovieGenreDetailsPageComponent implements OnInit {\r\n    imageBaseUrl: string = environment.imageBaseUrl\r\n    movieGenreDetails: IMovieSeries[] = []\r\n    currentPage: number = 1\r\n    currentMovieorSeriesUrl: string = ''\r\n    constructor(public userAuth: UserAuthService, private router: Router, private activatedRoute: ActivatedRoute) {}\r\n\r\n    ngOnInit(): void {\r\n        this.activatedRoute.params.subscribe((params) => {\r\n            this.currentMovieorSeriesUrl = this.router.url\r\n            if (this.router.url.includes('movies')) {\r\n                this.userAuth.fetchMovieGenreDetails('movie', this.currentPage, params['id']).subscribe((res: any) => {\r\n                    console.log(res)\r\n                    this.movieGenreDetails = res.results\r\n                })\r\n            } else if (this.router.url.includes('series')) {\r\n                this.userAuth.fetchMovieGenreDetails('tv', this.currentPage, params['id']).subscribe((res: any) => {\r\n                    console.log(res)\r\n                    this.movieGenreDetails = res.results\r\n                })\r\n            }\r\n        })\r\n    }\r\n    onScroll() {\r\n        this.currentPage++\r\n        this.activatedRoute.params.subscribe((params: Params) => {\r\n            this.userAuth.fetchMovieGenreDetails('movie', this.currentPage, params['id']).subscribe((res: any) => {\r\n                this.movieGenreDetails = [...this.movieGenreDetails, ...res.results]\r\n            })\r\n        })\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\r\n\r\n.search-results {\r\n    background-color: $theme-color-base;\r\n    position: relative;\r\n}\r\n.movie {\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 1fr);\r\n    grid-gap: $spacing-md;\r\n    margin-top: $spacing-lg;\r\n}\r\n\r\n.home {\r\n    background-color: $theme-color-base;\r\n}\r\n\r\n.home-container {\r\n    padding: $spacing-md $spacing-xxxlg 0 $spacing-md;\r\n}\r\n\r\n.home-container-details {\r\n    display: flex;\r\n    flex-direction: row;\r\n    gap: $spacing-lg;\r\n}\r\n\r\n.search-bar-movies-card {\r\n    width: 100%;\r\n    position: relative;\r\n}\r\n@media (max-width: 768px) {\r\n    .home-container-details {\r\n        flex-direction: column-reverse;\r\n    }\r\n    .home-container {\r\n        padding: 0;\r\n    }\r\n    .search-bar-movies-card {\r\n        padding: $spacing-lgs $spacing-normal 0 $spacing-normal;\r\n    }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n    .movie {\r\n        grid-template-columns: repeat(2, 1fr);\r\n    }\r\n}\r\n@media (max-width: 420px) {\r\n    .movie {\r\n        grid-template-columns: repeat(1, 1fr);\r\n    }\r\n}\r\n",
                    "styleUrl": "./movie-genre-details-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "userAuth",
                        "type": "UserAuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 34,
                "jsdoctags": [
                    {
                        "name": "userAuth",
                        "type": "UserAuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div\r\n    infinite-scroll\r\n    [infiniteScrollDistance]=\"1\"\r\n    [infiniteScrollUpDistance]=\"1\"\r\n    [infiniteScrollThrottle]=\"500\"\r\n    (scrolled)=\"onScroll()\"\r\n    class=\"search-results\"\r\n>\r\n    <div class=\"movie\">\r\n        <div *ngFor=\"let movie of movieGenreDetails\">\r\n            <app-movie-series-card\r\n                routerLink=\"details/{{ movie.id }}\"\r\n                label=\"{{ currentMovieorSeriesUrl.includes('series') ? 'TV series' : 'Movie' }}\"\r\n                title=\"{{ currentMovieorSeriesUrl.includes('movies') ? movie.original_title : movie.original_name }}\"\r\n                year=\"{{\r\n                    currentMovieorSeriesUrl.includes('movies') ? (movie.release_date | date: 'yyyy') : (movie.first_air_date | date: 'yyyy')\r\n                }}\"\r\n                [image]=\"imageBaseUrl + movie.poster_path\"\r\n                icon=\"{{ currentMovieorSeriesUrl.includes('series') ? 'assets/series-icon.png' : 'assets/movie-icon.png' }}\"\r\n                id=\"{{ movie.id }}\"\r\n            ></app-movie-series-card>\r\n        </div>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "MovieGenrePageComponent",
            "id": "component-MovieGenrePageComponent-063c5e3ac88aefe1531e90b39d6ceeed7130c94f86d8db185c94ad18cbd282be56fb8a1f09cd6b07de2981d8d9c4ffefd20f450b416e1e55d3553ebe370fd079",
            "file": "src/app/modules/movie-genre-page/movie-genre-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-movie-genre-page",
            "styleUrls": [
                "./movie-genre-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./movie-genre-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activatedRoute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActivatedRoute",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isApi1",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "movieSeriesGenres",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "fetchMovieTypes",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core'\r\nimport { ActivatedRoute } from '@angular/router'\r\nimport { UserAuthService } from 'src/app/services/user-auth.service'\r\n\r\n@Component({\r\n    selector: 'app-movie-genre-page',\r\n    templateUrl: './movie-genre-page.component.html',\r\n    styleUrls: ['./movie-genre-page.component.scss'],\r\n})\r\nexport class MovieGenrePageComponent implements OnInit {\r\n    movieSeriesGenres: any\r\n    isApi1: boolean = false\r\n    constructor(private userAuth: UserAuthService, public activatedRoute: ActivatedRoute) {}\r\n    ngOnInit() {\r\n        this.fetchMovieTypes()\r\n    }\r\n    fetchMovieTypes() {\r\n        this.activatedRoute.params.subscribe((params) => {\r\n            if (params['moviesSeries'] === 'movies') {\r\n                this.isApi1 = true\r\n                this.userAuth.fetchMovieGenre('movie').subscribe((res: any) => {\r\n                    this.movieSeriesGenres = res.genres\r\n                    console.log(this.movieSeriesGenres.id)\r\n                })\r\n            } else if (params['moviesSeries'] === 'series') {\r\n                this.isApi1 = false\r\n                this.userAuth.fetchMovieGenre('tv').subscribe((res: any) => {\r\n                    this.movieSeriesGenres = res.genres\r\n                    console.log(res.genres.id)\r\n                })\r\n            }\r\n        })\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\r\nul {\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 1fr);\r\n    grid-gap: $spacing-normal;\r\n    margin-top: $spacing-xl;\r\n    background-color: $theme-color-base;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n    ul {\r\n        grid-template-columns: repeat(2, 1fr);\r\n        grid-gap: $spacing-sm;\r\n        margin-top: $spacing-md;\r\n    }\r\n    ::ng-deep app-genre > .genre-card {\r\n        font-size: $font-size-sm;\r\n        padding: $spacing-lggs 0;\r\n    }\r\n}\r\n\r\n@media (max-width: 420px) {\r\n    ul {\r\n        grid-template-columns: repeat(1, 1fr);\r\n    }\r\n}\r\n",
                    "styleUrl": "./movie-genre-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "userAuth",
                        "type": "UserAuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "userAuth",
                        "type": "UserAuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ul>\r\n    <div *ngFor=\"let genre of movieSeriesGenres; let i = index\">\r\n        <app-genre\r\n            [color]=\"isApi1 ? (i % 2 === 0 ? '#0E7490' : '#171E31') : i % 2 === 0 ? '#0F766E' : '#171E31'\"\r\n            genre=\"{{ genre.name }}\"\r\n            routerLink=\"{{ genre.id }}\"\r\n        ></app-genre>\r\n    </div>\r\n</ul>\r\n"
        },
        {
            "name": "MovieSeriesCardComponent",
            "id": "component-MovieSeriesCardComponent-1685de62e2f4842afc8f41bb7dd9b1151ac4240cd1b5eff67c537517426d638cb3d5be389811bf99390948fda98e0207a6895264da36314962d1d1ea97139f6f",
            "file": "src/app/components/movie-series-card/movie-series-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-movie-series-card",
            "styleUrls": [
                "./movie-series-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./movie-series-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "detailRouter",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string | null",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "image",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "isBookmark",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "year",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "removeMovie",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onRemove",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core'\r\n\r\n@Component({\r\n    selector: 'app-movie-series-card',\r\n    templateUrl: './movie-series-card.component.html',\r\n    styleUrls: ['./movie-series-card.component.scss'],\r\n})\r\nexport class MovieSeriesCardComponent {\r\n    @Input() title: string = ''\r\n    @Input() image: string = ''\r\n    @Input() icon: string = ''\r\n    @Input() isBookmark: boolean = false\r\n    @Input() detailRouter: string | null = null\r\n    @Input() year: string = ''\r\n    @Input() label: string = ''\r\n    @Input() id: string = ''\r\n    @Output() removeMovie = new EventEmitter()\r\n\r\n    onRemove() {\r\n        this.removeMovie.emit()\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\r\n\r\n.movie-series-container {\r\n    background-color: $theme-color-base;\r\n    font-size: $font-size-sm;\r\n    line-height: 1.5;\r\n    letter-spacing: 0.06rem;\r\n    color: $white;\r\n    position: relative;\r\n    width: 100%;\r\n}\r\n\r\n.img-container {\r\n    margin-bottom: $spacing-sm;\r\n    background-image: url('/assets/bookmark-background.png');\r\n    background-repeat: no-repeat;\r\n}\r\n\r\n.card-details {\r\n    display: flex;\r\n    gap: $spacing-s;\r\n    margin-bottom: $spacing-xxs;\r\n    align-items: center;\r\n}\r\n\r\n.image-card {\r\n    width: 100% !important;\r\n    height: 240px;\r\n    border-radius: $border-radius-lg;\r\n    object-fit: cover;\r\n    object-position: top;\r\n}\r\n\r\nh2 {\r\n    font-size: $font-size-md;\r\n    line-height: 1.5;\r\n    color: $white;\r\n}\r\n\r\na {\r\n    text-decoration: none;\r\n}\r\n@media (max-width: 768px) {\r\n    .year-label {\r\n        font-size: $font-size-xxs;\r\n    }\r\n    h2 {\r\n        font-size: $font-size-xs;\r\n    }\r\n    .image-card {\r\n        height: 200px;\r\n        border-radius: $border-radius-sm;\r\n    }\r\n}\r\n",
                    "styleUrl": "./movie-series-card.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"movie-series-container\">\r\n    <div class=\"img-container\">\r\n        <a [routerLink]=\"detailRouter\">\r\n            <img [src]=\"image\" alt=\"image card\" class=\"image-card\" />\r\n        </a>\r\n        <app-bookmark-icon\r\n            [title]=\"title\"\r\n            [label]=\"label\"\r\n            [year]=\"year\"\r\n            [id]=\"id\"\r\n            [image]=\"image\"\r\n            (removeMovie)=\"onRemove()\"\r\n        ></app-bookmark-icon>\r\n    </div>\r\n    <div class=\"card-details\">\r\n        <div class=\"year-label\">{{ year }}</div>\r\n        <img src=\"assets/dot.png\" alt=\"\" />\r\n        <img [src]=\"icon\" alt=\"movieroseriesicon\" />\r\n        <div class=\"year-label\">{{ label }}</div>\r\n    </div>\r\n    <div class=\"movie-series-title\">\r\n        <a [routerLink]=\"detailRouter\">\r\n            <h2>{{ title }}</h2>\r\n        </a>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "NavigationBarComponent",
            "id": "component-NavigationBarComponent-19b4e6176a541f3b54f7e0f91bfeb443f27708fafb67204599d8c26b1101be9f86a16a1b34ca0e51a4990de8a785b3e2beb510df8a841f4af39966a5e6bfc99c",
            "file": "src/app/components/navigation-bar/navigation-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-navigation-bar",
            "styleUrls": [
                "./navigation-bar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./navigation-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "logoRouterLink",
                    "defaultValue": "'/home'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dropDownData",
                    "defaultValue": "[\r\n        {\r\n            name: 'Ott-app',\r\n            onClick: () => {\r\n                console.log('Option 1 clicked')\r\n            },\r\n        },\r\n        {\r\n            name: 'Logout',\r\n            onClick: () => {\r\n                this.userAuth.logOutUser()\r\n            },\r\n        },\r\n    ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core'\r\nimport { Router } from '@angular/router'\r\nimport { UserAuthService } from 'src/app/services/user-auth.service'\r\n\r\n@Component({\r\n    selector: 'app-navigation-bar',\r\n    templateUrl: './navigation-bar.component.html',\r\n    styleUrls: ['./navigation-bar.component.scss'],\r\n})\r\nexport class NavigationBarComponent {\r\n    constructor(private userAuth: UserAuthService,private router:Router) {}\r\n    @Input() logoRouterLink = '/home'\r\n    dropDownData = [\r\n        {\r\n            name: 'Ott-app',\r\n            onClick: () => {\r\n                console.log('Option 1 clicked')\r\n            },\r\n        },\r\n        {\r\n            name: 'Logout',\r\n            onClick: () => {\r\n                this.userAuth.logOutUser()\r\n            },\r\n        },\r\n    ]\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\r\n\r\n.navigation-bar-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: $spacing-xxm;\r\n    padding: $spacing-xxxlg 0;\r\n    width: $spacing-xxslg;\r\n    text-align: center;\r\n    border-radius: $border-radius-lg;\r\n    background-color: $dark-blue-hue;\r\n}\r\n\r\n.profile-container {\r\n    margin-top: $spacing-xslg;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n    .logo-container,\r\n    .profile-container {\r\n        display: none;\r\n    }\r\n    .navigation-bar-container {\r\n        width: 100%;\r\n        padding: 0;\r\n    }\r\n}\r\n@media (max-width: 768px) {\r\n    .logo-container,\r\n    .profile-container {\r\n        display: none;\r\n    }\r\n    .navigation-bar-container {\r\n        width: 100%;\r\n        padding: 0;\r\n    }\r\n}\r\n",
                    "styleUrl": "./navigation-bar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "userAuth",
                        "type": "UserAuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "userAuth",
                        "type": "UserAuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"navigation-bar-container\">\r\n    <div class=\"logo-container\">\r\n        <img [routerLink]=\"logoRouterLink\" src=\"assets/logo.png\" alt=\"logo\" />\r\n    </div>\r\n    <app-navigation-menu\r\n        [items]=\"[\r\n            { name: 'home', icon: 'assets/home-icon.svg', path: '/home' },\r\n            { name: 'movie', icon: 'assets/movie-icon.svg', path: '/home/movies' },\r\n            { name: 'series', icon: 'assets/series-icon.svg', path: '/home/series' },\r\n            { name: 'bookmark', icon: 'assets/bookmark-icon.svg', path: '/home/bookmarks' }\r\n        ]\"\r\n        class=\"navigation-menu\"\r\n    ></app-navigation-menu>\r\n    <div class=\"profile-container\">\r\n        <app-profile-menu [dropDownData]=\"dropDownData\" icon=\"assets/profile-menu.svg\"></app-profile-menu>\r\n    </div>\r\n</div>\r\n\r\n"
        },
        {
            "name": "NavigationMenuComponent",
            "id": "component-NavigationMenuComponent-0c28d942d6b8374e2651da3257ae612a2f50e18050b2ecf7246b9cbbfd211e66a386867040c341ac9430c3a9a0ff8da8d7c955cb2fcc4a8e17229fafde1f0953",
            "file": "src/app/components/navigation-menu/navigation-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-navigation-menu",
            "styleUrls": [
                "./navigation-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./navigation-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "IItems[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentUrl",
                    "defaultValue": "'/home'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core'\r\nimport { NavigationEnd, Router } from '@angular/router'\r\n\r\ninterface IItems {\r\n    name: string\r\n    icon: string\r\n    path: string\r\n}\r\n\r\n@Component({\r\n    selector: 'app-navigation-menu',\r\n    templateUrl: './navigation-menu.component.html',\r\n    styleUrls: ['./navigation-menu.component.scss'],\r\n})\r\nexport class NavigationMenuComponent implements OnInit {\r\n    @Input() items: IItems[] = []\r\n    currentUrl: string = '/home'\r\n    ngOnInit() {\r\n        this.router.events.subscribe((event) => {\r\n            if (event instanceof NavigationEnd) {\r\n                this.currentUrl = event.url\r\n            }\r\n        })\r\n    }\r\n    constructor(private router: Router) {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\r\n\r\n.navigation-menu-container {\r\n    background-color: $dark-blue-hue;\r\n    width: 34.89px;\r\n    margin: auto;\r\n}\r\n\r\nul {\r\n    text-decoration: none;\r\n    display: flex;\r\n    gap: $spacing-xxmd;\r\n    flex-direction: column;\r\n    align-items: center;\r\n}\r\n\r\n.list-item {\r\n    list-style: none;\r\n    a {\r\n        &.active {\r\n            img {\r\n                filter: brightness(0) invert(1);\r\n            }\r\n        }\r\n    }\r\n}\r\n@media (max-width: 768px) {\r\n    ul {\r\n        flex-direction: row;\r\n        align-items: center;\r\n        justify-content: space-around;\r\n        gap: 0;\r\n        padding: $spacing-sm $spacing-xmd $spacing-normal $spacing-xmd;\r\n    }\r\n    .navigation-menu-container {\r\n        position: fixed;\r\n        bottom: 0;\r\n        width: 100%;\r\n        z-index: 999;\r\n    }\r\n}\r\n",
                    "styleUrl": "./navigation-menu.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"navigation-menu-container\">\r\n    <ul>\r\n        <li *ngFor=\"let item of items\" class=\"list-item\">\r\n            <a [routerLink]=\"item.path\" [class.active]=\"item.path === currentUrl\">\r\n                <img [src]=\"item.icon\" [alt]=\"item.name\" class=\"icons\" />\r\n            </a>\r\n        </li>\r\n    </ul>\r\n</div>\r\n"
        },
        {
            "name": "NoResultPageComponent",
            "id": "component-NoResultPageComponent-59bc62c18385f17e394499484c8476b2b01df6f2d8a37b7f29bb3d4298140e8f4eb3e5f1e65b3f7114824014752148d936ba50f97e690486a86954fe21267d95",
            "file": "src/app/modules/no-result-page/no-result-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-no-result-page",
            "styleUrls": [
                "./no-result-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./no-result-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activatedRoute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActivatedRoute",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "errorMovie",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core'\r\nimport { ActivatedRoute, Params } from '@angular/router'\r\n\r\n@Component({\r\n    selector: 'app-no-result-page',\r\n    templateUrl: './no-result-page.component.html',\r\n    styleUrls: ['./no-result-page.component.scss'],\r\n})\r\nexport class NoResultPageComponent implements OnInit {\r\n    errorMovie: string = ''\r\n    constructor(public activatedRoute: ActivatedRoute) {}\r\n\r\n    ngOnInit() {\r\n        this.activatedRoute.params.subscribe((params:Params) => {\r\n            this.errorMovie = params['errorData']\r\n        })\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\r\n\r\n.no-result-body {\r\n    background-image: url('/assets/no-result-background.png');\r\n    height: 100vh;\r\n    background-size: cover;\r\n    background-position: center;\r\n}\r\nh2 {\r\n    font-size: $font-size-bg;\r\n    line-height: 1.5;\r\n    color: #ffffff;\r\n}\r\n.no-result-message {\r\n    display: flex;\r\n    gap: $spacing-normal;\r\n    align-items: center;\r\n    padding: $spacing-xls 0 0 $spacing-xls;\r\n}\r\n@media (max-width: 768px) {\r\n    .no-result-message {\r\n        flex-direction: column;\r\n        gap: $spacing-normal;\r\n        align-items: flex-start;\r\n        padding: $background-bg $spacing-normal 0 $spacing-normal;\r\n    }\r\n}\r\n",
                    "styleUrl": "./no-result-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"no-result-body\">\r\n    <div class=\"no-result-message\">\r\n        <a [routerLink]=\"'/home'\"><img src=\"assets/back-arrow.png\" /></a>\r\n        <h2>No Results found for the search {{ errorMovie }}</h2>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-1fc7c24c98b4f0b0f413d91f5a6126f11ad55647457f5a7f372b7f83fe8ecd6dbe67b5ca4b826ed20b9bfbc04d5606b15f82a203b1311f98b18bd28ec9f4fc7c",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { User } from './User';\r\n\r\n@Component({\r\n  selector: 'storybook-page',\r\n  template: `<article>\r\n    <storybook-header\r\n      [user]=\"user\"\r\n      (onLogout)=\"doLogout()\"\r\n      (onLogin)=\"doLogin()\"\r\n      (onCreateAccount)=\"doCreateAccount()\"\r\n    ></storybook-header>\r\n    <section>\r\n      <h2>Pages in Storybook</h2>\r\n      <p>\r\n        We recommend building UIs with a\r\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <strong>component-driven</strong>\r\n        </a>\r\n        process starting with atomic components and ending with pages.\r\n      </p>\r\n      <p>\r\n        Render pages with mock data. This makes it easy to build and review page states without\r\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\r\n        in Storybook:\r\n      </p>\r\n      <ul>\r\n        <li>\r\n          Use a higher-level connected component. Storybook helps you compose such data from the\r\n          \"args\" of child component stories\r\n        </li>\r\n        <li>\r\n          Assemble data in the page component from your services. You can mock these services out\r\n          using Storybook.\r\n        </li>\r\n      </ul>\r\n      <p>\r\n        Get a guided tutorial on component-driven development at\r\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          Storybook tutorials\r\n        </a>\r\n        . Read more in the\r\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\r\n        .\r\n      </p>\r\n      <div class=\"tip-wrapper\">\r\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\r\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\r\n              id=\"a\"\r\n              fill=\"#999\"\r\n            />\r\n          </g>\r\n        </svg>\r\n        Viewports addon in the toolbar\r\n      </div>\r\n    </section>\r\n  </article>`,\r\n  styleUrls: ['./page.css'],\r\n})\r\nexport default class PageComponent {\r\n  user: User | null = null;\r\n\r\n  doLogout() {\r\n    this.user = null;\r\n  }\r\n\r\n  doLogin() {\r\n    this.user = { name: 'Jane Doe' };\r\n  }\r\n\r\n  doCreateAccount() {\r\n    this.user = { name: 'Jane Doe' };\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  font-size: 14px;\r\n  line-height: 24px;\r\n  padding: 48px 20px;\r\n  margin: 0 auto;\r\n  max-width: 600px;\r\n  color: #333;\r\n}\r\n\r\nsection h2 {\r\n  font-weight: 900;\r\n  font-size: 32px;\r\n  line-height: 1;\r\n  margin: 0 0 4px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\nsection p {\r\n  margin: 1em 0;\r\n}\r\n\r\nsection a {\r\n  text-decoration: none;\r\n  color: #1ea7fd;\r\n}\r\n\r\nsection ul {\r\n  padding-left: 30px;\r\n  margin: 1em 0;\r\n}\r\n\r\nsection li {\r\n  margin-bottom: 8px;\r\n}\r\n\r\nsection .tip {\r\n  display: inline-block;\r\n  border-radius: 1em;\r\n  font-size: 11px;\r\n  line-height: 12px;\r\n  font-weight: 700;\r\n  background: #e7fdd8;\r\n  color: #66bf3c;\r\n  padding: 4px 12px;\r\n  margin-right: 10px;\r\n  vertical-align: top;\r\n}\r\n\r\nsection .tip-wrapper {\r\n  font-size: 13px;\r\n  line-height: 20px;\r\n  margin-top: 40px;\r\n  margin-bottom: 40px;\r\n}\r\n\r\nsection .tip-wrapper svg {\r\n  display: inline-block;\r\n  height: 12px;\r\n  width: 12px;\r\n  margin-right: 4px;\r\n  vertical-align: top;\r\n  margin-top: 3px;\r\n}\r\n\r\nsection .tip-wrapper svg path {\r\n  fill: #1ea7fd;\r\n}\r\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "ProfileMenuComponent",
            "id": "component-ProfileMenuComponent-69ac0bcd4d6e8ae781a47b72c8bd907a3c7eae7dda68f97a46918a82e398ee9f80505653a9d6c887e8175385ca9a8f8c1cc4fdc3f54dbb3415eaa75d66621714",
            "file": "src/app/components/profile-menu/profile-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-profile-menu",
            "styleUrls": [
                "./profile-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./profile-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "dropDownData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "IDropDownData[]",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string | null",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_dropDownData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IDropDownData[]",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "closeDropdown",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openDropdown",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit } from '@angular/core'\r\nimport { IDropDownData } from '../drop-down-menu/drop-down-menu.component'\r\n\r\n@Component({\r\n    selector: 'app-profile-menu',\r\n    templateUrl: './profile-menu.component.html',\r\n    styleUrls: ['./profile-menu.component.scss'],\r\n})\r\nexport class ProfileMenuComponent {\r\n    private _dropDownData: IDropDownData[] = []\r\n    isOpen = false\r\n\r\n    @Input() icon: string | null = null\r\n\r\n    @Input() set dropDownData(value: IDropDownData[]) {\r\n        const result = value.map((x) => {\r\n            return {\r\n                ...x,\r\n                onClick: () => {\r\n                    this.closeDropdown()\r\n                    x.onClick()\r\n                },\r\n            }\r\n        })\r\n        this._dropDownData = result\r\n    }\r\n\r\n    get dropDownData() {\r\n        return this._dropDownData\r\n    }\r\n\r\n    openDropdown() {\r\n        this.isOpen = true\r\n    }\r\n\r\n    closeDropdown() {\r\n        this.isOpen = false\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\r\n\r\n.dropdown-mask {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    background-color: $color-mask;\r\n    z-index: 1;\r\n}\r\n\r\n.dropdown {\r\n    z-index: 2;\r\n    position: relative;\r\n}\r\n\r\n.dropdown-icon:hover {\r\n    box-shadow: 0 0 5px $white-tint;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n}\r\n\r\n.dropdown-container {\r\n    position: relative;\r\n}\r\n\r\n.highlight {\r\n    box-shadow: 0 0 5px $dark-red;\r\n    border-radius: 50%;\r\n}\r\n",
                    "styleUrl": "./profile-menu.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "dropDownData": {
                    "name": "dropDownData",
                    "setSignature": {
                        "name": "dropDownData",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "IDropDownData[]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 15,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "IDropDownData[]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "dropDownData",
                        "type": "",
                        "returnType": "",
                        "line": 28
                    }
                }
            },
            "templateData": "<span class=\"dropdown\">\r\n    <img [src]=\"icon\" [class.highlight]=\"isOpen\" (click)=\"isOpen ? closeDropdown() : openDropdown()\" class=\"dropdown-icon\" />\r\n    <app-drop-down-menu *ngIf=\"isOpen\" [dropdownData]=\"dropDownData\" class=\"dropdown-container\"></app-drop-down-menu>\r\n</span>\r\n<div *ngIf=\"isOpen\" (click)=\"closeDropdown()\" class=\"dropdown-mask\"></div>\r\n"
        },
        {
            "name": "RegistrationPageComponent",
            "id": "component-RegistrationPageComponent-d01120c6ec98bce4af08d58f51adc9afe8a7ab3f9e12c97abc43a0215561d90ad71f4079111e4b272e46412c4c1b2520585d9703fc18efb32e45f330acbd412b",
            "file": "src/app/modules/registration-page/registration-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-registration-page",
            "styleUrls": [
                "./registration-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./registration-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "errorMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "registerForm",
                    "defaultValue": "this.formBuilder.group({\r\n        username: this.formBuilder.control(null, [Validators.required, username]),\r\n        email: this.formBuilder.control(null, [Validators.required, email]),\r\n        password: this.formBuilder.control(null, Validators.required),\r\n        confirmpassword: this.formBuilder.control(null, [Validators.required, passwordMatch]),\r\n    })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "successMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "onRegistration",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'\r\nimport { Router } from '@angular/router'\r\nimport { UserAuthService } from 'src/app/services/user-auth.service'\r\nimport { username, email, passwordMatch } from 'src/app/components/input/input.component'\r\n\r\n@Component({\r\n    selector: 'app-registration-page',\r\n    templateUrl: './registration-page.component.html',\r\n    styleUrls: ['./registration-page.component.scss'],\r\n})\r\nexport class RegistrationPageComponent {\r\n    successMessage: string = ''\r\n    errorMessage: string = ''\r\n    registerForm: FormGroup = this.formBuilder.group({\r\n        username: this.formBuilder.control(null, [Validators.required, username]),\r\n        email: this.formBuilder.control(null, [Validators.required, email]),\r\n        password: this.formBuilder.control(null, Validators.required),\r\n        confirmpassword: this.formBuilder.control(null, [Validators.required, passwordMatch]),\r\n    })\r\n\r\n    constructor(private formBuilder: FormBuilder, private userauth: UserAuthService, private router: Router) {}\r\n\r\n    onRegistration() {\r\n        const user = this.registerForm.value\r\n        this.userauth.registerUser(user).subscribe(\r\n            (response: any) => {\r\n                this.successMessage = 'Registration successful!'\r\n                this.errorMessage = ''\r\n\r\n                setTimeout(() => {\r\n                    this.router.navigate(['/home'])\r\n                }, 2000)\r\n            },\r\n            (error) => {\r\n                console.log(error)\r\n                this.errorMessage = `Registration failed,${error.error.error.message}`\r\n                this.successMessage = ''\r\n            }\r\n        )\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\r\n\r\n.registration-page-container {\r\n    background-image: $background-gradient, url('/assets/OTT-background.png');\r\n    height: 100vh;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 0px $spacing-md;\r\n}\r\n\r\n.register-heading {\r\n    font-size: $font-size-md;\r\n    line-height: 1.5;\r\n    text-align: center;\r\n    margin-bottom: $spacing-md;\r\n}\r\n::ng-deep app-card > .card-container {\r\n    padding: $spacing-md 64px;\r\n}\r\n.registration-page-body {\r\n    width: 686px;\r\n}\r\n.success-message {\r\n    color: $light-green-tint;\r\n}\r\n\r\n.error-message {\r\n    color: $bright-red;\r\n}\r\n.responseMessage {\r\n    text-align: center;\r\n    margin-top: $spacing-xs;\r\n}\r\n.btn-container {\r\n    margin-top: $spacing-xs;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.movie-heading {\r\n    font-size: $font-size-xl;\r\n    line-height: 1.5;\r\n    text-align: center;\r\n    color: $dark-red;\r\n    position: relative;\r\n    z-index: 1;\r\n}\r\n\r\n.movie-heading-background {\r\n    position: relative;\r\n    z-index: 0;\r\n    margin-bottom: $spacing-lgs;\r\n\r\n    &:before {\r\n        content: '';\r\n        position: absolute;\r\n        z-index: -1;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        background-color: $black;\r\n        filter: blur(25px);\r\n    }\r\n}\r\n@media (max-width: 768px) {\r\n    .movie-heading-background {\r\n        margin-bottom: $spacing-xl;\r\n    }\r\n}\r\n",
                    "styleUrl": "./registration-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userauth",
                        "type": "UserAuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userauth",
                        "type": "UserAuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"registration-page-container\">\r\n    <div class=\"registration-page-body\">\r\n        <div class=\"movie-heading-background\">\r\n            <h1 class=\"movie-heading\">Movie OTT</h1>\r\n        </div>\r\n        <app-card type=\"primary\">\r\n            <h1 class=\"register-heading\">Register</h1>\r\n            <form [formGroup]=\"registerForm\" (ngSubmit)=\"onRegistration()\">\r\n                <app-input label=\"Full Name\" placeholder=\"Full Name\" formControlName=\"username\"></app-input>\r\n                <app-input label=\"Email\" placeholder=\"Email\" formControlName=\"email\"></app-input>\r\n                <app-input label=\"Password\" [type]=\"'password'\" placeholder=\"Password\" formControlName=\"password\"></app-input>\r\n                <app-input\r\n                    label=\"Confirm Password\"\r\n                    [type]=\"'password'\"\r\n                    placeholder=\"Confirm Password\"\r\n                    formControlName=\"confirmpassword\"\r\n                ></app-input>\r\n                <div class=\"btn-container\">\r\n                    <app-button label=\"Sign In\" [disabled]=\"!registerForm.valid\" type=\"primary\"></app-button>\r\n                </div>\r\n            </form>\r\n            <div class=\"responseMessage\" [ngClass]=\"{ 'success-message': successMessage, 'error-message': errorMessage }\">\r\n                {{ successMessage || errorMessage }}\r\n            </div>\r\n        </app-card>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "SearchBarComponent",
            "id": "component-SearchBarComponent-b7bfe3c81b60de0882e4cba6bd67ff780ba1c06b348b9660a8668e02330de84ed3144ffd0b6ae4cbd55408655f9338bb1024c10eca4aa0a371c96062458efb20",
            "file": "src/app/components/search-bar/search-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-search-bar",
            "styleUrls": [
                "./search-bar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./search-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "inputPlaceholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "search",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "searchValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSeachButtonClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSearch",
                    "args": [
                        {
                            "name": "value",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core'\r\nimport { debounceTime, distinctUntilChanged, fromEvent } from 'rxjs'\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout'\r\n\r\n@Component({\r\n    selector: 'app-search-bar',\r\n    templateUrl: './search-bar.component.html',\r\n    styleUrls: ['./search-bar.component.scss'],\r\n})\r\nexport class SearchBarComponent {\r\n    searchValue: string = ''\r\n    @Input() inputPlaceholder: string = ''\r\n    @Output() search = new EventEmitter<string>()\r\n\r\n    constructor(private breakpointObserver: BreakpointObserver) {}\r\n\r\n    ngOnInit() {\r\n        this.breakpointObserver.observe([Breakpoints.Handset]).subscribe((result: { matches: any }) => {\r\n            if (result.matches) {\r\n                const inputElement = document.querySelector('.searchInput')\r\n                if (inputElement) {\r\n                    fromEvent<KeyboardEvent>(inputElement, 'keydown')\r\n                        .pipe(debounceTime(1000), distinctUntilChanged())\r\n                        .subscribe(() => {\r\n                            this.search.emit(this.searchValue)\r\n                        })\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    onSearch(value: Event) {\r\n        if (value) {\r\n            this.searchValue = (value.target as HTMLInputElement).value\r\n        }\r\n    }\r\n    onSeachButtonClick() {\r\n        this.search.emit(this.searchValue)\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\r\n\r\n.search-bar-container {\r\n    background-color: $theme-color-base;\r\n    display: flex;\r\n    align-items: center;\r\n    border-radius: $border-radius-lg;\r\n}\r\n\r\n.searchInput {\r\n    background-image: url(/assets/search-icon.png);\r\n    background-repeat: no-repeat;\r\n    background-position: $spacing-xs center;\r\n    padding: 0 $spacing-xl;\r\n    background-color: $theme-color-base;\r\n    border: none;\r\n    outline: none;\r\n    border-radius: $border-radius-lg;\r\n    width: 100%;\r\n    color: $white;\r\n    font-size: $font-size-lg;\r\n}\r\n\r\ninput::placeholder {\r\n    font-size: $font-size-lg;\r\n    line-height: 1.5;\r\n    color: $silver;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n    .search-bar-container {\r\n        border-radius: $border-radius-sm;\r\n    }\r\n    .searchInput {\r\n        font-size: $font-size-md;\r\n        background-size: $spacing-normal;\r\n        padding: 0 $spacing-lg;\r\n    }\r\n    app-button {\r\n        display: none;\r\n    }\r\n    input::placeholder {\r\n        font-size: $font-size-xs;\r\n        line-height: 1.5;\r\n    }\r\n}\r\n@media (max-width: 480px) {\r\n    .searchInput {\r\n        font-size: $font-size-xs;\r\n        background-size: $spacing-xsm;\r\n    }\r\n}\r\n",
                    "styleUrl": "./search-bar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"search-bar-container\">\r\n    <input [placeholder]=\"inputPlaceholder\" (input)=\"onSearch($event)\" type=\"text\" class=\"searchInput\" />\r\n    <app-button [disabled]=\"!searchValue\" (click)=\"onSeachButtonClick()\" size=\"large\" label=\"Search\"></app-button>\r\n</div>\r\n"
        },
        {
            "name": "SearchResultPageComponent",
            "id": "component-SearchResultPageComponent-433e493dcc54672fa320f05567e3316756136d0a76c1d56409296ba4d6c3ea4674e99f38be5d6f5f1f87862937b418c93ddcd33c47977a4bb10bcb433cf57017",
            "file": "src/app/modules/search-result-page/search-result-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-search-result-page",
            "styleUrls": [
                "./search-result-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./search-result-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "allMovies",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IMovieSeries[]",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "currentMovieSeries",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "currentPage",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "totalItems",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | null",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "userAuth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserAuthService",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onScroll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core'\r\nimport { ActivatedRoute, Params, Router } from '@angular/router'\r\nimport { UserAuthService } from 'src/app/services/user-auth.service'\r\n\r\ninterface IMovieSeries {\r\n    adult: boolean\r\n    backdrop_path: string\r\n    genre_ids: []\r\n    id: number\r\n    media_type: string\r\n    original_language: string\r\n    original_title: string\r\n    original_name: string\r\n    overview: string\r\n    popularity: number\r\n    poster_path: string\r\n    release_date: string\r\n    first_air_date: string\r\n    title: string\r\n    video: boolean\r\n    vote_average: number\r\n    vote_count: number\r\n}\r\n\r\n@Component({\r\n    selector: 'app-search-result-page',\r\n    templateUrl: './search-result-page.component.html',\r\n    styleUrls: ['./search-result-page.component.scss'],\r\n})\r\nexport class SearchResultPageComponent implements OnInit {\r\n    allMovies: IMovieSeries[] = []\r\n    currentPage = 1\r\n    currentMovieSeries: string = ''\r\n    totalItems: number | null = null\r\n    constructor(public userAuth: UserAuthService, private router: Router, private activatedRoute: ActivatedRoute) {}\r\n    ngOnInit(): void {\r\n        this.activatedRoute.params.subscribe((params) => {\r\n            this.userAuth.fetchMoviesSeries(params['query'], this.currentPage).subscribe((res: any) => {\r\n                this.currentMovieSeries = params['query']\r\n                this.totalItems = res.total_results\r\n                this.allMovies = res.results\r\n                if (this.allMovies.length === 0) {\r\n                    this.router.navigate(['/no-result', params['query']])\r\n                }\r\n            })\r\n        })\r\n    }\r\n    onScroll() {\r\n        this.currentPage++\r\n        this.activatedRoute.params.subscribe((params: Params) => {\r\n            this.userAuth.fetchMoviesSeries(params['query'], this.currentPage).subscribe((res: any) => {\r\n                this.allMovies = [...this.allMovies, ...res.results]\r\n            })\r\n        })\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\r\n\r\n.search-results {\r\n    background-color: $theme-color-base;\r\n    padding: 0 $spacing-sm;\r\n}\r\n.movie {\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 1fr);\r\n    grid-gap: $spacing-md;\r\n}\r\n.search-item-count {\r\n    color: white;\r\n    font-size: $font-size-xxl;\r\n    line-height: 1.5;\r\n    margin-bottom: $spacing-normal;\r\n    margin-top: $spacing-lg;\r\n}\r\n@media (max-width: 768px) {\r\n    .movie {\r\n        grid-template-columns: repeat(2, 1fr);\r\n    }\r\n    .search-results {\r\n        padding: 0 $spacing-xsm;\r\n    }\r\n}\r\n@media (max-width: 384px) {\r\n    .movie {\r\n        grid-template-columns: repeat(1, 1fr);\r\n    }\r\n}\r\n",
                    "styleUrl": "./search-result-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "userAuth",
                        "type": "UserAuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 34,
                "jsdoctags": [
                    {
                        "name": "userAuth",
                        "type": "UserAuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div\r\n    infinite-scroll\r\n    [infiniteScrollDistance]=\"1\"\r\n    [infiniteScrollUpDistance]=\"1\"\r\n    [infiniteScrollThrottle]=\"500\"\r\n    (scrolled)=\"onScroll()\"\r\n    class=\"search-results\"\r\n>\r\n    <div class=\"search-item-count\">Found {{ totalItems }} results for \"{{ currentMovieSeries }}\"</div>\r\n    <div class=\"movie\">\r\n        <div *ngFor=\"let movie of allMovies\">\r\n            <app-movie-series-card\r\n                routerLink=\"details/{{ movie.id }}\"\r\n                label=\"{{ movie.media_type === 'tv' ? 'TV series' : 'Movie' }}\"\r\n                title=\"{{ movie.media_type === 'movie' ? movie.original_title : movie.original_name }}\"\r\n                year=\"{{ movie.media_type === 'movie' ? (movie.release_date | date: 'yyyy') : (movie.first_air_date | date: 'yyyy') }}\"\r\n                [image]=\"'https://www.themoviedb.org/t/p/w220_and_h330_face' + movie.poster_path\"\r\n                icon=\"{{ movie.media_type === 'tv' ? 'assets/series-icon.png' : 'assets/movie-icon.png' }}\"\r\n            ></app-movie-series-card>\r\n        </div>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "StarRatingComponent",
            "id": "component-StarRatingComponent-f5ee8d436f14298f6646cdfebcfd5541814c1935bac92172ddc61d974d4d82c9769f28b31448e08d211457e0b9b55f9ff2f0f8f80d30a787f2b1f528a791cbbe",
            "file": "src/app/components/star-rating/star-rating.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-star-rating",
            "styleUrls": [
                "./star-rating.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./star-rating.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "rating",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core'\r\n\r\n@Component({\r\n    selector: 'app-star-rating',\r\n    templateUrl: './star-rating.component.html',\r\n    styleUrls: ['./star-rating.component.scss'],\r\n})\r\nexport class StarRatingComponent {\r\n    @Input() rating: any\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\r\n\r\n.star {\r\n    position: relative;\r\n    display: inline-block;\r\n    font-size: 2rem;\r\n    color: $silver;\r\n}\r\n\r\n.full {\r\n    color: $orange;\r\n}\r\n\r\n.half {\r\n    position: absolute;\r\n    display: inline-block;\r\n    overflow: hidden;\r\n    color: $orange;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n    .star {\r\n        font-size: 1rem;\r\n    }\r\n}\r\n",
                    "styleUrl": "./star-rating.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ng-template #star let-fill=\"fill\">\r\n    <span class=\"star\" [class.full]=\"fill === 100\"> <span class=\"half\" [style.width.%]=\"fill\"> &#9733;</span>&#9733;</span>\r\n</ng-template>\r\n\r\n<ngb-rating [(rate)]=\"rating\" [starTemplate]=\"star\" [readonly]=\"true\" [max]=\"5\"></ngb-rating>\r\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-6d6a08a71b9cc4a3c1351225151cfda240f3ced8d146ec8f79d36bb3d05f3240812dacc9ca7b8e8aee88b520731e90e205908585b46af53ef934caf66545f294",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core'\r\nimport { BrowserModule } from '@angular/platform-browser'\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\r\n\r\nimport { SearchBarComponent } from './components/search-bar/search-bar.component'\r\nimport { AppRoutingModule } from './app-routing.module'\r\nimport { AppComponent } from './app.component'\r\nimport { InputComponent } from './components/input/input.component'\r\nimport { CardComponent } from './components/card/card.component'\r\nimport { DropDownMenuComponent } from './components/drop-down-menu/drop-down-menu.component'\r\nimport { ButtonComponent } from './components/button/button.component'\r\nimport { NavigationBarComponent } from './components/navigation-bar/navigation-bar.component'\r\nimport { ProfileMenuComponent } from './components/profile-menu/profile-menu.component'\r\nimport { NavigationMenuComponent } from './components/navigation-menu/navigation-menu.component'\r\nimport { MovieSeriesCardComponent } from './components/movie-series-card/movie-series-card.component'\r\nimport { GenreComponent } from './components/genre/genre.component'\r\nimport { RegistrationPageComponent } from './modules/registration-page/registration-page.component'\r\nimport { HttpClientModule } from '@angular/common/http'\r\nimport { LoginPageComponent } from './modules/login-page/login-page.component'\r\nimport { UserAuthService } from './services/user-auth.service'\r\nimport { HomePageComponent } from './modules/home-page/home-page.component'\r\nimport { AuthGuardService } from './services/auth-guard.service'\r\nimport { JwtModule } from '@auth0/angular-jwt'\r\nimport { NoResultPageComponent } from './modules/no-result-page/no-result-page.component'\r\nimport { BannerComponent } from './components/banner/banner.component'\r\nimport { BookmarkPageComponent } from './modules/bookmark-page/bookmark-page.component';\r\nimport { MovieGenrePageComponent } from './modules/movie-genre-page/movie-genre-page.component';\r\nimport { MovieGenreDetailsPageComponent } from './modules/movie-genre-details-page/movie-genre-details-page.component'\r\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll'\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\r\nimport { DashboardComponent } from './modules/dashboard/dashboard.component'\r\nimport { CarouselModule } from 'ngx-owl-carousel-o'\r\nimport { StarRatingComponent } from './components/star-rating/star-rating.component'\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MovieDetailComponent } from './components/movie-detail/movie-detail.component';\r\nimport { GenreCardComponent } from './components/genre-card/genre-card.component';\r\nimport { CastMemberComponent } from './components/cast-member/cast-member.component';\r\nimport { DetailPageComponent } from './modules/detail-page/detail-page.component'\r\nimport { SearchResultPageComponent } from './modules/search-result-page/search-result-page.component'\r\nimport { LoginRegisterAuthService } from './services/login-register-auth.service';\r\nimport { BookmarkIconComponent } from './components/bookmark-icon/bookmark-icon.component'\r\nimport { BookmarkService } from './services/bookmark.service'\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        ButtonComponent,\r\n        GenreComponent,\r\n        MovieSeriesCardComponent,\r\n        NavigationBarComponent,\r\n        ProfileMenuComponent,\r\n        SearchBarComponent,\r\n        NavigationMenuComponent,\r\n        DropDownMenuComponent,\r\n        ProfileMenuComponent,\r\n        CardComponent,\r\n        InputComponent,\r\n        LoginPageComponent,\r\n        RegistrationPageComponent,\r\n        HomePageComponent,\r\n        SearchResultPageComponent,\r\n        NoResultPageComponent,\r\n        DashboardComponent,\r\n        BannerComponent,\r\n        BookmarkPageComponent,\r\n        MovieGenrePageComponent,\r\n        MovieGenreDetailsPageComponent,\r\n        DashboardComponent,\r\n        StarRatingComponent,\r\n        MovieDetailComponent,\r\n        GenreCardComponent,\r\n        CastMemberComponent,\r\n        DetailPageComponent,\r\n        SearchResultPageComponent,\r\n        BookmarkIconComponent,\r\n    ],\r\n\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        HttpClientModule,\r\n        BrowserAnimationsModule,\r\n        InfiniteScrollModule,\r\n        JwtModule.forRoot({\r\n            config: {\r\n                tokenGetter: () => localStorage.getItem('access_token'),\r\n            },\r\n        }),\r\n        CarouselModule,\r\n        BrowserAnimationsModule,\r\n        NgbModule,\r\n    ],\r\n\r\n    providers: [UserAuthService, AuthGuardService, LoginRegisterAuthService, BookmarkService],\r\n    bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "BookmarkService"
                        },
                        {
                            "name": "UserAuthService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "BannerComponent"
                        },
                        {
                            "name": "BookmarkIconComponent"
                        },
                        {
                            "name": "BookmarkPageComponent"
                        },
                        {
                            "name": "CardComponent"
                        },
                        {
                            "name": "CastMemberComponent"
                        },
                        {
                            "name": "DetailPageComponent"
                        },
                        {
                            "name": "DropDownMenuComponent"
                        },
                        {
                            "name": "GenreCardComponent"
                        },
                        {
                            "name": "GenreComponent"
                        },
                        {
                            "name": "HomePageComponent"
                        },
                        {
                            "name": "InputComponent"
                        },
                        {
                            "name": "LoginPageComponent"
                        },
                        {
                            "name": "MovieDetailComponent"
                        },
                        {
                            "name": "MovieGenreDetailsPageComponent"
                        },
                        {
                            "name": "MovieGenrePageComponent"
                        },
                        {
                            "name": "MovieSeriesCardComponent"
                        },
                        {
                            "name": "NavigationBarComponent"
                        },
                        {
                            "name": "NavigationMenuComponent"
                        },
                        {
                            "name": "NoResultPageComponent"
                        },
                        {
                            "name": "ProfileMenuComponent"
                        },
                        {
                            "name": "ProfileMenuComponent"
                        },
                        {
                            "name": "RegistrationPageComponent"
                        },
                        {
                            "name": "SearchBarComponent"
                        },
                        {
                            "name": "SearchResultPageComponent"
                        },
                        {
                            "name": "SearchResultPageComponent"
                        },
                        {
                            "name": "StarRatingComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-047c3edc437101ebd8d2c7f72b5dc697121674a82a6dada8824c6b943ae27bf9ec525418efe6fc7184e28dd37041280db49fe3cdc490d9077d1c819e5a327ef0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core'\r\nimport { RouterModule, Routes } from '@angular/router'\r\n\r\nimport { NoResultPageComponent } from './modules/no-result-page/no-result-page.component'\r\nimport { BookmarkPageComponent } from './modules/bookmark-page/bookmark-page.component'\r\nimport { HomePageComponent } from './modules/home-page/home-page.component'\r\nimport { LoginPageComponent } from './modules/login-page/login-page.component'\r\nimport { MovieGenreDetailsPageComponent } from './modules/movie-genre-details-page/movie-genre-details-page.component'\r\nimport { MovieGenrePageComponent } from './modules/movie-genre-page/movie-genre-page.component'\r\nimport { DashboardComponent } from './modules/dashboard/dashboard.component'\r\nimport { DetailPageComponent } from './modules/detail-page/detail-page.component'\r\nimport { SearchResultPageComponent } from './modules/search-result-page/search-result-page.component'\r\nimport { RegistrationPageComponent } from './modules/registration-page/registration-page.component'\r\nimport { AuthGuardService } from './services/auth-guard.service'\r\nimport { LoginRegisterAuthService } from './services/login-register-auth.service'\r\n\r\nconst routes: Routes = [\r\n    { path: 'login', component: LoginPageComponent, canActivate: [LoginRegisterAuthService] },\r\n    { path: 'register', component: RegistrationPageComponent, canActivate: [LoginRegisterAuthService] },\r\n    {\r\n        path: 'home',\r\n        component: HomePageComponent, \r\n        canActivate: [AuthGuardService],\r\n        children: [\r\n            { path: '', component: DashboardComponent },\r\n            { path: 'bookmarks', component: BookmarkPageComponent },\r\n            { path: 'bookmarks/details/:id', component: DetailPageComponent },\r\n            { path: 'details/:id', component: DetailPageComponent },\r\n            { path: 'search/:query', component: SearchResultPageComponent },\r\n            { path: 'search/:query/details/:id', component: DetailPageComponent },\r\n            { path: ':moviesSeries', component: MovieGenrePageComponent },\r\n            { path: ':moviesSeries/:id', component: MovieGenreDetailsPageComponent },\r\n            { path: ':moviesSeries/:id/details/:id', component: DetailPageComponent },\r\n        ],\r\n    },\r\n    { path: '', redirectTo: 'login', pathMatch: 'full' },\r\n    { path: 'no-result/:errorData', component: NoResultPageComponent },\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "ActionGenre",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/genre/genre.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n    props: {\r\n        genre: 'Action',\r\n        color: '#0e7490',\r\n    },\r\n})"
            },
            {
                "name": "AdventureGenre",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/genre/genre.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n    props: {\r\n        genre: 'Adventure',\r\n        color: '#171E31',\r\n    },\r\n})"
            },
            {
                "name": "AnimationGenre",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/genre/genre.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n    props: {\r\n        genre: 'Animation',\r\n        color: '#0e7490',\r\n    },\r\n})"
            },
            {
                "name": "bannerjohnwick",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/banner/banner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n    props: {\r\n        year: '2000',\r\n        title: 'John wick: Chapter 3 - Parabellum',\r\n        overview:\r\n            'In \"John Wick: Chapter 3 - Parabellum\", legendary hitman John Wick is on the run after being declared \"excommunicado\" by the High Table, with a $14 million bounty on his head. Wick must fight his way through waves of assassins and navigate the dangerous world of the criminal underworld to try and survive.',\r\n        voteAverage: '4.5',\r\n        background: 'assets/card-movie.png',\r\n    },\r\n})"
            },
            {
                "name": "Casts",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/cast-member/cast-member.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    props: {\r\n        name: 'Morgan Freeman',\r\n    },\r\n})"
            },
            {
                "name": "ConfirmPassword",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n    props: {\r\n        label: 'Confirm password',\r\n        placeholder: 'Confirm password',\r\n    },\r\n})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "DocumentaryGenre",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/genre/genre.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n    props: {\r\n        genre: 'Documentary',\r\n        color: '#0F766E',\r\n    },\r\n})"
            },
            {
                "name": "DropDownOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/drop-down-menu/drop-down-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n        props: {\r\n            dropdownData: [\r\n                {\r\n                    name: 'Profile Menu',\r\n                    onClick: () => {\r\n                        console.log('Option 1 clicked')\r\n                    },\r\n                },\r\n                {\r\n                    name: 'Logout',\r\n                    onClick: () => {\r\n                        console.log('Option 2 clicked')\r\n                    },\r\n                },\r\n            ],\r\n        },\r\n})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n    production: true,\r\n    apiUrl: 'https://sea-turtle-app-ccc3d.ondigitalocean.app/api/auth/local',\r\n    imageBaseUrl: 'https://www.themoviedb.org/t/p/w355_and_h200_multi_faces',\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n    production: false,\r\n    apiUrl: 'https://sea-turtle-app-ccc3d.ondigitalocean.app/api/auth/local',\r\n    imageBaseUrl: 'https://www.themoviedb.org/t/p/w355_and_h200_multi_faces',\r\n}"
            },
            {
                "name": "InputEmail",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n    props: {\r\n        label: 'Email',\r\n        placeholder: 'Email',\r\n    },\r\n})"
            },
            {
                "name": "InputName",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n    props: {\r\n        label: 'Full Name',\r\n        placeholder: 'Full Name',\r\n    },\r\n})"
            },
            {
                "name": "InputPassword",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n    props: {\r\n        label: 'Password',\r\n        placeholder: 'Password',\r\n    },\r\n})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "loginCard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n    template: `\r\n    <app-card type=\"primary\"> \r\n    <div style=\"display: flex; margin: -60px -48px;\">\r\n    <app-card type=\"secondary\" style=\"flex: 0 0 50%\"></app-card>\r\n    <div>\r\n    goto signup\r\n    </div>  \r\n    </div>      \r\n    </app-card>`,\r\n})"
            },
            {
                "name": "MovieDetails1",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/movie-detail/movie-detail.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    props: {\r\n        label: 'Language',\r\n        movieDetail: 'English',\r\n    },\r\n})"
            },
            {
                "name": "MovieDetails2",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/movie-detail/movie-detail.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    props: {\r\n        label: 'Year',\r\n        movieDetail: '1994',\r\n    },\r\n})"
            },
            {
                "name": "MovieGenre",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/genre-card/genre-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    props: {\r\n        genre: 'Action',\r\n    },\r\n})"
            },
            {
                "name": "moviescard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/movie-series-card/movie-series-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n    props: {\r\n        image: 'assets/card-movie.png',\r\n        icon: 'assets/movie-icon.png',\r\n        label: 'Movie',\r\n        title: 'Batman',\r\n        year: 2000,\r\n        isBookmark: false,\r\n    },\r\n})"
            },
            {
                "name": "NavigationMenu",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/navigation-menu/navigation-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n    props: {\r\n        items: [\r\n            { name: 'home', icon: 'assets/home-icon.svg', path: '/home' },\r\n            { name: 'movie', icon: 'assets/movie-icon.svg', path: '/movies' },\r\n            { name: 'series', icon: 'assets/series-icon.svg', path: '/series' },\r\n            { name: 'bookmark', icon: 'assets/bookmark-icon.svg', path: '/bookmarks' },\r\n        ],\r\n    },\r\n})"
            },
            {
                "name": "NavigationWithNavMenu",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/navigation-bar/navigation-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n    template: `<app-navigation-bar>\r\n    <app-navigation-menu></app-navigation-menu>\r\n    </app-navigation-bar>`,\r\n    props: {\r\n        dropDownData: [\r\n            {\r\n                name: 'Profile Menu',\r\n                onClick: () => {\r\n                    console.log('Option 1 clicked')\r\n                },\r\n            },\r\n            {\r\n                name: 'Logout',\r\n                onClick: () => {\r\n                    console.log('Option 2 clicked')\r\n                },\r\n            },\r\n        ],\r\n        icon: 'assets/profile-menu.svg',\r\n    },\r\n})"
            },
            {
                "name": "OTTApp",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n    props: {},\r\n})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "primaryCard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n    props: {\r\n        type: 'primary',\r\n    },\r\n})"
            },
            {
                "name": "ProfileIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/profile-menu/profile-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n    props: {\r\n        dropDownData: [\r\n            {\r\n                name: 'Profile Menu',\r\n                onClick: () => {\r\n                    console.log('Option 1 clicked')\r\n                },\r\n            },\r\n            {\r\n                name: 'Logout',\r\n                onClick: () => {\r\n                    console.log('Option 2 clicked')\r\n                },\r\n            },\r\n        ],\r\n        icon: 'assets/profile-menu.svg',\r\n    },\r\n})"
            },
            {
                "name": "RegisterDisabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n    props: {\r\n        label: 'Register',\r\n        disabled: true,\r\n        type: 'primary',\r\n    },\r\n})"
            },
            {
                "name": "RegisterEnabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n    props: {\r\n        label: 'Register',\r\n        disabled: false,\r\n        type: 'primary',\r\n    },\r\n})"
            },
            {
                "name": "registration",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/home-page/home-page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n    props: {},\r\n})"
            },
            {
                "name": "registration",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/login-page/login-page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n    props: {},\r\n})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "SearchBar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/search-bar/search-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n    props: {\r\n        inputPlaceholder: 'Search for movies or TV series',\r\n    },\r\n})"
            },
            {
                "name": "SearchDisabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n    props: {\r\n        label: 'Search',\r\n        size: 'large',\r\n        type: 'primary',\r\n        disabled: true,\r\n    },\r\n})"
            },
            {
                "name": "SearchEnabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n    props: {\r\n        label: 'Search',\r\n        size: 'large',\r\n        type: 'primary',\r\n        disabled: false,\r\n    },\r\n})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "secondaryCard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n    props: {\r\n        type: 'secondary',\r\n    },\r\n})"
            },
            {
                "name": "seriescard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/movie-series-card/movie-series-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n    props: {\r\n        image: 'assets/card-series.png',\r\n        icon: 'assets/movie-icon.png',\r\n        label: 'TV Series',\r\n        title: 'Friends',\r\n        year: 1999,\r\n        isBookmark: true,\r\n    },\r\n})"
            },
            {
                "name": "SignInDisabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n    props: {\r\n        label: 'Sign In',\r\n        disabled: true,\r\n    },\r\n})"
            },
            {
                "name": "SignInEnabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n    props: {\r\n        label: 'Sign In',\r\n        disabled: false,\r\n        type: 'primary',\r\n    },\r\n})"
            },
            {
                "name": "SignUpDisabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n    props: {\r\n        label: 'Sign Up',\r\n        disabled: true,\r\n        type: 'secondary',\r\n    },\r\n})"
            },
            {
                "name": "SignUpEnabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n    props: {\r\n        label: 'Sign Up',\r\n        disabled: false,\r\n        type: 'secondary',\r\n    },\r\n})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "starTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/star-rating/star-rating.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\r\n  <ng-template #star let-fill=\"fill\">\r\n    <span class=\"star\" [class.full]=\"fill === 100\">\r\n      <span class=\"half\" [style.width.%]=\"fill\"> &#9733;</span>&#9733;\r\n    </span>\r\n  </ng-template>\r\n`"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "ThreeStarRating",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/star-rating/star-rating.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    component: StarRatingComponent,\r\n    props: {\r\n        rating: 3.5,\r\n        starTemplate,\r\n    },\r\n})"
            },
            {
                "name": "TwoStarRating",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/star-rating/star-rating.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    component: StarRatingComponent,\r\n    props: {\r\n        rating: 2,\r\n        starTemplate,\r\n    },\r\n})"
            },
            {
                "name": "VALIDATION_TXT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/input/input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any",
                "defaultValue": "{\r\n    email: 'Invalid email',\r\n    password: 'Empty password',\r\n    required: 'Field is required',\r\n    username: 'Invalid username',\r\n    MATCH_PASSWORD: 'Password is not matching!',\r\n}"
            }
        ],
        "functions": [
            {
                "name": "email",
                "file": "src/app/components/input/input.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "AC",
                        "type": "AbstractControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "null | literal type",
                "jsdoctags": [
                    {
                        "name": "AC",
                        "type": "AbstractControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "passwordMatch",
                "file": "src/app/components/input/input.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "AC",
                        "type": "AbstractControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "null | literal type",
                "jsdoctags": [
                    {
                        "name": "AC",
                        "type": "AbstractControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "username",
                "file": "src/app/components/input/input.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "AC",
                        "type": "AbstractControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "null | literal type",
                "jsdoctags": [
                    {
                        "name": "AC",
                        "type": "AbstractControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/components/genre/genre.stories.ts": [
                {
                    "name": "ActionGenre",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/genre/genre.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n    props: {\r\n        genre: 'Action',\r\n        color: '#0e7490',\r\n    },\r\n})"
                },
                {
                    "name": "AdventureGenre",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/genre/genre.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n    props: {\r\n        genre: 'Adventure',\r\n        color: '#171E31',\r\n    },\r\n})"
                },
                {
                    "name": "AnimationGenre",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/genre/genre.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n    props: {\r\n        genre: 'Animation',\r\n        color: '#0e7490',\r\n    },\r\n})"
                },
                {
                    "name": "DocumentaryGenre",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/genre/genre.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n    props: {\r\n        genre: 'Documentary',\r\n        color: '#0F766E',\r\n    },\r\n})"
                }
            ],
            "src/app/components/banner/banner.stories.ts": [
                {
                    "name": "bannerjohnwick",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/banner/banner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n    props: {\r\n        year: '2000',\r\n        title: 'John wick: Chapter 3 - Parabellum',\r\n        overview:\r\n            'In \"John Wick: Chapter 3 - Parabellum\", legendary hitman John Wick is on the run after being declared \"excommunicado\" by the High Table, with a $14 million bounty on his head. Wick must fight his way through waves of assassins and navigate the dangerous world of the criminal underworld to try and survive.',\r\n        voteAverage: '4.5',\r\n        background: 'assets/card-movie.png',\r\n    },\r\n})"
                }
            ],
            "src/app/components/cast-member/cast-member.stories.ts": [
                {
                    "name": "Casts",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/cast-member/cast-member.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    props: {\r\n        name: 'Morgan Freeman',\r\n    },\r\n})"
                }
            ],
            "src/app/components/input/input.stories.ts": [
                {
                    "name": "ConfirmPassword",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n    props: {\r\n        label: 'Confirm password',\r\n        placeholder: 'Confirm password',\r\n    },\r\n})"
                },
                {
                    "name": "InputEmail",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n    props: {\r\n        label: 'Email',\r\n        placeholder: 'Email',\r\n    },\r\n})"
                },
                {
                    "name": "InputName",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n    props: {\r\n        label: 'Full Name',\r\n        placeholder: 'Full Name',\r\n    },\r\n})"
                },
                {
                    "name": "InputPassword",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n    props: {\r\n        label: 'Password',\r\n        placeholder: 'Password',\r\n    },\r\n})"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/app/components/drop-down-menu/drop-down-menu.stories.ts": [
                {
                    "name": "DropDownOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/drop-down-menu/drop-down-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n        props: {\r\n            dropdownData: [\r\n                {\r\n                    name: 'Profile Menu',\r\n                    onClick: () => {\r\n                        console.log('Option 1 clicked')\r\n                    },\r\n                },\r\n                {\r\n                    name: 'Logout',\r\n                    onClick: () => {\r\n                        console.log('Option 2 clicked')\r\n                    },\r\n                },\r\n            ],\r\n        },\r\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n    production: true,\r\n    apiUrl: 'https://sea-turtle-app-ccc3d.ondigitalocean.app/api/auth/local',\r\n    imageBaseUrl: 'https://www.themoviedb.org/t/p/w355_and_h200_multi_faces',\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n    production: false,\r\n    apiUrl: 'https://sea-turtle-app-ccc3d.ondigitalocean.app/api/auth/local',\r\n    imageBaseUrl: 'https://www.themoviedb.org/t/p/w355_and_h200_multi_faces',\r\n}"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/components/card/card.stories.ts": [
                {
                    "name": "loginCard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n    template: `\r\n    <app-card type=\"primary\"> \r\n    <div style=\"display: flex; margin: -60px -48px;\">\r\n    <app-card type=\"secondary\" style=\"flex: 0 0 50%\"></app-card>\r\n    <div>\r\n    goto signup\r\n    </div>  \r\n    </div>      \r\n    </app-card>`,\r\n})"
                },
                {
                    "name": "primaryCard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n    props: {\r\n        type: 'primary',\r\n    },\r\n})"
                },
                {
                    "name": "secondaryCard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n    props: {\r\n        type: 'secondary',\r\n    },\r\n})"
                }
            ],
            "src/app/components/movie-detail/movie-detail.stories.ts": [
                {
                    "name": "MovieDetails1",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/movie-detail/movie-detail.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    props: {\r\n        label: 'Language',\r\n        movieDetail: 'English',\r\n    },\r\n})"
                },
                {
                    "name": "MovieDetails2",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/movie-detail/movie-detail.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    props: {\r\n        label: 'Year',\r\n        movieDetail: '1994',\r\n    },\r\n})"
                }
            ],
            "src/app/components/genre-card/genre-card.stories.ts": [
                {
                    "name": "MovieGenre",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/genre-card/genre-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    props: {\r\n        genre: 'Action',\r\n    },\r\n})"
                }
            ],
            "src/app/components/movie-series-card/movie-series-card.stories.ts": [
                {
                    "name": "moviescard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/movie-series-card/movie-series-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n    props: {\r\n        image: 'assets/card-movie.png',\r\n        icon: 'assets/movie-icon.png',\r\n        label: 'Movie',\r\n        title: 'Batman',\r\n        year: 2000,\r\n        isBookmark: false,\r\n    },\r\n})"
                },
                {
                    "name": "seriescard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/movie-series-card/movie-series-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n    props: {\r\n        image: 'assets/card-series.png',\r\n        icon: 'assets/movie-icon.png',\r\n        label: 'TV Series',\r\n        title: 'Friends',\r\n        year: 1999,\r\n        isBookmark: true,\r\n    },\r\n})"
                }
            ],
            "src/app/components/navigation-menu/navigation-menu.stories.ts": [
                {
                    "name": "NavigationMenu",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/navigation-menu/navigation-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n    props: {\r\n        items: [\r\n            { name: 'home', icon: 'assets/home-icon.svg', path: '/home' },\r\n            { name: 'movie', icon: 'assets/movie-icon.svg', path: '/movies' },\r\n            { name: 'series', icon: 'assets/series-icon.svg', path: '/series' },\r\n            { name: 'bookmark', icon: 'assets/bookmark-icon.svg', path: '/bookmarks' },\r\n        ],\r\n    },\r\n})"
                }
            ],
            "src/app/components/navigation-bar/navigation-bar.stories.ts": [
                {
                    "name": "NavigationWithNavMenu",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/navigation-bar/navigation-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n    template: `<app-navigation-bar>\r\n    <app-navigation-menu></app-navigation-menu>\r\n    </app-navigation-bar>`,\r\n    props: {\r\n        dropDownData: [\r\n            {\r\n                name: 'Profile Menu',\r\n                onClick: () => {\r\n                    console.log('Option 1 clicked')\r\n                },\r\n            },\r\n            {\r\n                name: 'Logout',\r\n                onClick: () => {\r\n                    console.log('Option 2 clicked')\r\n                },\r\n            },\r\n        ],\r\n        icon: 'assets/profile-menu.svg',\r\n    },\r\n})"
                }
            ],
            "src/app/app.stories.ts": [
                {
                    "name": "OTTApp",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n    props: {},\r\n})"
                }
            ],
            "src/app/components/profile-menu/profile-menu.stories.ts": [
                {
                    "name": "ProfileIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/profile-menu/profile-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n    props: {\r\n        dropDownData: [\r\n            {\r\n                name: 'Profile Menu',\r\n                onClick: () => {\r\n                    console.log('Option 1 clicked')\r\n                },\r\n            },\r\n            {\r\n                name: 'Logout',\r\n                onClick: () => {\r\n                    console.log('Option 2 clicked')\r\n                },\r\n            },\r\n        ],\r\n        icon: 'assets/profile-menu.svg',\r\n    },\r\n})"
                }
            ],
            "src/app/components/button/button.stories.ts": [
                {
                    "name": "RegisterDisabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n    props: {\r\n        label: 'Register',\r\n        disabled: true,\r\n        type: 'primary',\r\n    },\r\n})"
                },
                {
                    "name": "RegisterEnabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n    props: {\r\n        label: 'Register',\r\n        disabled: false,\r\n        type: 'primary',\r\n    },\r\n})"
                },
                {
                    "name": "SearchDisabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n    props: {\r\n        label: 'Search',\r\n        size: 'large',\r\n        type: 'primary',\r\n        disabled: true,\r\n    },\r\n})"
                },
                {
                    "name": "SearchEnabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n    props: {\r\n        label: 'Search',\r\n        size: 'large',\r\n        type: 'primary',\r\n        disabled: false,\r\n    },\r\n})"
                },
                {
                    "name": "SignInDisabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n    props: {\r\n        label: 'Sign In',\r\n        disabled: true,\r\n    },\r\n})"
                },
                {
                    "name": "SignInEnabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n    props: {\r\n        label: 'Sign In',\r\n        disabled: false,\r\n        type: 'primary',\r\n    },\r\n})"
                },
                {
                    "name": "SignUpDisabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n    props: {\r\n        label: 'Sign Up',\r\n        disabled: true,\r\n        type: 'secondary',\r\n    },\r\n})"
                },
                {
                    "name": "SignUpEnabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n    props: {\r\n        label: 'Sign Up',\r\n        disabled: false,\r\n        type: 'secondary',\r\n    },\r\n})"
                }
            ],
            "src/app/modules/home-page/home-page.stories.ts": [
                {
                    "name": "registration",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/home-page/home-page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n    props: {},\r\n})"
                }
            ],
            "src/app/modules/login-page/login-page.stories.ts": [
                {
                    "name": "registration",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/login-page/login-page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n    props: {},\r\n})"
                }
            ],
            "src/app/components/search-bar/search-bar.stories.ts": [
                {
                    "name": "SearchBar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/search-bar/search-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n    props: {\r\n        inputPlaceholder: 'Search for movies or TV series',\r\n    },\r\n})"
                }
            ],
            "src/app/components/star-rating/star-rating.stories.ts": [
                {
                    "name": "starTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/star-rating/star-rating.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\r\n  <ng-template #star let-fill=\"fill\">\r\n    <span class=\"star\" [class.full]=\"fill === 100\">\r\n      <span class=\"half\" [style.width.%]=\"fill\"> &#9733;</span>&#9733;\r\n    </span>\r\n  </ng-template>\r\n`"
                },
                {
                    "name": "ThreeStarRating",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/star-rating/star-rating.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    component: StarRatingComponent,\r\n    props: {\r\n        rating: 3.5,\r\n        starTemplate,\r\n    },\r\n})"
                },
                {
                    "name": "TwoStarRating",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/star-rating/star-rating.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    component: StarRatingComponent,\r\n    props: {\r\n        rating: 2,\r\n        starTemplate,\r\n    },\r\n})"
                }
            ],
            "src/app/components/input/input.component.ts": [
                {
                    "name": "VALIDATION_TXT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/input/input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "defaultValue": "{\r\n    email: 'Invalid email',\r\n    password: 'Empty password',\r\n    required: 'Field is required',\r\n    username: 'Invalid username',\r\n    MATCH_PASSWORD: 'Password is not matching!',\r\n}"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/components/input/input.component.ts": [
                {
                    "name": "email",
                    "file": "src/app/components/input/input.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "AC",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "null | literal type",
                    "jsdoctags": [
                        {
                            "name": "AC",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "passwordMatch",
                    "file": "src/app/components/input/input.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "AC",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "null | literal type",
                    "jsdoctags": [
                        {
                            "name": "AC",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "username",
                    "file": "src/app/components/input/input.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "AC",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "null | literal type",
                    "jsdoctags": [
                        {
                            "name": "AC",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "login",
                        "component": "LoginPageComponent",
                        "canActivate": [
                            "LoginRegisterAuthService"
                        ]
                    },
                    {
                        "path": "register",
                        "component": "RegistrationPageComponent",
                        "canActivate": [
                            "LoginRegisterAuthService"
                        ]
                    },
                    {
                        "path": "home",
                        "component": "HomePageComponent",
                        "canActivate": [
                            "AuthGuardService"
                        ],
                        "children": [
                            {
                                "path": "",
                                "component": "DashboardComponent"
                            },
                            {
                                "path": "bookmarks",
                                "component": "BookmarkPageComponent"
                            },
                            {
                                "path": "bookmarks/details/:id",
                                "component": "DetailPageComponent"
                            },
                            {
                                "path": "details/:id",
                                "component": "DetailPageComponent"
                            },
                            {
                                "path": "search/:query",
                                "component": "SearchResultPageComponent"
                            },
                            {
                                "path": "search/:query/details/:id",
                                "component": "DetailPageComponent"
                            },
                            {
                                "path": ":moviesSeries",
                                "component": "MovieGenrePageComponent"
                            },
                            {
                                "path": ":moviesSeries/:id",
                                "component": "MovieGenreDetailsPageComponent"
                            },
                            {
                                "path": ":moviesSeries/:id/details/:id",
                                "component": "DetailPageComponent"
                            }
                        ]
                    },
                    {
                        "path": "",
                        "redirectTo": "login",
                        "pathMatch": "full"
                    },
                    {
                        "path": "no-result/:errorData",
                        "component": "NoResultPageComponent"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OTTApp",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/banner/banner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BannerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/banner/banner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "bannerjohnwick",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/bookmark-icon/bookmark-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BookmarkIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RegisterDisabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RegisterEnabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SearchDisabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SearchEnabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SignInDisabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SignInEnabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SignUpDisabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SignUpEnabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loginCard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "primaryCard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "secondaryCard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/cast-member/cast-member.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CastMemberComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/cast-member/cast-member.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Casts",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/dashboard/dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/drop-down-menu/drop-down-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DropDownMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/drop-down-menu/drop-down-menu.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IDropDownData",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/drop-down-menu/drop-down-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DropDownOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/genre-card/genre-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GenreCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/genre-card/genre-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MovieGenre",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/genre/genre.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GenreComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/genre/genre.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ActionGenre",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/genre/genre.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AdventureGenre",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/genre/genre.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AnimationGenre",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/genre/genre.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DocumentaryGenre",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "src/app/components/input/input.component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "email",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/input/input.component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "passwordMatch",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/input/input.component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "username",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/input/input.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "VALIDATION_TXT",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ConfirmPassword",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InputEmail",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InputName",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InputPassword",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/movie-detail/movie-detail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MovieDetailComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/movie-detail/movie-detail.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MovieDetails1",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/movie-detail/movie-detail.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MovieDetails2",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/movie-series-card/movie-series-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MovieSeriesCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/components/movie-series-card/movie-series-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "moviescard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/movie-series-card/movie-series-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "seriescard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/navigation-bar/navigation-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavigationBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/navigation-bar/navigation-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NavigationWithNavMenu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/navigation-menu/navigation-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavigationMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/navigation-menu/navigation-menu.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IItems",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/navigation-menu/navigation-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NavigationMenu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/profile-menu/profile-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProfileMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/profile-menu/profile-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProfileIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/search-bar/search-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/components/search-bar/search-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SearchBar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/star-rating/star-rating.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StarRatingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/star-rating/star-rating.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "starTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/star-rating/star-rating.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ThreeStarRating",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/star-rating/star-rating.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TwoStarRating",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/bookmark-page/bookmark-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BookmarkPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/dashboard/dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/detail-page/detail-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DetailPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/home-page/home-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomePageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/home-page/home-page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "registration",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/login-page/login-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/login-page/login-page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "registration",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/movie-genre-details-page/movie-genre-details-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MovieGenreDetailsPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/movie-genre-details-page/movie-genre-details-page.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IMovieSeries",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/movie-genre-page/movie-genre-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MovieGenrePageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/no-result-page/no-result-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NoResultPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/registration-page/registration-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RegistrationPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/search-result-page/search-result-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchResultPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/search-result-page/search-result-page.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IMovieSeries",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/services/auth-guard.service.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AuthGuardService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/services/bookmark.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "BookmarkService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/services/login-register-auth.service.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "LoginRegisterAuthService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/services/user-auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserAuthService",
                "coveragePercent": 7,
                "coverageCount": "1/14",
                "status": "low"
            },
            {
                "filePath": "src/app/services/user-auth.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ILogin",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/services/user-auth.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IRegister",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}