{
    "pipes": [],
    "interfaces": [
        {
            "name": "IDropDownData",
            "id": "interface-IDropDownData-a3a64e9b5e76455e7fa94653b277d01021c814a8e5bb2589d24bffda389735a2de57a35161a6881ccb083ee93b55cc545db3be10071f4bc4387caad9d97452a5",
            "file": "src/app/components/drop-down-menu/drop-down-menu.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit } from '@angular/core'\n\nexport interface IDropDownData {\n    name: string\n    onClick: () => void\n}\n\n@Component({\n    selector: 'app-drop-down-menu',\n    templateUrl: './drop-down-menu.component.html',\n    styleUrls: ['./drop-down-menu.component.scss'],\n})\nexport class DropDownMenuComponent {\n    @Input() dropdownData: IDropDownData[] = [];\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "onClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IItems",
            "id": "interface-IItems-5ee97568d5a594622aa4f2783f041868848c67bddeaaf4b80fc2a6eecc3d66827e30d5dac83b56651eb5bf0857fcde707725457801b0f3317c25a756f0757e5d",
            "file": "src/app/components/navigation-menu/navigation-menu.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core'\nimport { NavigationEnd, Router } from '@angular/router'\n\nexport interface IItems {\n    name: string\n    icon: string\n    path: string\n}\n\n@Component({\n    selector: 'app-navigation-menu',\n    templateUrl: './navigation-menu.component.html',\n    styleUrls: ['./navigation-menu.component.scss'],\n})\nexport class NavigationMenuComponent implements OnInit {\n    @Input() items: IItems[] = []\n    currentUrl: string = '/home'\n    ngOnInit() {\n        this.router.events.subscribe((event) => {\n            if (event instanceof NavigationEnd) {\n                this.currentUrl = event.url\n            }\n        })\n    }\n    constructor(private router: Router) {}\n}\n",
            "properties": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ILogin",
            "id": "interface-ILogin-b4b9cd472617214a73771bee81b0f38d0c0c52c0c8bca48d969d9daf24b494a16d3a41c70fdc5d5ae5e938dd36269fbc7717f7b63434396cdc0b0345497d6300",
            "file": "src/app/services/user-auth.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from '@angular/core'\nimport { HttpClient } from '@angular/common/http'\nimport { environment } from 'src/environments/environment'\nimport { Router } from '@angular/router'\nimport { tap } from 'rxjs/operators'\nimport { Observable } from 'rxjs'\n\ninterface ILogin {\n    identifier: string\n    password: string\n}\n\ninterface IRegister {\n    username: string\n    email: string\n    password: string\n}\n\n@Injectable()\nexport class UserAuthService {\n    public apiUrl = environment.apiUrl\n    constructor(private http: HttpClient, private router: Router) {}\n    loginUser(user: ILogin) {\n        return this.http.post(this.apiUrl, user)\n    }\n    registerUser(user: IRegister): Observable<any> {\n        return this.http.post(`${this.apiUrl}/register`, user).pipe(\n            tap((response: any) => {\n                localStorage.setItem('token', response.jwt)\n            })\n        )\n    }\n    fetchMoviesSeries(seachVal: string, pageNo: number) {\n        const token = localStorage.getItem('token')\n        const headers = { Authorization: `Bearer ${token}` }\n\n        return this.http.get(\n            `https://api.themoviedb.org/3/search/multi?query=${seachVal}&api_key=1d42d448b0d527e767f463355d242d88&language=en-US&page=${pageNo}&include_adult=false`,\n            { headers }\n        )\n    }\n\n    /**\n     * Removes the token from localStorage and navigates the user to the login page.\n     * After clearing the token, it waits for 2 seconds before navigating to the login page.\n     * This method is called when the user logs out.\n     */\n    logOutUser() {\n        localStorage.clear()\n        setTimeout(() => {\n            this.router.navigate(['/login'])\n        }, 1000)\n    }\n\n    fetchTrendingMoviess() {\n        const token = localStorage.getItem('token')\n        const headers = { Authorization: `Bearer ${token}` }\n        return this.http.get('https://api.themoviedb.org/3/trending/movie/week?api_key=1d42d448b0d527e767f463355d242d88', {\n            headers,\n        })\n    }\n\n    fetchPopularMoviess() {\n        const token = localStorage.getItem('token')\n        const headers = { Authorization: `Bearer ${token}` }\n        return this.http.get('https://api.themoviedb.org/3/movie/popular?api_key=1d42d448b0d527e767f463355d242d88&language=en-US&page=1', {\n            headers,\n        })\n    }\n\n    fetchMovieData(movieorseries: string, movieId: number) {\n        return this.http.get(`https://api.themoviedb.org/3/${movieorseries}/${movieId}?api_key=1d42d448b0d527e767f463355d242d88`)\n    }\n\n    fetchMovieCast(movieorseries: string, movieId: number) {\n        return this.http.get(`https://api.themoviedb.org/3/${movieorseries}/${movieId}/credits?api_key=1d42d448b0d527e767f463355d242d88`)\n    }\n    fetchMovieGenre(movieSeries: string) {\n        return this.http.get(\n            `https://api.themoviedb.org/3/genre/${movieSeries}/list?api_key=1d42d448b0d527e767f463355d242d88&language=en-US`\n        )\n    }\n    fetchMovieGenreDetails(movieSeries: string, pageNo: number, genreId: string) {\n        return this.http.get(\n            `https://api.themoviedb.org/3/discover/${movieSeries}?api_key=1d42d448b0d527e767f463355d242d88&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${pageNo}&with_genres=${genreId}`\n        )\n    }\n}\n",
            "properties": [
                {
                    "name": "identifier",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IMovieSeries",
            "id": "interface-IMovieSeries-96eb449daf8d3b4b9b787562c1a52037f0321b52ca6025010df78c28b0fedea623b2966dfca07d570f768b4c020af39781b0c845116e652b8700774c4fa56fe8",
            "file": "src/app/modules/movie-genre-details-page/movie-genre-details-page.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, OnInit } from '@angular/core'\nimport { ActivatedRoute, Params, Router } from '@angular/router'\nimport { UserAuthService } from 'src/app/services/user-auth.service'\nimport { environment } from 'src/environments/environment'\n\ninterface IMovieSeries {\n    adult: boolean\n    backdrop_path: string\n    genre_ids: []\n    id: number\n    media_type: string\n    original_language: string\n    original_title: string\n    original_name: string\n    overview: string\n    popularity: number\n    poster_path: string\n    release_date: string\n    first_air_date: string\n    title: string\n    video: boolean\n    vote_average: number\n    vote_count: number\n}\n@Component({\n    selector: 'app-movie-genre-details-page',\n    templateUrl: './movie-genre-details-page.component.html',\n    styleUrls: ['./movie-genre-details-page.component.scss'],\n})\nexport class MovieGenreDetailsPageComponent implements OnInit {\n    imageBaseUrl: string = environment.imageBaseUrl\n    movieGenreDetails: IMovieSeries[] = []\n    currentPage: number = 1\n    currentMovieorSeriesUrl: string = ''\n    constructor(public userAuth: UserAuthService, private router: Router, private activatedRoute: ActivatedRoute) {}\n\n    ngOnInit(): void {\n        this.activatedRoute.params.subscribe((params) => {\n            this.currentMovieorSeriesUrl = this.router.url\n            if (this.router.url.includes('movies')) {\n                this.userAuth.fetchMovieGenreDetails('movie', this.currentPage, params['id']).subscribe((res: any) => {\n                    console.log(res)\n                    this.movieGenreDetails = res.results\n                })\n            } else if (this.router.url.includes('series')) {\n                this.userAuth.fetchMovieGenreDetails('tv', this.currentPage, params['id']).subscribe((res: any) => {\n                    console.log(res)\n                    this.movieGenreDetails = res.results\n                })\n            }\n        })\n    }\n    onScroll() {\n        this.currentPage++\n        this.activatedRoute.params.subscribe((params: Params) => {\n            this.userAuth.fetchMovieGenreDetails('movie', this.currentPage, params['id']).subscribe((res: any) => {\n                this.movieGenreDetails = [...this.movieGenreDetails, ...res.results]\n            })\n        })\n    }\n}\n",
            "properties": [
                {
                    "name": "adult",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "backdrop_path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "first_air_date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "genre_ids",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "media_type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "original_language",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "original_name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "original_title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "overview",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "popularity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "poster_path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "release_date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "video",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "vote_average",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "vote_count",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IMovieSeries",
            "id": "interface-IMovieSeries-e572ec0f16289b0a2bb198e080c3025911b482daa2e5a827c7295c94270b1196dca7e1de49bac872649d8c4fabff68e08131021afe0a61da16e3ec18027d79a7-1",
            "file": "src/app/modules/search-result-page/search-result-page.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, OnInit } from '@angular/core'\nimport { ActivatedRoute, Params, Router } from '@angular/router'\nimport { UserAuthService } from 'src/app/services/user-auth.service'\nimport { environment } from 'src/environments/environment'\n\nexport interface IMovieSeries {\n    adult: boolean\n    backdrop_path: string\n    genre_ids: []\n    id: number\n    media_type: string\n    original_language: string\n    original_title: string\n    original_name: string\n    overview: string\n    popularity: number\n    poster_path: string\n    release_date: string\n    first_air_date: string\n    title: string\n    video: boolean\n    vote_average: number\n    vote_count: number\n}\n\n@Component({\n    selector: 'app-search-result-page',\n    templateUrl: './search-result-page.component.html',\n    styleUrls: ['./search-result-page.component.scss'],\n})\nexport class SearchResultPageComponent implements OnInit {\n    imageBaseUrl: string = environment.imageBaseUrl\n    allMovies: IMovieSeries[] = []\n    currentPage = 1\n    currentMovieSeries: string = ''\n    totalItems: number | null = null\n    constructor(public userAuth: UserAuthService, private router: Router, private activatedRoute: ActivatedRoute) {}\n    ngOnInit(): void {\n        this.activatedRoute.params.subscribe((params) => {\n            this.userAuth.fetchMoviesSeries(params['query'], this.currentPage).subscribe((res: any) => {\n                this.currentMovieSeries = params['query']\n                this.totalItems = res.total_results\n                this.allMovies = res.results\n                if (this.allMovies.length === 0) {\n                    this.router.navigate(['/no-result', params['query']])\n                }\n            })\n        })\n    }\n    onScroll() {\n        this.currentPage++\n        this.activatedRoute.params.subscribe((params: Params) => {\n            this.userAuth.fetchMoviesSeries(params['query'], this.currentPage).subscribe((res: any) => {\n                this.allMovies = [...this.allMovies, ...res.results]\n            })\n        })\n    }\n}\n",
            "properties": [
                {
                    "name": "adult",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "backdrop_path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "first_air_date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "genre_ids",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "media_type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "original_language",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "original_name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "original_title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "overview",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "popularity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "poster_path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "release_date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "video",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "vote_average",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "vote_count",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "IMovieSeries-1"
        },
        {
            "name": "IRegister",
            "id": "interface-IRegister-b4b9cd472617214a73771bee81b0f38d0c0c52c0c8bca48d969d9daf24b494a16d3a41c70fdc5d5ae5e938dd36269fbc7717f7b63434396cdc0b0345497d6300",
            "file": "src/app/services/user-auth.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from '@angular/core'\nimport { HttpClient } from '@angular/common/http'\nimport { environment } from 'src/environments/environment'\nimport { Router } from '@angular/router'\nimport { tap } from 'rxjs/operators'\nimport { Observable } from 'rxjs'\n\ninterface ILogin {\n    identifier: string\n    password: string\n}\n\ninterface IRegister {\n    username: string\n    email: string\n    password: string\n}\n\n@Injectable()\nexport class UserAuthService {\n    public apiUrl = environment.apiUrl\n    constructor(private http: HttpClient, private router: Router) {}\n    loginUser(user: ILogin) {\n        return this.http.post(this.apiUrl, user)\n    }\n    registerUser(user: IRegister): Observable<any> {\n        return this.http.post(`${this.apiUrl}/register`, user).pipe(\n            tap((response: any) => {\n                localStorage.setItem('token', response.jwt)\n            })\n        )\n    }\n    fetchMoviesSeries(seachVal: string, pageNo: number) {\n        const token = localStorage.getItem('token')\n        const headers = { Authorization: `Bearer ${token}` }\n\n        return this.http.get(\n            `https://api.themoviedb.org/3/search/multi?query=${seachVal}&api_key=1d42d448b0d527e767f463355d242d88&language=en-US&page=${pageNo}&include_adult=false`,\n            { headers }\n        )\n    }\n\n    /**\n     * Removes the token from localStorage and navigates the user to the login page.\n     * After clearing the token, it waits for 2 seconds before navigating to the login page.\n     * This method is called when the user logs out.\n     */\n    logOutUser() {\n        localStorage.clear()\n        setTimeout(() => {\n            this.router.navigate(['/login'])\n        }, 1000)\n    }\n\n    fetchTrendingMoviess() {\n        const token = localStorage.getItem('token')\n        const headers = { Authorization: `Bearer ${token}` }\n        return this.http.get('https://api.themoviedb.org/3/trending/movie/week?api_key=1d42d448b0d527e767f463355d242d88', {\n            headers,\n        })\n    }\n\n    fetchPopularMoviess() {\n        const token = localStorage.getItem('token')\n        const headers = { Authorization: `Bearer ${token}` }\n        return this.http.get('https://api.themoviedb.org/3/movie/popular?api_key=1d42d448b0d527e767f463355d242d88&language=en-US&page=1', {\n            headers,\n        })\n    }\n\n    fetchMovieData(movieorseries: string, movieId: number) {\n        return this.http.get(`https://api.themoviedb.org/3/${movieorseries}/${movieId}?api_key=1d42d448b0d527e767f463355d242d88`)\n    }\n\n    fetchMovieCast(movieorseries: string, movieId: number) {\n        return this.http.get(`https://api.themoviedb.org/3/${movieorseries}/${movieId}/credits?api_key=1d42d448b0d527e767f463355d242d88`)\n    }\n    fetchMovieGenre(movieSeries: string) {\n        return this.http.get(\n            `https://api.themoviedb.org/3/genre/${movieSeries}/list?api_key=1d42d448b0d527e767f463355d242d88&language=en-US`\n        )\n    }\n    fetchMovieGenreDetails(movieSeries: string, pageNo: number, genreId: string) {\n        return this.http.get(\n            `https://api.themoviedb.org/3/discover/${movieSeries}?api_key=1d42d448b0d527e767f463355d242d88&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${pageNo}&with_genres=${genreId}`\n        )\n    }\n}\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "BookmarkService",
            "id": "injectable-BookmarkService-f4633e79f03411af24084f11aab7bebd5696060d81cb1fe1134cbf5a22ee0fd9cc1b57412e983547c6fbcfd4def5356e0d6f32a8802cb9d895535dee92a17eda",
            "file": "src/app/services/bookmark.service.ts",
            "properties": [
                {
                    "name": "bookmarkedItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "addItem",
                    "args": [
                        {
                            "name": "movieData",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "movieData",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getItems",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "removeItem",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core'\n\n@Injectable()\nexport class BookmarkService {\n    public bookmarkedItems: any[] = []\n\n    constructor() {\n        const savedItems = localStorage.getItem('bookmarkedItems')\n        if (savedItems) {\n            this.bookmarkedItems = JSON.parse(savedItems)\n        }\n    }\n\n    addItem(movieData: { title: string; label: string; image: string; id: string; year: string }) {\n        \n        const existingItem = this.bookmarkedItems.find((item: any) => item.id === movieData.id)\n        if (existingItem) {\n            console.log('Item with same id already exists in local storage')\n            return\n        }\n        const newBookmark = movieData\n        this.bookmarkedItems.push(newBookmark)\n        localStorage.setItem('bookmarkedItems', JSON.stringify(this.bookmarkedItems))\n    }\n\n    removeItem(id: string) {\n        this.bookmarkedItems = this.bookmarkedItems.filter((item: any) => item.id !== id)\n        localStorage.setItem('bookmarkedItems', JSON.stringify(this.bookmarkedItems))\n        console.log('local storage with removed item')\n    }\n\n    getItems() {\n        return JSON.stringify(this.bookmarkedItems)\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 5
            },
            "type": "injectable"
        },
        {
            "name": "UserAuthService",
            "id": "injectable-UserAuthService-b4b9cd472617214a73771bee81b0f38d0c0c52c0c8bca48d969d9daf24b494a16d3a41c70fdc5d5ae5e938dd36269fbc7717f7b63434396cdc0b0345497d6300",
            "file": "src/app/services/user-auth.service.ts",
            "properties": [
                {
                    "name": "apiUrl",
                    "defaultValue": "environment.apiUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "fetchMovieCast",
                    "args": [
                        {
                            "name": "movieorseries",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "movieId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "movieorseries",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "movieId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "fetchMovieData",
                    "args": [
                        {
                            "name": "movieorseries",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "movieId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "movieorseries",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "movieId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "fetchMovieGenre",
                    "args": [
                        {
                            "name": "movieSeries",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "movieSeries",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "fetchMovieGenreDetails",
                    "args": [
                        {
                            "name": "movieSeries",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "pageNo",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "genreId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "movieSeries",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "pageNo",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "genreId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "fetchMoviesSeries",
                    "args": [
                        {
                            "name": "seachVal",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "pageNo",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "seachVal",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "pageNo",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "fetchPopularMoviess",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "fetchTrendingMoviess",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "loginUser",
                    "args": [
                        {
                            "name": "user",
                            "type": "ILogin",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "ILogin",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "logOutUser",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRemoves the token from localStorage and navigates the user to the login page.\nAfter clearing the token, it waits for 2 seconds before navigating to the login page.\nThis method is called when the user logs out.\n",
                    "description": "<p>Removes the token from localStorage and navigates the user to the login page.\nAfter clearing the token, it waits for 2 seconds before navigating to the login page.\nThis method is called when the user logs out.</p>\n"
                },
                {
                    "name": "registerUser",
                    "args": [
                        {
                            "name": "user",
                            "type": "IRegister",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "IRegister",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core'\nimport { HttpClient } from '@angular/common/http'\nimport { environment } from 'src/environments/environment'\nimport { Router } from '@angular/router'\nimport { tap } from 'rxjs/operators'\nimport { Observable } from 'rxjs'\n\ninterface ILogin {\n    identifier: string\n    password: string\n}\n\ninterface IRegister {\n    username: string\n    email: string\n    password: string\n}\n\n@Injectable()\nexport class UserAuthService {\n    public apiUrl = environment.apiUrl\n    constructor(private http: HttpClient, private router: Router) {}\n    loginUser(user: ILogin) {\n        return this.http.post(this.apiUrl, user)\n    }\n    registerUser(user: IRegister): Observable<any> {\n        return this.http.post(`${this.apiUrl}/register`, user).pipe(\n            tap((response: any) => {\n                localStorage.setItem('token', response.jwt)\n            })\n        )\n    }\n    fetchMoviesSeries(seachVal: string, pageNo: number) {\n        const token = localStorage.getItem('token')\n        const headers = { Authorization: `Bearer ${token}` }\n\n        return this.http.get(\n            `https://api.themoviedb.org/3/search/multi?query=${seachVal}&api_key=1d42d448b0d527e767f463355d242d88&language=en-US&page=${pageNo}&include_adult=false`,\n            { headers }\n        )\n    }\n\n    /**\n     * Removes the token from localStorage and navigates the user to the login page.\n     * After clearing the token, it waits for 2 seconds before navigating to the login page.\n     * This method is called when the user logs out.\n     */\n    logOutUser() {\n        localStorage.clear()\n        setTimeout(() => {\n            this.router.navigate(['/login'])\n        }, 1000)\n    }\n\n    fetchTrendingMoviess() {\n        const token = localStorage.getItem('token')\n        const headers = { Authorization: `Bearer ${token}` }\n        return this.http.get('https://api.themoviedb.org/3/trending/movie/week?api_key=1d42d448b0d527e767f463355d242d88', {\n            headers,\n        })\n    }\n\n    fetchPopularMoviess() {\n        const token = localStorage.getItem('token')\n        const headers = { Authorization: `Bearer ${token}` }\n        return this.http.get('https://api.themoviedb.org/3/movie/popular?api_key=1d42d448b0d527e767f463355d242d88&language=en-US&page=1', {\n            headers,\n        })\n    }\n\n    fetchMovieData(movieorseries: string, movieId: number) {\n        return this.http.get(`https://api.themoviedb.org/3/${movieorseries}/${movieId}?api_key=1d42d448b0d527e767f463355d242d88`)\n    }\n\n    fetchMovieCast(movieorseries: string, movieId: number) {\n        return this.http.get(`https://api.themoviedb.org/3/${movieorseries}/${movieId}/credits?api_key=1d42d448b0d527e767f463355d242d88`)\n    }\n    fetchMovieGenre(movieSeries: string) {\n        return this.http.get(\n            `https://api.themoviedb.org/3/genre/${movieSeries}/list?api_key=1d42d448b0d527e767f463355d242d88&language=en-US`\n        )\n    }\n    fetchMovieGenreDetails(movieSeries: string, pageNo: number, genreId: string) {\n        return this.http.get(\n            `https://api.themoviedb.org/3/discover/${movieSeries}?api_key=1d42d448b0d527e767f463355d242d88&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${pageNo}&with_genres=${genreId}`\n        )\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [
        {
            "name": "AuthGuardService",
            "id": "injectable-AuthGuardService-4a6594cc4b444347abfeafa9ba4a1cba7a951e5b67d9a50a02af482d48c6509ce05d3ce6c04b433018b16908a238635649f0657c2baeb97d96fc2ba78445c6e1",
            "file": "src/app/services/auth-guard.service.ts",
            "properties": [
                {
                    "name": "jwtHelper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "JwtHelperService",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "router",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Router",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isAuthenticated",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core'\nimport { CanActivate, Router } from '@angular/router'\nimport { JwtHelperService } from '@auth0/angular-jwt'\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n    constructor(public router: Router, public jwtHelper: JwtHelperService) {}\n\n    public isAuthenticated(): boolean {\n        const token = localStorage.getItem('token')\n        return !this.jwtHelper.isTokenExpired(token)\n    }\n\n    canActivate(): boolean {\n        if (!this.isAuthenticated()) {\n            this.router.navigate(['/login'])\n            return false\n        }\n        return true\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "jwtHelper",
                        "type": "JwtHelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "jwtHelper",
                        "type": "JwtHelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        },
        {
            "name": "LoginRegisterAuthService",
            "id": "injectable-LoginRegisterAuthService-975d7b6f9f093d99b6230f0f0fba9b1dc4e0263ff8405b3bdff06e561b5a822db7b4b9da02fc9ce474a763d5fd8a6a6311f9ec15c00dd8a8482c3e9c84dfee93",
            "file": "src/app/services/login-register-auth.service.ts",
            "properties": [
                {
                    "name": "jwtHelper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "JwtHelperService",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "router",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Router",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isAuthenticated",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core'\nimport { CanActivate, Router } from '@angular/router'\nimport { JwtHelperService } from '@auth0/angular-jwt'\n\n@Injectable()\nexport class LoginRegisterAuthService implements CanActivate {\n    constructor(public router: Router, public jwtHelper: JwtHelperService) {}\n\n    public isAuthenticated(): boolean {\n        const token = localStorage.getItem('token')\n        return !this.jwtHelper.isTokenExpired(token)\n    }\n\n    canActivate(): boolean {\n        if (this.isAuthenticated()) {\n            this.router.navigate(['/home'])\n            return false\n        }\n        return true\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "jwtHelper",
                        "type": "JwtHelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "jwtHelper",
                        "type": "JwtHelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        }
    ],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-4fad7360031bf5557a39eaa131ae9811a1387950e4d61e0bcb48dcfe7dbeea42e32e6a8fc8d55b558dc2dccdbbfe1214b62937d9282a90dbfde489fd50db10eb",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'ott-app'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\nimport { FormControl, Validators } from '@angular/forms'\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n    title = 'ott-app'\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/styles/index\";\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<router-outlet></router-outlet>\n"
        },
        {
            "name": "BannerComponent",
            "id": "component-BannerComponent-f904ecd7b96b9190704f3c71b624f736060dd536720f8000f5af64c07a4ab203060d0ef24b66a1e82ccc63805bc506567e431c659fc8f2f08302297d5c1dccc6",
            "file": "src/app/components/banner/banner.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-banner",
            "styleUrls": [
                "./banner.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./banner.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "background",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "movieRoute",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string | null",
                    "decorators": []
                },
                {
                    "name": "overview",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "voteAverage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "year",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core'\n\n@Component({\n    selector: 'app-banner',\n    templateUrl: './banner.component.html',\n    styleUrls: ['./banner.component.scss'],\n})\nexport class BannerComponent {\n    @Input() background: string = ''\n    @Input() year: string = ''\n    @Input() overview: string = ''\n    @Input() title: string = ''\n    @Input() voteAverage: string = ''\n    @Input() movieRoute: string | null = null\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\n\n.background-body {\n    height: 400px;\n    background-repeat: no-repeat;\n    margin-top: $spacing-xl;\n    background-size: cover;\n    background-position: center;\n}\n.banner-info {\n    color: $white;\n    width: 60%;\n    height: 100%;\n    padding: $spacing-xsm 0 $spacing-xsm $spacing-lgs;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n.banner-title {\n    margin-bottom: $spacing-xxxs;\n}\n.second-line-detail {\n    display: flex;\n    align-items: center;\n    gap: $spacing-xxxs;\n    margin-bottom: $spacing-xxxs;\n}\n@media (max-width: 768px) {\n    .banner-title {\n        font-size: $font-size-normal;\n    }\n    .banner-info {\n        width: 100%;\n        padding: $spacing-xsm $spacing-lgs;\n    }\n    .banner-detail{\n        font-size: $font-size-xms;\n    }\n}\n",
                    "styleUrl": "./banner.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div\n    class=\"background-body\"\n    [routerLink]=\"movieRoute\"\n    [style.backgroundImage]=\"\n        'linear-gradient(to right, rgba(128, 128, 128, 1) 0%, rgba(128, 128, 128, 0.7) 50%, rgba(128, 128, 128, 0) 100%),url(' +\n        background +\n        ')'\n    \"\n>\n    <div class=\"banner-info\">\n        <h2 class=\"banner-title\">\n            {{ title }}\n        </h2>\n        <div class=\"second-line-detail\">\n            <p>Vote: {{ voteAverage }}</p>\n            <p>.</p>\n            <p class=\"detail-year\">{{ year }}</p>\n        </div>\n        <p class=\"banner-detail\">\n            {{ overview }}\n        </p>\n    </div>\n</div>\n"
        },
        {
            "name": "BookmarkIconComponent",
            "id": "component-BookmarkIconComponent-a40333feafa015d48fa32fd06b0cfd749a6e417cefb2540a0052a019aa06d59418d6eda0366121fb67620d60c3bd86771e46df87b38514e46ef675fb6ca78f8a",
            "file": "src/app/components/bookmark-icon/bookmark-icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-bookmark-icon",
            "styleUrls": [
                "./bookmark-icon.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./bookmark-icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "image",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "year",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "bookmarkService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BookmarkService",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isBookmark",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "toggleBookmark",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core'\nimport { BookmarkService } from 'src/app/services/bookmark.service'\n\n@Component({\n    selector: 'app-bookmark-icon',\n    templateUrl: './bookmark-icon.component.html',\n    styleUrls: ['./bookmark-icon.component.scss'],\n})\nexport class BookmarkIconComponent {\n    isBookmark = false\n    @Input() title: string = ''\n    @Input() image: string = ''\n    @Input() year: string = ''\n    @Input() label: string = ''\n    private _id: string = ''\n\n    constructor(public bookmarkService: BookmarkService) {}\n\n    get id(): string {\n        return this._id\n    }\n    @Input() set id(value: string) {\n        this._id = value\n        const bookmarkedItems = JSON.parse(this.bookmarkService.getItems() ?? '[]')\n        const isBookmarked = bookmarkedItems.some((item: any) => item.id === this._id)\n        this.isBookmark = isBookmarked\n    }\n\n    toggleBookmark(event: Event) {\n        event.stopPropagation()\n        if (this.isBookmark === false) {\n            const newMovieBookmark = {\n                title: this.title,\n                label: this.label,\n                image: this.image,\n                id: this.id,\n                year: this.year,\n            }\n            this.bookmarkService.addItem(newMovieBookmark)\n            this.isBookmark = true\n        } else if (this.isBookmark) {\n            this.bookmarkService.removeItem(this.id)\n            this.isBookmark = false\n        }\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\n\n.bookmark-icon {\n    position: absolute;\n    top: $spacing-xxxs;\n    right: $spacing-sml;\n    z-index: 2;\n    width: 15px !important;\n}\n\n.btn-container {\n    background: #111111;\n    opacity: 0.4;\n    width: $spacing-lgs;\n    height: $spacing-lgs;\n    border-radius: 50%;\n    position: absolute;\n    top: 4%;\n    right: 6%;\n    z-index: 0;\n    border: none;\n}\n",
                    "styleUrl": "./bookmark-icon.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "bookmarkService",
                        "type": "BookmarkService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "bookmarkService",
                        "type": "BookmarkService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "id": {
                    "name": "id",
                    "setSignature": {
                        "name": "id",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 22,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "id",
                        "type": "string",
                        "returnType": "string",
                        "line": 19
                    }
                }
            },
            "templateData": "<button class=\"btn-container\" (click)=\"toggleBookmark($event)\">\n    <img [src]=\"isBookmark ? 'assets/bookmarked.png' : 'assets/notBookmarked.png'\" class=\"bookmark-icon\" alt=\"bookmark\" />\n</button>\n"
        },
        {
            "name": "BookmarkPageComponent",
            "id": "component-BookmarkPageComponent-8026596769dfa05765d8226a02c7ce7636524ca8aee5d9d94db7b3917309dab11d0fe27951c6553d5d750e42d40360092e73282fc24dd2c7a535942235fb3368",
            "file": "src/app/modules/bookmark-page/bookmark-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-bookmark-page",
            "styleUrls": [
                "./bookmark-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./bookmark-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "bookmarkService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BookmarkService",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "imageBaseUrl",
                    "defaultValue": "environment.imageBaseUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\nimport { BookmarkService } from 'src/app/services/bookmark.service'\nimport { environment } from 'src/environments/environment'\n\n@Component({\n    selector: 'app-bookmark-page',\n    templateUrl: './bookmark-page.component.html',\n    styleUrls: ['./bookmark-page.component.scss'],\n})\nexport class BookmarkPageComponent {\n    imageBaseUrl: string = environment.imageBaseUrl\n    constructor(public bookmarkService: BookmarkService) {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\n\n.bookmark-title {\n    color: $white;\n    font-size: $font-size-xxl;\n    line-height: 1.5;\n    margin-bottom: $spacing-normal;\n    margin-top: $spacing-lg;\n}\n\n.movie {\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n    grid-gap: $spacing-md;\n    background-color: $theme-color-base;\n}\n@media (max-width: 990px) {\n    .movie {\n        grid-template-columns: repeat(3, 1fr);\n    }\n}\n@media (max-width: 768px) {\n    .movie {\n        grid-template-columns: repeat(2, 1fr);\n    }\n    .search-results {\n        padding: 0 $spacing-xsm;\n    }\n    .bookmark-title {\n        font-size: $font-size-md;\n    }\n}\n\n@media (max-width: 420px) {\n    .movie {\n        grid-template-columns: repeat(1, 1fr);\n    }\n}\n",
                    "styleUrl": "./bookmark-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "bookmarkService",
                        "type": "BookmarkService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "bookmarkService",
                        "type": "BookmarkService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"bookmark-title\">{{bookmarkService.bookmarkedItems.length === 0 ? 'No Bookmarked Items' : 'Bookmarked Movies' }}</div>\n<div class=\"movie\">\n    <div *ngFor=\"let movie of bookmarkService.bookmarkedItems\">\n        <app-movie-series-card\n            routerLink=\"{{movie.label==='Movie'?'movies':'tv'}}/details/{{ movie.id }}\"\n            label=\"{{ movie.label }}\"\n            title=\"{{ movie.title }}\"\n            year=\"{{ movie.year }}\"\n            [image]='imageBaseUrl + movie.image'\n            icon=\"{{ movie.label === 'Movie' ? 'assets/movie-icon.png' : 'assets/series-icon.png' }}\"\n            id=\"{{ movie.id }}\"\n        ></app-movie-series-card>\n    </div>\n</div>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-4ef205c97a334c309aa4001c8ab4a6d9571dcae18d0e85aaf0d367467ab5d3a9f13ab3573726f1fcb409bc9b49894dadfb80b1bbe1b6ba7041455ad9d4922004",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 711,
                            "end": 724,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 712,
                                "end": 720,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-f312855677e26469623ac515200684a99a328308c4d1782ac3f16140b2a3c7aec162e1bc9d89fef16108a51222bc8e9cd033a4412b306d3388b1c3b0a0927e71-1",
            "file": "src/app/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'small'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "\"large\" | \"small\"",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "\"primary\" | \"secondary\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input} from '@angular/core'\n\n@Component({\n    selector: 'app-button',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.component.scss'],\n})\nexport class ButtonComponent {\n    @Input() label = ''\n    @Input() disabled = false\n    @Input() type: 'primary' | 'secondary' = 'primary'\n    @Input() size: 'large' | 'small' = 'small'\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\n\nbutton {\n    border-radius: $border-radius-sm;\n    color: $white;\n    font-size: $font-size-sm;\n    line-height: 1.5;\n    border: none;\n    width: 174px;\n    padding: $spacing-xs 0;\n    color: $white;\n\n    &.large {\n        padding: $spacing-sm;\n        background-color: $light-grey;\n        width: auto;\n        font-size: $font-size-xs;\n    }\n\n    &.primary {\n        background-color: $dark-red;\n        &[disabled] {\n            background-color: $light-grey;\n        }\n        &:not([disabled]) {\n            cursor: pointer;\n        }\n    }\n    &.secondary {\n        color: $dark-blue-tint;\n        background-color: $silver;\n        cursor: pointer;\n        &[disabled] {\n            opacity: 0.5;\n        }\n    }\n}\n@media (max-width: 768px) {\n    button {\n        font-size: $font-size-xs;\n        width: 124px;\n    }\n}\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ButtonComponent-1",
            "templateData": "<button\n    [ngClass]=\"{\n        large: size === 'large',\n        primary: type === 'primary',\n        secondary: type === 'secondary'\n    }\"\n    [disabled]=\"disabled\"\n    type=\"submit\"\n>\n    {{ label }}\n</button>\n"
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-e543a04f09b281c4926c543476e1438a8eeb32a546569b9ac240cae46a6ff60857952a8a899eda9e672b00e24fd667c580361f276b8243105d6a8d5e41d96444",
            "file": "src/app/components/card/card.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card",
            "styleUrls": [
                "./card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "type",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "\"primary\" | \"secondary\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core'\n\n@Component({\n    selector: 'app-card',\n    templateUrl: './card.component.html',\n    styleUrls: ['./card.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class CardComponent {\n    @Input() type: 'primary' | 'secondary' = 'primary'\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\n\n.card-container {\n    border-radius: $border-radius-md;\n    padding: $spacing-xxl $spacing-lg;\n    width: 100%;\n    color: $white;\n    height: 100%;\n\n    &.primary {\n        background-color: $dark-blue-tint;\n    }\n\n    &.secondary {\n        background-color: $black;\n    }\n}\n@media (max-width: 768px) {\n    .card-container {\n        padding: $spacing-md;\n        border-radius: $border-radius-sm;\n    }\n}\n",
                    "styleUrl": "./card.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div\n    [ngClass]=\"{\n        primary: type === 'primary',\n        secondary: type === 'secondary'\n    }\"\n    class=\"card-container\"\n>\n    <ng-content></ng-content>\n</div>\n"
        },
        {
            "name": "CastMemberComponent",
            "id": "component-CastMemberComponent-08f4b01a18defac70fa70ff3faeed78744b77faec9fe0b6ee98f97b79b8caeac79383ad97ef42af135621682d40e9e415e5c24cadb05a5f4f7ab72187b3c9c85",
            "file": "src/app/components/cast-member/cast-member.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-cast-member",
            "styleUrls": [
                "./cast-member.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./cast-member.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-cast-member',\n    templateUrl: './cast-member.component.html',\n    styleUrls: ['./cast-member.component.scss'],\n})\nexport class CastMemberComponent {\n    @Input() name!: string\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\n\n.cast-member {\n    display: inline-block;\n    border: 1px solid $white;\n    border-radius: $border-radius-sm;\n    margin-right: $spacing-xs;\n    margin-bottom: $spacing-xs;\n    padding: $spacing-xxs $spacing-sml;\n    font-size: $font-size-xs;\n    line-height: 1.5;\n    color: $white;\n}\n\n@media (max-width: 768px) {\n    .cast-member {\n        font-size: $font-size-xms;\n    }\n}\n",
                    "styleUrl": "./cast-member.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"cast-member\">\n    {{ name }}\n</div>\n\n"
        },
        {
            "name": "DashboardComponent",
            "id": "component-DashboardComponent-23b5c6d16ef1a9bb3751cfcb847aa3bd785c869bf019f19a8ada23efd42a03c9ad7b11c417f62867892a9a82fbaf26859cee7cf00a47ac42611eab6c9d6b12bb",
            "file": "src/app/modules/dashboard/dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dashboard",
            "styleUrls": [
                "./dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dashboard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "allPopularMovies",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 71
                },
                {
                    "name": "allTrendingMovies",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 70
                },
                {
                    "name": "customOptions",
                    "defaultValue": "{\n        loop: false,\n        mouseDrag: false,\n        touchDrag: false,\n        pullDrag: false,\n        dots: false,\n        navSpeed: 600,\n        navText: ['<img src=\"/assets/prev-button.svg\">', '<img src=\"/assets/next-button.svg\">'],\n        responsive: {\n            0: {\n                items: 1,\n            },\n            200: {\n                items: 2,\n            },\n            300: {\n                items: 2,\n            },\n            760: {\n                items: 3,\n            },\n            1000: {\n                items: 3,\n            },\n        },\n        nav: true,\n    }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OwlOptions",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "customOptions1",
                    "defaultValue": "{\n        loop: false,\n        mouseDrag: false,\n        touchDrag: false,\n        pullDrag: false,\n        dots: false,\n        navSpeed: 600,\n        navText: ['<img src=\"/assets/prev-button.svg\">', '<img src=\"/assets/next-button.svg\">'],\n        responsive: {\n            0: {\n                items: 1,\n            },\n            200: {\n                items: 1,\n            },\n            300: {\n                items: 1,\n            },\n            760: {\n                items: 1,\n            },\n            1000: {\n                items: 1,\n            },\n        },\n        nav: true,\n        autoplay: true,\n        lazyLoad: true,\n    }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OwlOptions",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "imageBaseUrl",
                    "defaultValue": "environment.imageBaseUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "fetchPopularMovies",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "fetchTrendingMovies",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core'\nimport { UserAuthService } from 'src/app/services/user-auth.service'\nimport { OwlOptions } from 'ngx-owl-carousel-o'\nimport { environment } from 'src/environments/environment'\n\n@Component({\n    selector: 'app-dashboard',\n    templateUrl: './dashboard.component.html',\n    styleUrls: ['./dashboard.component.scss'],\n})\nexport class DashboardComponent implements OnInit {\n    imageBaseUrl: string = environment.imageBaseUrl\n    customOptions: OwlOptions = {\n        loop: false,\n        mouseDrag: false,\n        touchDrag: false,\n        pullDrag: false,\n        dots: false,\n        navSpeed: 600,\n        navText: ['<img src=\"/assets/prev-button.svg\">', '<img src=\"/assets/next-button.svg\">'],\n        responsive: {\n            0: {\n                items: 1,\n            },\n            200: {\n                items: 2,\n            },\n            300: {\n                items: 2,\n            },\n            760: {\n                items: 3,\n            },\n            1000: {\n                items: 3,\n            },\n        },\n        nav: true,\n    }\n    customOptions1: OwlOptions = {\n        loop: false,\n        mouseDrag: false,\n        touchDrag: false,\n        pullDrag: false,\n        dots: false,\n        navSpeed: 600,\n        navText: ['<img src=\"/assets/prev-button.svg\">', '<img src=\"/assets/next-button.svg\">'],\n        responsive: {\n            0: {\n                items: 1,\n            },\n            200: {\n                items: 1,\n            },\n            300: {\n                items: 1,\n            },\n            760: {\n                items: 1,\n            },\n            1000: {\n                items: 1,\n            },\n        },\n        nav: true,\n        autoplay: true,\n        lazyLoad: true,\n    }\n\n    allTrendingMovies: any = []\n    allPopularMovies: any = []\n\n    constructor(private userAuth: UserAuthService) {}\n\n    ngOnInit(): void {\n        this.fetchTrendingMovies()\n        this.fetchPopularMovies()\n    }\n\n    public fetchTrendingMovies() {\n        this.userAuth.fetchTrendingMoviess().subscribe((res: any) => {\n            console.log(res)\n            this.allTrendingMovies = res.results\n        })\n    }\n\n    public fetchPopularMovies() {\n        this.userAuth.fetchPopularMoviess().subscribe((res: any) => {\n            console.log(res)\n            this.allPopularMovies = res.results\n        })\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\n\n.movie-type-title {\n    display: flex;\n    align-items: center;\n    margin-top: $spacing-lg;\n    flex-wrap: wrap;\n}\n\n.movie-type-label {\n    font-weight: 400;\n    font-size: $font-size-xxl;\n    line-height: 1.5;\n    color: $white;\n}\n\n.movie-type-trending {\n    margin-right: $spacing-md;\n}\n\n.movie {\n    font-size: $font-size-xs;\n    line-height: 1.5;\n    letter-spacing: 0.07rem;\n    color: $white;\n    padding: $spcaing-xsl $spacing-sm;\n    border: 2px solid $white-tint;\n    border-radius: $spacing-xs;\n    display: inline-block;\n    margin-left: $spacing-sm;\n}\n\n.movie-type-popular {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-gap: $spacing-md;\n}\n\n.movies {\n    background-color: $theme-color-base;\n}\n\n@media (max-width: 768px) {\n    .movie-type-popular {\n        grid-template-columns: repeat(2, 1fr);\n    }\n}\n",
                    "styleUrl": "./dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "userAuth",
                        "type": "UserAuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 71,
                "jsdoctags": [
                    {
                        "name": "userAuth",
                        "type": "UserAuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div *ngIf=\"allTrendingMovies?.length > 0\" class=\"banner-container\">\n    <owl-carousel-o [options]=\"customOptions1\">\n        <ng-container *ngFor=\"let movie of allTrendingMovies\">\n            <ng-template carouselSlide>\n                <div class=\"slide\">\n                    <div>\n                        <app-banner\n                            routerLink=\"movies/details/{{ movie.id }}\"\n                            title=\"{{ movie.title || movie.name }}\"\n                            year=\"{{\n                                movie.media_type === 'movie' ? (movie.release_date | date: 'yyyy') : (movie.first_air_date | date: 'yyyy')\n                            }}\"\n                            [background]=\"imageBaseUrl + movie.poster_path\"\n                            overview=\"{{ movie.overview }}\"\n                            voteAverage=\"{{ movie.vote_average }}\"\n                        ></app-banner>\n                    </div>\n                </div>\n            </ng-template>\n        </ng-container>\n    </owl-carousel-o>\n</div>\n<div class=\"movies\">\n    <div class=\"movie-type-title\">\n        <p class=\"movie-type-label\">Trending</p>\n        <p class=\"movie\">MOVIE</p>\n    </div>\n    <div class=\"movie-type\">\n        <div *ngIf=\"allTrendingMovies?.length > 0\">\n            <owl-carousel-o [options]=\"customOptions\">\n                <ng-template carouselSlide *ngFor=\"let movie of allTrendingMovies\">\n                    <div class=\"movie-type-trending\">\n                        <app-movie-series-card\n                            routerLink=\"movies/details/{{ movie.id }}\"\n                            title=\"{{ movie.title || movie.name }}\"\n                            [image]=\"imageBaseUrl + movie.poster_path\"\n                            icon=\"{{ movie.media_type === 'tv' ? 'assets/series-icon.png' : 'assets/movie-icon.png' }}\"\n                            label=\"{{ movie.media_type === 'tv' ? 'TV series' : 'Movie' }}\"\n                            year=\"{{\n                                movie.media_type === 'movie' ? (movie.release_date | date: 'yyyy') : (movie.first_air_date | date: 'yyyy')\n                            }}\"\n                            id=\"{{ movie.id }}\"\n                        ></app-movie-series-card>\n                    </div>\n                </ng-template>\n            </owl-carousel-o>\n        </div>\n    </div>\n\n    <div class=\"movie-type-title\">\n        <p class=\"movie-type-label\">Popular</p>\n        <p class=\"movie\">MOVIE</p>\n    </div>\n    <div class=\"movie-type-popular\">\n        <div *ngFor=\"let movie of allPopularMovies\">\n            <app-movie-series-card\n                routerLink=\"movies/details/{{ movie.id }}\"\n                title=\"{{ movie.original_title }}\"\n                [image]=\"imageBaseUrl + movie.poster_path\"\n                icon=\"{{ movie.media_type === 'tv' ? 'assets/series-icon.png' : 'assets/movie-icon.png' }}\"\n                label=\"{{ movie.media_type === 'tv' ? 'TV series' : 'Movie' }}\"\n                year=\"{{ movie.release_date | date: 'yyyy' }}\"\n                id=\"{{ movie.id }}\"\n            ></app-movie-series-card>\n        </div>\n    </div>\n</div>\n"
        },
        {
            "name": "DetailPageComponent",
            "id": "component-DetailPageComponent-f23b0b8803dc969d784be414611d8f5e2bfaad58548919de0e2ce9aadce7fac21716a8182ba440a07bde4ec7cee6729db6caec5f49199ed78b34dd7265dc49ea",
            "file": "src/app/modules/detail-page/detail-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-detail-page",
            "styleUrls": [
                "./detail-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./detail-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "movie",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "movieCredits",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "movieId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "router",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Router",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "userAuth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserAuthService",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { HttpClient } from '@angular/common/http'\nimport { Component } from '@angular/core'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { UserAuthService } from 'src/app/services/user-auth.service'\n\n@Component({\n    selector: 'app-detail-page',\n    templateUrl: './detail-page.component.html',\n    styleUrls: ['./detail-page.component.scss'],\n})\nexport class DetailPageComponent {\n    movieId!: number\n    movieCredits: any\n    movie: any\n\n    constructor(private route: ActivatedRoute, private http: HttpClient, public userAuth: UserAuthService, public router: Router) {}\n\n    ngOnInit() {\n        this.route.params.subscribe((params) => {\n            this.movieId = params['id']\n            console.log('activated route is',this.movieId)\n            if (this.router.url.includes('movie'||'movies')) {\n                console.log('call movie api')\n                this.userAuth.fetchMovieData('movie', this.movieId).subscribe((movie) => {\n                    this.movie = movie\n                })\n                this.userAuth.fetchMovieCast('movie', this.movieId).subscribe((credits) => {\n                    this.movieCredits = credits\n                })\n            } else if (this.router.url.includes('tv') || this.router.url.includes('series')) {\n                console.log('call series api')\n                this.userAuth.fetchMovieData('tv', this.movieId).subscribe((movie) => {\n                    this.movie = movie\n                })\n                this.userAuth.fetchMovieCast('tv', this.movieId).subscribe((credits) => {\n                    this.movieCredits = credits\n                })\n            }\n        })\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\n\n.movie {\n    background-color: $theme-color-base;\n}\n\n.movie-conatiner {\n    display: flex;\n    gap: 5%;\n    margin: 0;\n    padding: 2%;\n}\n\n.movie-img {\n    border-radius: $border-radius-lg;\n    height: 35rem;\n    margin: 0;\n    width: 35%;\n}\n\n.movie-title {\n    font-size: $font-size-xxxl;\n    line-height: 1.5;\n    color: $white;\n}\n\n.movie-rating {\n    font-size: $font-size-xxl;\n    line-height: 1.5;\n    color: $white;\n    margin-right: $spacing-sm;\n}\n\n.movie-detail {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    margin-top: $spacing-xxsm;\n}\n\n.movie-label {\n    font-size: $font-size-normal;\n    line-height: 1.5;\n    color: $white;\n    margin-top: $spacing-md;\n}\n\n.movie-synopsis {\n    font-size: $font-size-sm;\n    line-height: 1.75;\n    color: $white;\n}\n\n.movie-routerlink {\n    display: none;\n}\n\n@media (max-width: 768px) {\n    .movie-conatiner {\n        align-items: center;\n        display: flex;\n        flex-direction: column;\n    }\n\n    .movie-img {\n        width: 100%;\n        margin-top: $spacing-xxxs;\n        margin-bottom: $spacing-normal;\n    }\n\n    .movie-title {\n        font-size: $font-size-md;\n    }\n\n    .movie-rating {\n        font-size: $font-size-sm;\n    }\n\n    .movie-label {\n        font-size: $font-size-sm;\n    }\n\n    .movie-synopsis {\n        font-size: $font-size-xs;\n        line-height: 2;\n    }\n\n    .movie-routerlink {\n        display: block;\n    }\n}\n",
                    "styleUrl": "./detail-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userAuth",
                        "type": "UserAuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userAuth",
                        "type": "UserAuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"movie\">\n    <div *ngIf=\"movie\">\n        <div class=\"movie-conatiner\">\n            <img [src]=\"'https://www.themoviedb.org/t/p/w500' + movie.poster_path\" class=\"movie-img\" />\n            <div>\n                <h1 class=\"movie-title\">{{ movie.original_title || movie.original_name }}</h1>\n                <span class=\"movie-rating\">{{ (movie.vote_average / 2).toFixed(1) }}</span>\n                <app-star-rating rating=\"{{ movie.vote_average / 2 }}\"></app-star-rating>\n                <div class=\"movie-detail\">\n                    <app-movie-detail\n                        label=\"Length\"\n                        movieDetail=\"{{\n                            movie.runtime ||\n                                (movie.episode_run_time && movie.episode_run_time.length > 0 ? movie.episode_run_time[0] + ' mins.' : 'N/A')\n                        }}\"\n                    ></app-movie-detail>\n                    <app-movie-detail label=\"Language\" movieDetail=\"{{ movie.spoken_languages[0].english_name }}\"></app-movie-detail>\n                    <app-movie-detail\n                        label=\"Year\"\n                        movieDetail=\"{{ movie.release_date?.split('-')[0] || movie.first_air_date.split('-')[0] }}\"\n                    ></app-movie-detail>\n                    <app-movie-detail label=\"Status\" movieDetail=\"{{ movie.status }}\"></app-movie-detail>\n                </div>\n                <div>\n                    <h2 class=\"movie-label\">Genres</h2>\n                    <app-genre-card *ngFor=\"let genre of movie.genres\" [genre]=\"genre.name\"></app-genre-card>\n                </div>\n                <h2 class=\"movie-label\">Synopsis</h2>\n                <span class=\"movie-synopsis\">{{ movie.overview }}</span>\n                <div>\n                    <h2 class=\"movie-label\">Casts</h2>\n                    <app-cast-member *ngFor=\"let castMember of movieCredits?.cast\" [name]=\"castMember.name\"></app-cast-member>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n"
        },
        {
            "name": "DropDownMenuComponent",
            "id": "component-DropDownMenuComponent-a3a64e9b5e76455e7fa94653b277d01021c814a8e5bb2589d24bffda389735a2de57a35161a6881ccb083ee93b55cc545db3be10071f4bc4387caad9d97452a5",
            "file": "src/app/components/drop-down-menu/drop-down-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-drop-down-menu",
            "styleUrls": [
                "./drop-down-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./drop-down-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "dropdownData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "IDropDownData[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit } from '@angular/core'\n\nexport interface IDropDownData {\n    name: string\n    onClick: () => void\n}\n\n@Component({\n    selector: 'app-drop-down-menu',\n    templateUrl: './drop-down-menu.component.html',\n    styleUrls: ['./drop-down-menu.component.scss'],\n})\nexport class DropDownMenuComponent {\n    @Input() dropdownData: IDropDownData[] = [];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\n\n.dropdown-menu {\n    display: inline-block;\n    width: 120px;\n    vertical-align: top;\n    position: relative;\n    line-height: 1.5;\n    background-color: $white-tint;\n    padding: $spacing-xs 0px $spacing-xs 0px;\n    border-radius: $border-radius-sm;\n}\n\n.dropdown-menu :hover {\n    background-color: $silver;\n}\n\n.dropdown-menu-container {\n    font-family: 'Poppins';\n    font-size: $font-size-sm;\n    display: flex;\n    justify-content: center;\n    cursor: pointer;\n}\n\n@media (max-width: 768px) {\n    .dropdown-menu {\n        width: $spacing-xxxxl;\n    }\n\n    .dropdown-menu-container {\n        font-size: $spacing-sml;\n    }\n}\n",
                    "styleUrl": "./drop-down-menu.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<span class=\"dropdown-menu\">\n    <span *ngFor=\"let item of dropdownData\" (click)=\"item.onClick()\" class=\"dropdown-menu-container\">\n        {{ item.name }}\n    </span>\n</span>\n\n\n"
        },
        {
            "name": "GenreCardComponent",
            "id": "component-GenreCardComponent-983b962f5d44da9275bd354bbba144547a360d00ac2471634c530e3995ce2c23c5f73369c103538e8a6d6fa3d72e9a676eaeb07ac327fdc3b18bcd37c5a71a0d",
            "file": "src/app/components/genre-card/genre-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-genre-card",
            "styleUrls": [
                "./genre-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./genre-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "genre",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-genre-card',\n    templateUrl: './genre-card.component.html',\n    styleUrls: ['./genre-card.component.scss'],\n})\nexport class GenreCardComponent {\n    @Input() genre!: string\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\n\n.genre {\n    display: inline-block;\n    padding: $spacing-xxs $spacing-sml;\n    background-color: $white;\n    border-radius: $spacing-xs;\n    margin-right: $spacing-xs;\n    font-size: $font-size-sm;\n    line-height: 1.5;\n    color: $black;\n}\n\n@media (max-width: 768px) {\n    .movie-detail {\n        font-size: $font-size-xs;\n    }\n    .genre {\n        margin-bottom: $spacing-xxs;\n    }\n}\n",
                    "styleUrl": "./genre-card.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<span class=\"genre\">{{ genre }}</span>"
        },
        {
            "name": "GenreComponent",
            "id": "component-GenreComponent-05021c8913afb46d2d30684f65a4a24eb0a19c42b88eebf8a2a3ee0959e96bc819d7d8c956db8f33289fdd321ea7fb8ee4476b94c162f59fea2fbc1625a824d4",
            "file": "src/app/components/genre/genre.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-genre",
            "styleUrls": [
                "./genre.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./genre.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "genre",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "routerURL",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string | null",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core'\n\n@Component({\n    selector: 'app-genre',\n    templateUrl: './genre.component.html',\n    styleUrls: ['./genre.component.scss'],\n})\nexport class GenreComponent {\n    @Input() genre: string = ''\n    @Input() color: string = ''\n    @Input() routerURL: string | null = null\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\n\n.genre-card {\n    display: block;\n    padding: 104px 0;\n    border-radius: $border-radius-lg;\n    border: none;\n    color: $white;\n    font-size: $font-size-md;\n    line-height: 1.5;\n    text-align: center;\n    text-decoration: none;\n}\n\n@media (max-width: 768px) {\n    .genre-card {\n        font-size: $font-size-sm;\n        padding: $spacing-lgs 0;\n    }\n}\n",
                    "styleUrl": "./genre.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<a [routerLink]=\"routerURL\" [style.background-color]=\"color\" class=\"genre-card\">{{ genre }}</a>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-a557eec14f72c438a8033301f4d6ce023e0a1844a3b06ec2b38794a612acc31735ae78a5ee10071b230c8c20d699eb914554e69d07ade54adb371da8efb464cc",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n\n.welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HomePageComponent",
            "id": "component-HomePageComponent-f6d1686dbaf86188a7515c6348430c5018a6c97def86c022686b3fe7d86882dd893529f843caf1507e780c84ee08dacfc0efc48e33bc8dabb99c7de35c2ec4f3",
            "file": "src/app/modules/home-page/home-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home-page",
            "styleUrls": [
                "./home-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./home-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dropDownData",
                    "defaultValue": "[\n        {\n            name: 'Ott-app',\n            onClick: () => {\n                console.log('Option 1 clicked')\n            },\n        },\n        {\n            name: 'Logout',\n            onClick: () => {\n                this.userAuth.logOutUser()\n            },\n        },\n    ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "inputPlaceholder",
                    "defaultValue": "'Search for movies or TV series'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "route",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActivatedRoute",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "router",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Router",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "goBack",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isMobileView",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "searchResult",
                    "args": [
                        {
                            "name": "query",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "query",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core'\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router'\nimport { UserAuthService } from 'src/app/services/user-auth.service'\n\n@Component({\n    selector: 'app-home-page',\n    templateUrl: './home-page.component.html',\n    styleUrls: ['./home-page.component.scss'],\n})\nexport class HomePageComponent implements OnInit {\n    inputPlaceholder = 'Search for movies or TV series'\n\n    constructor(public router: Router, public route: ActivatedRoute, private userAuth: UserAuthService) {}\n\n    dropDownData = [\n        {\n            name: 'Ott-app',\n            onClick: () => {\n                console.log('Option 1 clicked')\n            },\n        },\n        {\n            name: 'Logout',\n            onClick: () => {\n                this.userAuth.logOutUser()\n            },\n        },\n    ]\n\n    ngOnInit() {\n        this.router.events.subscribe((event) => {\n            if (this.router.url === '/home/movies') {\n                this.inputPlaceholder = 'Search for movies'\n            } else if (this.router.url === '/home/series') {\n                this.inputPlaceholder = 'Search for TV series'\n            } else {\n                this.inputPlaceholder = 'Search for movies or TV series'\n            }\n        })\n    }\n\n    searchResult(query: string) {\n        this.router.navigate(['/home/search', query])\n    }\n\n    isMobileView(): boolean {\n        return window.innerWidth <= 768\n    }\n\n    goBack() {\n        window.history.back()\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\n\n.home {\n    background-color: $theme-color-base;\n    min-height: 100vh;\n}\n\n.home-container {\n    padding: $spacing-md $spacing-xxxlg 0px $spacing-md;\n}\n\n.home-container-details {\n    display: flex;\n    flex-direction: row;\n    gap: $spacing-lg;\n}\n\n.search-bar-movies-card {\n    width: 100%;\n    min-width: $spacing-xxxs;\n}\n\n@media (max-width: 768px) {\n    .home-container-details {\n        flex-direction: column-reverse;\n    }\n\n    .home-container {\n        padding: 0;\n    }\n\n    .search-bar-movies-card {\n        padding: $spacing-lgs $spacing-normal 0 $spacing-normal;\n    }\n\n    .back-arrow {\n        margin-bottom: 25px;\n    }\n}\n",
                    "styleUrl": "./home-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userAuth",
                        "type": "UserAuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userAuth",
                        "type": "UserAuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"home\">\n    <div class=\"home-container\">\n        <div class=\"home-container-details\">\n            <div *ngIf=\"!(router.url.includes('/detail') || router.url.includes('/search')) || !isMobileView()\">\n                <app-navigation-bar></app-navigation-bar>\n            </div>\n            <div class=\"search-bar-movies-card\">\n                <div *ngIf=\"isMobileView()\">\n                    <app-profile-menu\n                        *ngIf=\"router.url === '/home'\"\n                        [dropDownData]=\"dropDownData\"\n                        icon=\"assets/profile-menu.svg\"\n                    ></app-profile-menu>\n                    <a *ngIf=\"router.url.includes('/detail') || router.url.includes('/search')\" (click)=\"goBack()\"\n                        ><img src=\"assets/back-arrow.png\" class=\"back-arrow\"\n                    /></a>\n                </div>\n                <app-search-bar (search)=\"searchResult($event)\" [inputPlaceholder]=\"inputPlaceholder\"></app-search-bar>\n                <router-outlet></router-outlet>\n            </div>\n        </div>\n    </div>\n</div>\n"
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-055a80d709de0abd6a93eca75f8a88244d0c3b9c2a20d753d71823cd323852ebe563ce4d9f13ba569e6a99fae4d200c69ef0112232d94eaf2edf6d776cdbe60b",
            "file": "src/app/components/input/input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => InputComponent), multi: true,\n}",
                    "type": "component"
                },
                {
                    "name": "{ provide: NG_VALIDATORS, useExisting: forwardRef(() => InputComponent), multi: true }",
                    "type": "component"
                }
            ],
            "selector": "app-input",
            "styleUrls": [
                "./input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "string | number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onChange",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "error$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 68,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "focusIn",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 69,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgControl",
                    "optional": true,
                    "description": "",
                    "line": 67,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onChangeFn",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 90
                },
                {
                    "name": "onTouchFn",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 92
                },
                {
                    "name": "validationAttempt",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "checkErrors",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 109,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 105,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "validate",
                    "args": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n    Component,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    InjectFlags,\n    INJECTOR,\n    Injector,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core'\nimport { Subject } from 'rxjs'\nimport { AbstractControl, ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgControl, Validator } from '@angular/forms'\n\nconst VALIDATION_TXT: any = {\n    email: 'Invalid email',\n    password: 'Empty password',\n    required: 'Field is required',\n    username: 'Invalid username',\n    MATCH_PASSWORD: 'Password is not matching!',\n}\n\nexport function username(AC: AbstractControl): null | { username: boolean } {\n    const regex = /^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/\n    if (AC.value === null) {\n        return null\n    }\n    return regex.test(AC.value) ? null : { username: true }\n}\n\nexport function email(AC: AbstractControl): null | { email: boolean } {\n    const regex =\n        /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    if (AC.value === null) {\n        return null\n    }\n    return AC.value.indexOf('@') > 64 || AC.value.length > 255 || !regex.test(AC.value) ? { email: true } : null\n}\n\nexport function passwordMatch(AC: AbstractControl): null | { MATCH_PASSWORD: boolean } {\n    if (AC.parent?.get('password')?.value === AC.value) return null\n    return { MATCH_PASSWORD: true }\n}\n\n@Component({\n    selector: 'app-input',\n    templateUrl: './input.component.html',\n    styleUrls: ['./input.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => InputComponent),\n            multi: true,\n        },\n\n        { provide: NG_VALIDATORS, useExisting: forwardRef(() => InputComponent), multi: true },\n    ],\n})\nexport class InputComponent implements ControlValueAccessor, OnInit, Validator {\n    @Input() label: string = ''\n    @Input() type: string = 'text'\n    @Input() placeholder: string = ''\n    @Input() value: string | number = ''\n    @Output() onChange = new EventEmitter<any>()\n\n    public ngControl?: NgControl\n    public error$ = new Subject()\n    public focusIn = false\n    public validationAttempt = false\n\n    constructor(@Inject(INJECTOR) private injector: Injector) {}\n\n    ngOnInit() {\n        this.ngControl = this.injector.get(NgControl, undefined, InjectFlags.Optional)\n    }\n\n    validate(control: AbstractControl): any {\n        setTimeout(() => {\n            if ((!this.focusIn && control.touched) || (this.focusIn && this.validationAttempt)) this.checkErrors()\n        })\n    }\n\n    set input(value: string) {\n        this.onChangeFn(value)\n        this.onTouchFn(value)\n        this.onChange.emit(value)\n    }\n\n    onChangeFn: any = () => {}\n\n    onTouchFn: any = () => {}\n\n    public writeValue(value: any) {\n        this.error$.next(undefined)\n        setTimeout(() => {\n            this.value = value\n        })\n    }\n\n    public registerOnChange(fn: any) {\n        this.onChangeFn = fn\n    }\n\n    public registerOnTouched(fn: any) {\n        this.onTouchFn = fn\n    }\n\n    public checkErrors(): void {\n        if (!this.ngControl?.control?.errors) {\n            this.error$.next(undefined)\n            return\n        }\n        const key = Object.keys(this.ngControl.control.errors)[0]\n        this.validationAttempt = true\n        this.error$.next(VALIDATION_TXT[key])\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\n\n.input-container {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: $spacing-lgs;\n    position: relative;\n}\n\n.input-container-label {\n    margin-bottom: $spacing-xs;\n    font-family: 'Poppins';\n    font-size: $font-size-sm;\n    line-height: 1.5;\n    color: $white;\n}\n.validation-msg {\n    margin-top: $spacing-xxs;\n    font-size: $font-size-xs;\n    position: absolute;\n    top: $spacing-xxxl;\n    color: $dark-red;\n}\n\n.input-container-value {\n    background-color: $dark-grey;\n    border-radius: $spacing-xs;\n    width: 338px;\n    height: $spacing-lgs;\n    font-size: $font-size-xs;\n    line-height: 1.5;\n    color: $silver;\n    padding: $spacing-xs $spacing-sm;\n    border: none;\n    width: 100%;\n}\n\n@media (max-width: 768px) {\n    .input-container {\n        margin-bottom: $spacing-normal;\n        .input-container-label {\n            font-size: $font-size-xxs;\n        }\n        .input-container-value {\n            font-size: $font-size-s;\n        }\n    }\n}\n",
                    "styleUrl": "./input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 70,
                "jsdoctags": [
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor",
                "OnInit",
                "Validator"
            ],
            "accessors": {
                "input": {
                    "name": "input",
                    "setSignature": {
                        "name": "input",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 84,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<div class=\"input-container\">\n    <span class=\"input-container-label\">{{ label }} </span>\n    <input [(ngModel)]=\"input\" [type]=\"type\" [placeholder]=\"placeholder\" class=\"input-container-value\" />\n    <div class=\"validation-msg\">\n        <span *ngIf=\"error$ | async as error\" class=\"error-msg\">{{ error }}</span>\n    </div>\n</div>\n"
        },
        {
            "name": "LoginPageComponent",
            "id": "component-LoginPageComponent-3396fe4010f7c78599f60911e2b1626fa8d639a7c61b0f418eaec0bcb4954a7832a880b6713f58dcaf4631bccd2de51d06f028bfbc6688dc664d9bcf65f390b1",
            "file": "src/app/modules/login-page/login-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login-page",
            "styleUrls": [
                "./login-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "errorMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "loginForm",
                    "defaultValue": "this.formBuilder.group({\n        email: this.formBuilder.control(null, [Validators.required, email]),\n        password: this.formBuilder.control(null, Validators.required),\n    })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "router",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Router",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSignUpClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'\nimport { UserAuthService } from 'src/app/services/user-auth.service'\nimport { Router } from '@angular/router'\nimport { email } from 'src/app/components/input/input.component'\n\n@Component({\n    selector: 'app-login-page',\n    templateUrl: './login-page.component.html',\n    styleUrls: ['./login-page.component.scss'],\n})\nexport class LoginPageComponent {\n    errorMessage: string = ''\n    constructor(private formBuilder: FormBuilder, private userauth: UserAuthService, public router: Router) {}\n\n    loginForm: FormGroup = this.formBuilder.group({\n        email: this.formBuilder.control(null, [Validators.required, email]),\n        password: this.formBuilder.control(null, Validators.required),\n    })\n\n    ngOnInit() {\n        this.loginForm.get('email')?.valueChanges.subscribe(() => {\n            this.errorMessage = ''\n        })\n        this.loginForm.get('password')?.valueChanges.subscribe(() => {\n            this.errorMessage = ''\n        })\n    }\n\n    onLogin() {\n        const user = {\n            identifier: this.loginForm.get('email')?.value,\n            password: this.loginForm.get('password')?.value,\n        }\n        this.router.navigate(['/home'])\n        this.userauth.loginUser(user).subscribe(\n            (response: any) => {\n                console.log('SignIn Successful', response)\n                localStorage.setItem('token', response.jwt)\n                this.router.navigate(['/home'])\n            },\n            (error) => {\n                console.error('SignIn failed:', error)\n                this.errorMessage = `SignIn failed, ${error.error.error.message}`\n            }\n        )\n    }\n\n    onSignUpClick() {\n        this.router.navigate(['/register'])\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\n\n.login {\n    background-image: $background-gradient, url('/assets/background-image.svg');\n    height: 100vh;\n    background-repeat: no-repeat;\n    background-size: cover;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: $spacing-sml;\n    flex-direction: column;\n}\n\n.login-title {\n    font-size: $font-size-xl;\n    line-height: 1.5;\n    text-align: center;\n    color: $dark-red;\n    position: relative;\n    z-index: 1;\n    margin-bottom: $spacing-xsm;\n}\n\n.login-title-background {\n    position: relative;\n    z-index: 0;\n    margin-bottom: $spacing-lgs;\n\n    &:before {\n        content: '';\n        position: absolute;\n        z-index: -1;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background-color: $black;\n        filter: blur(25px);\n    }\n}\n\n.login-card {\n    width: 870px;\n    max-width: 100%;\n}\n\n.signIn-title {\n    font-weight: 600;\n    font-size: $font-size-md;\n    line-height: 1.5;\n    align-items: center;\n    display: flex;\n    justify-content: center;\n    margin-bottom: $spacing-lgs;\n    gap: $spacing-xxxs;\n}\n\n.signIn-suffix {\n    color: $dark-red;\n}\n\n.signIn-btn-container {\n    display: flex;\n    justify-content: center;\n    margin-top: $spacing-xxxxl;\n}\n\n.singIn-card {\n    flex: 0 0 50%;\n}\n\n.signUp {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n}\n\n.signUp-title {\n    font-weight: 600;\n    font-size: $font-size-md;\n    line-height: 1.5;\n    color: $aqua;\n}\n\n.signUp-suffix {\n    color: $bright-red;\n}\n\n.signUp-description {\n    font-weight: 500;\n    font-size: $font-size-xs;\n    line-height: 1.5;\n    color: $aqua;\n}\n\n.signUp-account {\n    color: $white;\n}\n\n.signUp-logo {\n    margin-top: $spacing-xxxl;\n    margin-bottom: $spacing-xl;\n    max-width: 100%;\n}\n\n.signUp-btn-container {\n    display: flex;\n    justify-content: center;\n    margin-top: $spacing-md;\n}\n\n.responseMessage {\n    text-align: center;\n    margin-top: $spacing-xs;\n    font-family: 'Poppins';\n    font-weight: 500;\n    font-size: $font-size-xs;\n    line-height: 1.5;\n}\n\n.error-message {\n    color: $bright-red;\n}\n\n.input-field {\n    margin-bottom: $spacing-lg;\n    display: block;\n}\n\n.singUp-card {\n    flex: 0 0 50%;\n}\n\n@media (min-width: 768px) {\n    .signIn {\n        display: flex;\n        background-color: $dark-blue-tint;\n        border-radius: $spacing-sml;\n    }\n}\n@media (max-width: 768px) {\n    .login {\n        background-image: $background-gradient-mobile, url('/assets/background-image.svg');\n        flex-direction: column;\n        padding: 0px $spacing-md;\n        height: auto;\n    }\n\n    .login-title {\n        font-size: $font-size-md;\n    }\n\n    .login-title-container {\n        margin-top: $spacing-xxls;\n    }\n\n    .login-card {\n        display: flex;\n        flex-direction: column;\n        gap: $spacing-sm;\n        margin-bottom: $spacing-xls;\n    }\n\n    .signIn-title {\n        font-size: $font-size-sm;\n        margin-bottom: $spacing-md;\n    }\n\n    .signIn-btn-container {\n        margin-top: $spacing-normal;\n    }\n\n    .signUp-title {\n        font-size: $font-size-sm;\n    }\n\n    .signUp-logo {\n        margin-top: $spacing-sm;\n        margin-bottom: $spacing-sm;\n        width: $spacing-xxxl;\n    }\n\n    .signUp-description {\n        font-weight: 500;\n        font-size: $font-size-s;\n        line-height: 1.45;\n        color: $aqua;\n    }\n\n    .signUp-btn-container {\n        margin-top: $spacing-normal;\n    }\n\n    .singUp-card {\n        margin-bottom: $spacing-xls;\n    }\n\n    ::ng-deep app-card > .card-container {\n        padding: $spacing-md $background-bg;\n    }\n}\n",
                    "styleUrl": "./login-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userauth",
                        "type": "UserAuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userauth",
                        "type": "UserAuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"login\">\n    <div class=\"login-title-container\">\n        <div class=\"login-title-background\">\n            <h1 class=\"login-title\">Movie OTT</h1>\n        </div>\n    </div>\n    <div class=\"signIn login-card\">\n        <app-card type=\"secondary\" class=\"singIn-card\">\n            <p class=\"signIn-title\">Sign<span class=\"signIn-suffix\">In</span></p>\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin()\">\n                <app-input label=\"Email\" placeholder=\"Email\" formControlName=\"email\" name=\"identifier\" class=\"input-field\" ngDefaultControl></app-input>\n                <app-input\n                    label=\"Password\"\n                    [type]=\"'password'\"\n                    placeholder=\"Password\"\n                    formControlName=\"password\"\n                    name=\"password\"\n                    ngDefaultControl\n                ></app-input>\n                <div class=\"signIn-btn-container\">\n                    <app-button [disabled]=\"!loginForm.valid\" label=\"Sign In\" type=\"primary\"></app-button>\n                </div>\n            </form>\n            <div *ngIf=\"errorMessage\" class=\"error-message responseMessage\">{{ errorMessage }}</div>\n        </app-card>\n        <app-card class=\"singUp-card\">\n            <div class=\"signUp\">\n                <div class=\"signUp-title\">Welcome to <span class=\"signUp-suffix\">Movie OTT</span></div>\n                <img src=\"/assets/logo.svg\" class=\"signUp-logo\" />\n                <p class=\"signUp-description\">New here? <span class=\"signUp-account\">Create an account here</span></p>\n                <div class=\"signUp-btn-container\">\n                    <app-button (click)=\"onSignUpClick()\" label=\"Sign Up\" type=\"secondary\"></app-button>\n                </div>\n            </div>\n        </app-card>\n    </div>\n</div>\n"
        },
        {
            "name": "MovieDetailComponent",
            "id": "component-MovieDetailComponent-a344ff9d02478bec098464426ab2ca5c3a36359fb7b00f49f70334fd808f3dae9592487751b94b03e54e2da98d1c3507b2ba41aea906eed8b4e08db5400e1e74",
            "file": "src/app/components/movie-detail/movie-detail.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-movie-detail",
            "styleUrls": [
                "./movie-detail.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./movie-detail.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "movieDetail",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core'\n\n@Component({\n    selector: 'app-movie-detail',\n    templateUrl: './movie-detail.component.html',\n    styleUrls: ['./movie-detail.component.scss'],\n})\nexport class MovieDetailComponent {\n    @Input() label!: string\n    @Input() movieDetail!: string\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\n\n.movie-detail {\n    display: flex;\n    flex-direction: column;\n    font-size: $font-size-normal;\n    line-height: 1.5;\n    color: $white;\n}\n\n.movie-detail-label {\n    color: $silver;\n}\n\n@media (max-width: 768px) {\n    .movie-detail {\n        font-size: $font-size-xs;\n    }\n}\n",
                    "styleUrl": "./movie-detail.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"movie-detail\">\n    <span class=\"movie-detail-label\">{{ label }}</span>\n    {{ movieDetail }}\n</div>\n"
        },
        {
            "name": "MovieGenreDetailsPageComponent",
            "id": "component-MovieGenreDetailsPageComponent-96eb449daf8d3b4b9b787562c1a52037f0321b52ca6025010df78c28b0fedea623b2966dfca07d570f768b4c020af39781b0c845116e652b8700774c4fa56fe8",
            "file": "src/app/modules/movie-genre-details-page/movie-genre-details-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-movie-genre-details-page",
            "styleUrls": [
                "./movie-genre-details-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./movie-genre-details-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentMovieorSeriesUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "currentPage",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "imageBaseUrl",
                    "defaultValue": "environment.imageBaseUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "movieGenreDetails",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IMovieSeries[]",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "userAuth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserAuthService",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onScroll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core'\nimport { ActivatedRoute, Params, Router } from '@angular/router'\nimport { UserAuthService } from 'src/app/services/user-auth.service'\nimport { environment } from 'src/environments/environment'\n\ninterface IMovieSeries {\n    adult: boolean\n    backdrop_path: string\n    genre_ids: []\n    id: number\n    media_type: string\n    original_language: string\n    original_title: string\n    original_name: string\n    overview: string\n    popularity: number\n    poster_path: string\n    release_date: string\n    first_air_date: string\n    title: string\n    video: boolean\n    vote_average: number\n    vote_count: number\n}\n@Component({\n    selector: 'app-movie-genre-details-page',\n    templateUrl: './movie-genre-details-page.component.html',\n    styleUrls: ['./movie-genre-details-page.component.scss'],\n})\nexport class MovieGenreDetailsPageComponent implements OnInit {\n    imageBaseUrl: string = environment.imageBaseUrl\n    movieGenreDetails: IMovieSeries[] = []\n    currentPage: number = 1\n    currentMovieorSeriesUrl: string = ''\n    constructor(public userAuth: UserAuthService, private router: Router, private activatedRoute: ActivatedRoute) {}\n\n    ngOnInit(): void {\n        this.activatedRoute.params.subscribe((params) => {\n            this.currentMovieorSeriesUrl = this.router.url\n            if (this.router.url.includes('movies')) {\n                this.userAuth.fetchMovieGenreDetails('movie', this.currentPage, params['id']).subscribe((res: any) => {\n                    console.log(res)\n                    this.movieGenreDetails = res.results\n                })\n            } else if (this.router.url.includes('series')) {\n                this.userAuth.fetchMovieGenreDetails('tv', this.currentPage, params['id']).subscribe((res: any) => {\n                    console.log(res)\n                    this.movieGenreDetails = res.results\n                })\n            }\n        })\n    }\n    onScroll() {\n        this.currentPage++\n        this.activatedRoute.params.subscribe((params: Params) => {\n            this.userAuth.fetchMovieGenreDetails('movie', this.currentPage, params['id']).subscribe((res: any) => {\n                this.movieGenreDetails = [...this.movieGenreDetails, ...res.results]\n            })\n        })\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\n\n.search-results {\n    background-color: $theme-color-base;\n    position: relative;\n}\n.movie {\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n    grid-gap: $spacing-md;\n    margin-top: $spacing-lg;\n}\n\n.home {\n    background-color: $theme-color-base;\n}\n\n.home-container {\n    padding: $spacing-md $spacing-xxxlg 0 $spacing-md;\n}\n\n.home-container-details {\n    display: flex;\n    flex-direction: row;\n    gap: $spacing-lg;\n}\n\n.search-bar-movies-card {\n    width: 100%;\n    position: relative;\n}\n@media (max-width: 768px) {\n    .home-container-details {\n        flex-direction: column-reverse;\n    }\n    .home-container {\n        padding: 0;\n    }\n    .search-bar-movies-card {\n        padding: $spacing-lgs $spacing-normal 0 $spacing-normal;\n    }\n}\n\n@media (max-width: 768px) {\n    .movie {\n        grid-template-columns: repeat(2, 1fr);\n    }\n}\n@media (max-width: 420px) {\n    .movie {\n        grid-template-columns: repeat(1, 1fr);\n    }\n}\n",
                    "styleUrl": "./movie-genre-details-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "userAuth",
                        "type": "UserAuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 34,
                "jsdoctags": [
                    {
                        "name": "userAuth",
                        "type": "UserAuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div\n    infinite-scroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollUpDistance]=\"1\"\n    [infiniteScrollThrottle]=\"500\"\n    (scrolled)=\"onScroll()\"\n    class=\"search-results\"\n>\n    <div class=\"movie\">\n        <div *ngFor=\"let movie of movieGenreDetails\">\n            <app-movie-series-card\n                routerLink=\"details/{{ movie.id }}\"\n                label=\"{{ currentMovieorSeriesUrl.includes('series') ? 'TV series' : 'Movie' }}\"\n                title=\"{{ currentMovieorSeriesUrl.includes('movies') ? movie.original_title : movie.original_name }}\"\n                year=\"{{\n                    currentMovieorSeriesUrl.includes('movies') ? (movie.release_date | date: 'yyyy') : (movie.first_air_date | date: 'yyyy')\n                }}\"\n                [image]=\"imageBaseUrl + movie.poster_path\"\n                icon=\"{{ currentMovieorSeriesUrl.includes('series') ? 'assets/series-icon.png' : 'assets/movie-icon.png' }}\"\n                id=\"{{ movie.id }}\"\n            ></app-movie-series-card>\n        </div>\n    </div>\n</div>\n"
        },
        {
            "name": "MovieGenrePageComponent",
            "id": "component-MovieGenrePageComponent-a62537a54e0058c2b4c9b2a8c109029f529d22b232defb77e2fd941f6ec74d6e2d1d9cc423298c5a22ff32f0eb10d164d4087735dfaa4e55d59d642fefff51af",
            "file": "src/app/modules/movie-genre-page/movie-genre-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-movie-genre-page",
            "styleUrls": [
                "./movie-genre-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./movie-genre-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activatedRoute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActivatedRoute",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isApi1",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "movieSeriesGenres",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "userAuth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserAuthService",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "fetchMovieTypes",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core'\nimport { ActivatedRoute } from '@angular/router'\nimport { UserAuthService } from 'src/app/services/user-auth.service'\n\n@Component({\n    selector: 'app-movie-genre-page',\n    templateUrl: './movie-genre-page.component.html',\n    styleUrls: ['./movie-genre-page.component.scss'],\n})\nexport class MovieGenrePageComponent implements OnInit {\n    movieSeriesGenres: any\n    isApi1: boolean = false\n    constructor(public userAuth: UserAuthService, public activatedRoute: ActivatedRoute) {}\n    ngOnInit() {\n        this.fetchMovieTypes()\n    }\n    fetchMovieTypes() {\n        this.activatedRoute.params.subscribe((params) => {\n            if (params['moviesSeries'] === 'movies') {\n                this.isApi1 = true\n                this.userAuth.fetchMovieGenre('movie').subscribe((res: any) => {\n                    this.movieSeriesGenres = res.genres\n                    console.log(this.movieSeriesGenres.id)\n                })\n            } else if (params['moviesSeries'] === 'series') {\n                this.isApi1 = false\n                this.userAuth.fetchMovieGenre('tv').subscribe((res: any) => {\n                    this.movieSeriesGenres = res.genres\n                    console.log(res.genres.id)\n                })\n            }\n        })\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\nul {\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n    grid-gap: $spacing-normal;\n    margin-top: $spacing-xl;\n    background-color: $theme-color-base;\n}\n\n@media (max-width: 768px) {\n    ul {\n        grid-template-columns: repeat(2, 1fr);\n        grid-gap: $spacing-sm;\n        margin-top: $spacing-md;\n    }\n    ::ng-deep app-genre > .genre-card {\n        font-size: $font-size-sm;\n        padding: $spacing-lggs 0;\n    }\n}\n\n@media (max-width: 420px) {\n    ul {\n        grid-template-columns: repeat(1, 1fr);\n    }\n}\n",
                    "styleUrl": "./movie-genre-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "userAuth",
                        "type": "UserAuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "userAuth",
                        "type": "UserAuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ul>\n    <div *ngFor=\"let genre of movieSeriesGenres; let i = index\">\n        <app-genre\n            [color]=\"isApi1 ? (i % 2 === 0 ? '#0E7490' : '#171E31') : i % 2 === 0 ? '#0F766E' : '#171E31'\"\n            genre=\"{{ genre.name }}\"\n            routerLink=\"{{ genre.id }}\"\n        ></app-genre>\n    </div>\n</ul>\n"
        },
        {
            "name": "MovieSeriesCardComponent",
            "id": "component-MovieSeriesCardComponent-c3b2c88a85f68ff030998ddf627ba6f939392ab2d9aee31df80e3908c86e40d2258172f9ea7accb7b333fef07a1cfeb6c0f115ffab294aa0c8ab2f092d85fa83",
            "file": "src/app/components/movie-series-card/movie-series-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-movie-series-card",
            "styleUrls": [
                "./movie-series-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./movie-series-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "detailRouter",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string | null",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "image",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "isBookmark",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "year",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core'\n\n@Component({\n    selector: 'app-movie-series-card',\n    templateUrl: './movie-series-card.component.html',\n    styleUrls: ['./movie-series-card.component.scss'],\n})\nexport class MovieSeriesCardComponent {\n    @Input() title: string = ''\n    @Input() image: string = ''\n    @Input() icon: string = ''\n    @Input() isBookmark: boolean = false\n    @Input() detailRouter: string | null = null\n    @Input() year: string = ''\n    @Input() label: string = ''\n    @Input() id: string = ''\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\n\n.movie-series-container {\n    background-color: $theme-color-base;\n    font-size: $font-size-sm;\n    line-height: 1.5;\n    letter-spacing: 0.06rem;\n    color: $white;\n    position: relative;\n    width: 100%;\n}\n\n.img-container {\n    margin-bottom: $spacing-sm;\n    background-image: url('/assets/bookmark-background.png');\n    background-repeat: no-repeat;\n}\n\n.card-details {\n    display: flex;\n    gap: $spacing-s;\n    margin-bottom: $spacing-xxs;\n    align-items: center;\n}\n\n.image-card {\n    width: 100% !important;\n    height: 240px;\n    border-radius: $border-radius-lg;\n    object-fit: cover;\n    object-position: top;\n}\n\nh2 {\n    font-size: $font-size-md;\n    line-height: 1.5;\n    color: $white;\n}\n\na {\n    text-decoration: none;\n}\n@media (max-width: 768px) {\n    .year-label {\n        font-size: $font-size-xxs;\n    }\n    h2 {\n        font-size: $font-size-xs;\n    }\n    .image-card {\n        height: 200px;\n        border-radius: $border-radius-sm;\n    }\n}\n",
                    "styleUrl": "./movie-series-card.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"movie-series-container\">\n    <div class=\"img-container\">\n        <a [routerLink]=\"detailRouter\">\n            <img [src]=\"image\" alt=\"image card\" class=\"image-card\" />\n        </a>\n        <app-bookmark-icon\n            [title]=\"title\"\n            [label]=\"label\"\n            [year]=\"year\"\n            [id]=\"id\"\n            [image]=\"image\"\n        ></app-bookmark-icon>\n    </div>\n    <div class=\"card-details\">\n        <div class=\"year-label\">{{ year }}</div>\n        <img src=\"assets/dot.png\" alt=\"\" />\n        <img [src]=\"icon\" alt=\"movieroseriesicon\" />\n        <div class=\"year-label\">{{ label }}</div>\n    </div>\n    <div class=\"movie-series-title\">\n        <a [routerLink]=\"detailRouter\">\n            <h2>{{ title }}</h2>\n        </a>\n    </div>\n</div>\n"
        },
        {
            "name": "NavigationBarComponent",
            "id": "component-NavigationBarComponent-100ac627f01a1eae0ac179a2882a9fde2de319c4612e8ec301fba058a20f5b4c27904aef6aa867510c1173ce1738a7e28fe03049775f2f0bfda347f68978a62c",
            "file": "src/app/components/navigation-bar/navigation-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-navigation-bar",
            "styleUrls": [
                "./navigation-bar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./navigation-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "logoRouterLink",
                    "defaultValue": "'/home'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dropDownData",
                    "defaultValue": "[\n        {\n            name: 'Ott-app',\n            onClick: () => {\n                console.log('Option 1 clicked')\n            },\n        },\n        {\n            name: 'Logout',\n            onClick: () => {\n                this.userAuth.logOutUser()\n            },\n        },\n    ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "userAuth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserAuthService",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core'\nimport { Router } from '@angular/router'\nimport { UserAuthService } from 'src/app/services/user-auth.service'\n\n@Component({\n    selector: 'app-navigation-bar',\n    templateUrl: './navigation-bar.component.html',\n    styleUrls: ['./navigation-bar.component.scss'],\n})\nexport class NavigationBarComponent {\n    constructor(public userAuth: UserAuthService, private router: Router) {}\n    @Input() logoRouterLink = '/home'\n    dropDownData = [\n        {\n            name: 'Ott-app',\n            onClick: () => {\n                console.log('Option 1 clicked')\n            },\n        },\n        {\n            name: 'Logout',\n            onClick: () => {\n                this.userAuth.logOutUser()\n            },\n        },\n    ]\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\n\n.navigation-bar-container {\n    display: flex;\n    flex-direction: column;\n    gap: $spacing-xxm;\n    padding: $spacing-xxxlg 0;\n    width: $spacing-xxslg;\n    text-align: center;\n    border-radius: $border-radius-lg;\n    background-color: $dark-blue-hue;\n}\n\n.profile-container {\n    margin-top: $spacing-xslg;\n}\n\n@media (max-width: 768px) {\n    .logo-container,\n    .profile-container {\n        display: none;\n    }\n    .navigation-bar-container {\n        width: 100%;\n        padding: 0;\n    }\n}\n@media (max-width: 768px) {\n    .logo-container,\n    .profile-container {\n        display: none;\n    }\n    .navigation-bar-container {\n        width: 100%;\n        padding: 0;\n    }\n}\n",
                    "styleUrl": "./navigation-bar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "userAuth",
                        "type": "UserAuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "userAuth",
                        "type": "UserAuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"navigation-bar-container\">\n    <div class=\"logo-container\">\n        <img [routerLink]=\"logoRouterLink\" src=\"assets/logo.png\" alt=\"logo\" />\n    </div>\n    <app-navigation-menu\n        [items]=\"[\n            { name: 'home', icon: 'assets/home-icon.svg', path: '/home' },\n            { name: 'movie', icon: 'assets/movie-icon.svg', path: '/home/movies' },\n            { name: 'series', icon: 'assets/series-icon.svg', path: '/home/series' },\n            { name: 'bookmark', icon: 'assets/bookmark-icon.svg', path: '/home/bookmarks' }\n        ]\"\n        class=\"navigation-menu\"\n    ></app-navigation-menu>\n    <div class=\"profile-container\">\n        <app-profile-menu [dropDownData]=\"dropDownData\" icon=\"assets/profile-menu.svg\"></app-profile-menu>\n    </div>\n</div>\n\n"
        },
        {
            "name": "NavigationMenuComponent",
            "id": "component-NavigationMenuComponent-5ee97568d5a594622aa4f2783f041868848c67bddeaaf4b80fc2a6eecc3d66827e30d5dac83b56651eb5bf0857fcde707725457801b0f3317c25a756f0757e5d",
            "file": "src/app/components/navigation-menu/navigation-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-navigation-menu",
            "styleUrls": [
                "./navigation-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./navigation-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "IItems[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentUrl",
                    "defaultValue": "'/home'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core'\nimport { NavigationEnd, Router } from '@angular/router'\n\nexport interface IItems {\n    name: string\n    icon: string\n    path: string\n}\n\n@Component({\n    selector: 'app-navigation-menu',\n    templateUrl: './navigation-menu.component.html',\n    styleUrls: ['./navigation-menu.component.scss'],\n})\nexport class NavigationMenuComponent implements OnInit {\n    @Input() items: IItems[] = []\n    currentUrl: string = '/home'\n    ngOnInit() {\n        this.router.events.subscribe((event) => {\n            if (event instanceof NavigationEnd) {\n                this.currentUrl = event.url\n            }\n        })\n    }\n    constructor(private router: Router) {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\n\n.navigation-menu-container {\n    background-color: $dark-blue-hue;\n    width: 34.89px;\n    margin: auto;\n}\n\nul {\n    text-decoration: none;\n    display: flex;\n    gap: $spacing-xxmd;\n    flex-direction: column;\n    align-items: center;\n}\n\n.list-item {\n    list-style: none;\n    a {\n        &.active {\n            img {\n                filter: brightness(0) invert(1);\n            }\n        }\n    }\n}\n@media (max-width: 768px) {\n    ul {\n        flex-direction: row;\n        align-items: center;\n        justify-content: space-around;\n        gap: 0;\n        padding: $spacing-sm $spacing-xmd $spacing-normal $spacing-xmd;\n    }\n    .navigation-menu-container {\n        position: fixed;\n        bottom: 0;\n        width: 100%;\n        z-index: 999;\n    }\n}\n",
                    "styleUrl": "./navigation-menu.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"navigation-menu-container\">\n    <ul>\n        <li *ngFor=\"let item of items\" class=\"list-item\">\n            <a [routerLink]=\"item.path\" [class.active]=\"item.path === currentUrl\">\n                <img [src]=\"item.icon\" [alt]=\"item.name\" class=\"icons\" />\n            </a>\n        </li>\n    </ul>\n</div>\n"
        },
        {
            "name": "NoResultPageComponent",
            "id": "component-NoResultPageComponent-8f22921a980a7cf8b32d74c8bfa302a20321daca3776a7d1694da9faee7e5f4edb8b9ea987ae6a99113457986e2a0696a63fb58ce88e594bccecf9d94bbf32a5",
            "file": "src/app/modules/no-result-page/no-result-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-no-result-page",
            "styleUrls": [
                "./no-result-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./no-result-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activatedRoute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActivatedRoute",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "errorMovie",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core'\nimport { ActivatedRoute, Params } from '@angular/router'\n\n@Component({\n    selector: 'app-no-result-page',\n    templateUrl: './no-result-page.component.html',\n    styleUrls: ['./no-result-page.component.scss'],\n})\nexport class NoResultPageComponent implements OnInit {\n    errorMovie: string = ''\n    constructor(public activatedRoute: ActivatedRoute) {}\n\n    ngOnInit() {\n        this.activatedRoute.params.subscribe((params:Params) => {\n            this.errorMovie = params['errorData']\n        })\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\n\n.no-result-body {\n    background-image: url('/assets/no-result-background.png');\n    height: 100vh;\n    background-size: cover;\n    background-position: center;\n}\nh2 {\n    font-size: $font-size-bg;\n    line-height: 1.5;\n    color: $white;\n}\n.no-result-message {\n    display: flex;\n    gap: $spacing-normal;\n    align-items: center;\n    padding: $spacing-xls 0 0 $spacing-xls;\n}\n@media (max-width: 768px) {\n    .no-result-message {\n        flex-direction: column;\n        gap: $spacing-normal;\n        align-items: flex-start;\n        padding: $background-bg $spacing-normal 0 $spacing-normal;\n    }\n}\n",
                    "styleUrl": "./no-result-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"no-result-body\">\n    <div class=\"no-result-message\">\n        <a routerLink=\"/home\"><img src=\"assets/back-arrow.png\" /></a>\n        <h2>No Results found for the search {{ errorMovie }}</h2>\n    </div>\n</div>\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-7126d8c2607c946741c651482413b43feb72b2d63cac9d3ac173fde206a5e635eb4cdbf7ca7ac9327c7d4d05cf7ef619144c34c11609ad677081d0ee4e855064",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nsection h2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nsection p {\n  margin: 1em 0;\n}\n\nsection a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nsection ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nsection li {\n  margin-bottom: 8px;\n}\n\nsection .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\nsection .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\nsection .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\nsection .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "ProfileMenuComponent",
            "id": "component-ProfileMenuComponent-b38587745c46a896c3ee2f655fea2a817e5d06e07193bf57386f3493fc5b214872463f824aa89de0a7257ab344c2181ee1e51c030129fba98a4b1ce1bcdaadc7",
            "file": "src/app/components/profile-menu/profile-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-profile-menu",
            "styleUrls": [
                "./profile-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./profile-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "dropDownData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "IDropDownData[]",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string | null",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_dropDownData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IDropDownData[]",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "closeDropdown",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openDropdown",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit } from '@angular/core'\nimport { IDropDownData } from '../drop-down-menu/drop-down-menu.component'\n\n@Component({\n    selector: 'app-profile-menu',\n    templateUrl: './profile-menu.component.html',\n    styleUrls: ['./profile-menu.component.scss'],\n})\nexport class ProfileMenuComponent {\n    private _dropDownData: IDropDownData[] = []\n    isOpen = false\n\n    @Input() icon: string | null = null\n\n    @Input() set dropDownData(value: IDropDownData[]) {\n        const result = value.map((x) => {\n            return {\n                ...x,\n                onClick: () => {\n                    this.closeDropdown()\n                    x.onClick()\n                },\n            }\n        })\n        this._dropDownData = result\n    }\n\n    get dropDownData() {\n        return this._dropDownData\n    }\n\n    openDropdown() {\n        this.isOpen = true\n    }\n\n    closeDropdown() {\n        this.isOpen = false\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\n\n.dropdown-mask {\n    position: fixed;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    background-color: $color-mask;\n    z-index: 1;\n}\n\n.dropdown {\n    z-index: 2;\n    position: relative;\n}\n\n.dropdown-icon:hover {\n    box-shadow: 0 0 5px $white-tint;\n    border-radius: 50%;\n    cursor: pointer;\n}\n\n.dropdown-container {\n    position: relative;\n}\n\n.highlight {\n    box-shadow: 0 0 5px $dark-red;\n    border-radius: 50%;\n}\n\n@media (max-width: 768px) {\n    .dropdown-icon {\n        width: $background-bg;\n        margin-bottom: $spacing-normal;\n    } \n}\n",
                    "styleUrl": "./profile-menu.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "dropDownData": {
                    "name": "dropDownData",
                    "setSignature": {
                        "name": "dropDownData",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "IDropDownData[]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 15,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "IDropDownData[]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "dropDownData",
                        "type": "",
                        "returnType": "",
                        "line": 28
                    }
                }
            },
            "templateData": "<span class=\"dropdown\">\n    <img [src]=\"icon\" [class.highlight]=\"isOpen\" (click)=\"isOpen ? closeDropdown() : openDropdown()\" class=\"dropdown-icon\" />\n    <app-drop-down-menu *ngIf=\"isOpen\" [dropdownData]=\"dropDownData\" class=\"dropdown-container\"></app-drop-down-menu>\n</span>\n<div *ngIf=\"isOpen\" (click)=\"closeDropdown()\" class=\"dropdown-mask\"></div>\n"
        },
        {
            "name": "RegistrationPageComponent",
            "id": "component-RegistrationPageComponent-f519303fbf72adaee55f629af019838490d581383c57f2008ccfb714790c66a5427f4a2f7e132d9b399d4b9ba5f7aff25d0cc969f33eeb86d490d69c6c16da2e",
            "file": "src/app/modules/registration-page/registration-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-registration-page",
            "styleUrls": [
                "./registration-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./registration-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "errorMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "registerForm",
                    "defaultValue": "this.formBuilder.group({\n        username: this.formBuilder.control(null, [Validators.required, username]),\n        email: this.formBuilder.control(null, [Validators.required, email]),\n        password: this.formBuilder.control(null, Validators.required),\n        confirmpassword: this.formBuilder.control(null, [Validators.required, passwordMatch]),\n    })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "router",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Router",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "successMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "userauth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserAuthService",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onRegistration",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'\nimport { Router } from '@angular/router'\nimport { UserAuthService } from 'src/app/services/user-auth.service'\nimport { username, email, passwordMatch } from 'src/app/components/input/input.component'\n\n@Component({\n    selector: 'app-registration-page',\n    templateUrl: './registration-page.component.html',\n    styleUrls: ['./registration-page.component.scss'],\n})\nexport class RegistrationPageComponent {\n    successMessage: string = ''\n    errorMessage: string = ''\n    registerForm: FormGroup = this.formBuilder.group({\n        username: this.formBuilder.control(null, [Validators.required, username]),\n        email: this.formBuilder.control(null, [Validators.required, email]),\n        password: this.formBuilder.control(null, Validators.required),\n        confirmpassword: this.formBuilder.control(null, [Validators.required, passwordMatch]),\n    })\n\n    constructor(private formBuilder: FormBuilder, public userauth: UserAuthService, public router: Router) {}\n\n    onRegistration() {\n        const user = this.registerForm.value\n        this.userauth.registerUser(user).subscribe(\n            (response: any) => {\n                this.successMessage = 'Registration successful!'\n                this.errorMessage = ''\n\n                setTimeout(() => {\n                    this.router.navigate(['/home'])\n                }, 2000)\n            },\n            (error) => {\n                console.log(error)\n                this.errorMessage = `Registration failed,${error.error.error.message}`\n                this.successMessage = ''\n            }\n        )\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\n\n.registration-page-container {\n    background-image: $background-gradient, url('/assets/OTT-background.png');\n    height: 100vh;\n    background-repeat: no-repeat;\n    background-size: cover;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 0px $spacing-md;\n}\n\n.register-heading {\n    font-size: $font-size-md;\n    line-height: 1.5;\n    text-align: center;\n    margin-bottom: $spacing-md;\n}\n::ng-deep app-card > .card-container {\n    padding: $spacing-md 64px;\n}\n.registration-page-body {\n    width: 686px;\n}\n.success-message {\n    color: $light-green-tint;\n}\n\n.error-message {\n    color: $bright-red;\n}\n.responseMessage {\n    text-align: center;\n    margin-top: $spacing-xs;\n}\n.btn-container {\n    margin-top: $spacing-xs;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n}\n\n.movie-heading {\n    font-size: $font-size-xl;\n    line-height: 1.5;\n    text-align: center;\n    color: $dark-red;\n    position: relative;\n    z-index: 1;\n}\n\n.movie-heading-background {\n    position: relative;\n    z-index: 0;\n    margin-bottom: $spacing-lgs;\n\n    &:before {\n        content: '';\n        position: absolute;\n        z-index: -1;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background-color: $black;\n        filter: blur(25px);\n    }\n}\n@media (max-width: 768px) {\n    .movie-heading-background {\n        margin-bottom: $spacing-xl;\n    }\n}\n",
                    "styleUrl": "./registration-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userauth",
                        "type": "UserAuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userauth",
                        "type": "UserAuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"registration-page-container\">\n    <div class=\"registration-page-body\">\n        <div class=\"movie-heading-background\">\n            <h1 class=\"movie-heading\">Movie OTT</h1>\n        </div>\n        <app-card type=\"primary\">\n            <h1 class=\"register-heading\">Register</h1>\n            <form [formGroup]=\"registerForm\" (ngSubmit)=\"onRegistration()\">\n                <app-input [formGroup]=\"registerForm\" label=\"Full Name\" placeholder=\"Full Name\" formControlName=\"username\" ngDefaultControl></app-input>\n                <app-input label=\"Email\" placeholder=\"Email\" formControlName=\"email\" ngDefaultControl></app-input>\n                <app-input label=\"Password\" [type]=\"'password'\" placeholder=\"Password\" formControlName=\"password\" ngDefaultControl></app-input>\n                <app-input\n                    label=\"Confirm Password\"\n                    [type]=\"'password'\"\n                    placeholder=\"Confirm Password\"\n                    formControlName=\"confirmpassword\"\n                    ngDefaultControl\n                ></app-input>\n                <div class=\"btn-container\">\n                    <app-button label=\"Sign In\" [disabled]=\"!registerForm.valid\" type=\"primary\"></app-button>\n                </div>\n            </form>\n            <div class=\"responseMessage\" [ngClass]=\"{ 'success-message': successMessage, 'error-message': errorMessage }\">\n                {{ successMessage || errorMessage }}\n            </div>\n        </app-card>\n    </div>\n</div>\n"
        },
        {
            "name": "SearchBarComponent",
            "id": "component-SearchBarComponent-0c2e2866c072ba75c124edd01f88268b765faa8d5cd1b570b7ca16951bc23612bcb2825591eca38c0eef0aa2da257c9061a42ae3c45ac8efbd066f011a4ed1c5",
            "file": "src/app/components/search-bar/search-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-search-bar",
            "styleUrls": [
                "./search-bar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./search-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "inputPlaceholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "search",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "breakpointObserver",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BreakpointObserver",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "searchValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSeachButtonClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSearch",
                    "args": [
                        {
                            "name": "value",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core'\nimport { debounceTime, distinctUntilChanged, fromEvent } from 'rxjs'\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout'\n\n@Component({\n    selector: 'app-search-bar',\n    templateUrl: './search-bar.component.html',\n    styleUrls: ['./search-bar.component.scss'],\n})\nexport class SearchBarComponent {\n    searchValue: string = ''\n    @Input() inputPlaceholder: string = ''\n    @Output() search = new EventEmitter<string>()\n\n    constructor(public breakpointObserver: BreakpointObserver) {}\n\n    ngOnInit() {\n        this.breakpointObserver.observe([Breakpoints.Handset]).subscribe((result: { matches: any }) => {\n            if (result.matches) {\n                const inputElement = document.querySelector('.searchInput')\n                if (inputElement) {\n                    fromEvent<KeyboardEvent>(inputElement, 'keydown')\n                        .pipe(debounceTime(1000), distinctUntilChanged())\n                        .subscribe(() => {\n                            this.search.emit(this.searchValue)\n                        })\n                }\n            }\n        })\n    }\n\n    onSearch(value: Event) {\n        if (value) {\n            this.searchValue = (value.target as HTMLInputElement).value\n        }\n    }\n    onSeachButtonClick() {\n        this.search.emit(this.searchValue)\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\n\n.search-bar-container {\n    background-color: $theme-color-base;\n    display: flex;\n    align-items: center;\n    border-radius: $border-radius-lg;\n}\n\n.searchInput {\n    background-image: url(/assets/search-icon.png);\n    background-repeat: no-repeat;\n    background-position: $spacing-xs center;\n    padding: 0 $spacing-xl;\n    background-color: $theme-color-base;\n    border: none;\n    outline: none;\n    border-radius: $border-radius-lg;\n    width: 100%;\n    color: $white;\n    font-size: $font-size-lg;\n}\n\ninput::placeholder {\n    font-size: $font-size-lg;\n    line-height: 1.5;\n    color: $silver;\n}\n\n@media (max-width: 768px) {\n    .search-bar-container {\n        border-radius: $border-radius-sm;\n    }\n    .searchInput {\n        font-size: $font-size-md;\n        background-size: $spacing-normal;\n        padding: 0 $spacing-lg;\n    }\n    app-button {\n        display: none;\n    }\n    input::placeholder {\n        font-size: $font-size-xs;\n        line-height: 1.5;\n    }\n}\n@media (max-width: 480px) {\n    .searchInput {\n        font-size: $font-size-xs;\n        background-size: $spacing-xsm;\n    }\n}\n",
                    "styleUrl": "./search-bar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"search-bar-container\">\n    <input [placeholder]=\"inputPlaceholder\" (input)=\"onSearch($event)\" type=\"text\" class=\"searchInput\" />\n    <app-button [disabled]=\"!searchValue\" (click)=\"onSeachButtonClick()\" size=\"large\" label=\"Search\"></app-button>\n</div>\n"
        },
        {
            "name": "SearchResultPageComponent",
            "id": "component-SearchResultPageComponent-e572ec0f16289b0a2bb198e080c3025911b482daa2e5a827c7295c94270b1196dca7e1de49bac872649d8c4fabff68e08131021afe0a61da16e3ec18027d79a7",
            "file": "src/app/modules/search-result-page/search-result-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-search-result-page",
            "styleUrls": [
                "./search-result-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./search-result-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "allMovies",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IMovieSeries[]",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "currentMovieSeries",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "currentPage",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "imageBaseUrl",
                    "defaultValue": "environment.imageBaseUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "totalItems",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | null",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "userAuth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserAuthService",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onScroll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core'\nimport { ActivatedRoute, Params, Router } from '@angular/router'\nimport { UserAuthService } from 'src/app/services/user-auth.service'\nimport { environment } from 'src/environments/environment'\n\nexport interface IMovieSeries {\n    adult: boolean\n    backdrop_path: string\n    genre_ids: []\n    id: number\n    media_type: string\n    original_language: string\n    original_title: string\n    original_name: string\n    overview: string\n    popularity: number\n    poster_path: string\n    release_date: string\n    first_air_date: string\n    title: string\n    video: boolean\n    vote_average: number\n    vote_count: number\n}\n\n@Component({\n    selector: 'app-search-result-page',\n    templateUrl: './search-result-page.component.html',\n    styleUrls: ['./search-result-page.component.scss'],\n})\nexport class SearchResultPageComponent implements OnInit {\n    imageBaseUrl: string = environment.imageBaseUrl\n    allMovies: IMovieSeries[] = []\n    currentPage = 1\n    currentMovieSeries: string = ''\n    totalItems: number | null = null\n    constructor(public userAuth: UserAuthService, private router: Router, private activatedRoute: ActivatedRoute) {}\n    ngOnInit(): void {\n        this.activatedRoute.params.subscribe((params) => {\n            this.userAuth.fetchMoviesSeries(params['query'], this.currentPage).subscribe((res: any) => {\n                this.currentMovieSeries = params['query']\n                this.totalItems = res.total_results\n                this.allMovies = res.results\n                if (this.allMovies.length === 0) {\n                    this.router.navigate(['/no-result', params['query']])\n                }\n            })\n        })\n    }\n    onScroll() {\n        this.currentPage++\n        this.activatedRoute.params.subscribe((params: Params) => {\n            this.userAuth.fetchMoviesSeries(params['query'], this.currentPage).subscribe((res: any) => {\n                this.allMovies = [...this.allMovies, ...res.results]\n            })\n        })\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\n\n.search-results {\n    background-color: $theme-color-base;\n    padding: 0 $spacing-sm;\n}\n.movie {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-gap: $spacing-md;\n}\n.search-item-count {\n    color: $white;\n    font-size: $font-size-xxl;\n    line-height: 1.5;\n    margin-bottom: $spacing-normal;\n    margin-top: $spacing-lg;\n}\n@media (max-width: 768px) {\n    .movie {\n        grid-template-columns: repeat(2, 1fr);\n    }\n    .search-results {\n        padding: 0 $spacing-xsm;\n    }\n}\n@media (max-width: 384px) {\n    .movie {\n        grid-template-columns: repeat(1, 1fr);\n    }\n}\n",
                    "styleUrl": "./search-result-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "userAuth",
                        "type": "UserAuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 36,
                "jsdoctags": [
                    {
                        "name": "userAuth",
                        "type": "UserAuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div\n    infinite-scroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollUpDistance]=\"1\"\n    [infiniteScrollThrottle]=\"500\"\n    (scrolled)=\"onScroll()\"\n    class=\"search-results\"\n>\n    <div class=\"search-item-count\">Found {{ totalItems }} results for \"{{ currentMovieSeries }}\"</div>\n    <div class=\"movie\">\n        <div *ngFor=\"let movie of allMovies\">\n            <app-movie-series-card\n                routerLink=\"{{movie.media_type}}/details/{{ movie.id }}\"\n                label=\"{{ movie.media_type === 'tv' ? 'TV series' : 'Movie' }}\"\n                title=\"{{ movie.media_type === 'movie' ? movie.original_title : movie.original_name }}\"\n                year=\"{{ movie.media_type === 'movie' ? (movie.release_date | date: 'yyyy') : (movie.first_air_date | date: 'yyyy') }}\"\n                [image]=\"imageBaseUrl + movie.poster_path\"\n                icon=\"{{ movie.media_type === 'tv' ? 'assets/series-icon.png' : 'assets/movie-icon.png' }}\"\n            ></app-movie-series-card>\n        </div>\n    </div>\n</div>\n"
        },
        {
            "name": "StarRatingComponent",
            "id": "component-StarRatingComponent-b5ec9896e9e26ad8239da48a41a0845d94674e2f22590eb1fd2c5aabf1f6522175cda3a6a7eae3e4d6788cbfef3f5784f07dfde417b5818c4f725919f40cd858",
            "file": "src/app/components/star-rating/star-rating.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-star-rating",
            "styleUrls": [
                "./star-rating.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./star-rating.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "rating",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core'\n\n@Component({\n    selector: 'app-star-rating',\n    templateUrl: './star-rating.component.html',\n    styleUrls: ['./star-rating.component.scss'],\n})\nexport class StarRatingComponent {\n    @Input() rating: any\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/styles/index';\n\n.star {\n    position: relative;\n    display: inline-block;\n    font-size: 2rem;\n    color: $silver;\n}\n\n.full {\n    color: $orange;\n}\n\n.half {\n    position: absolute;\n    display: inline-block;\n    overflow: hidden;\n    color: $orange;\n}\n\n@media (max-width: 768px) {\n    .star {\n        font-size: 1rem;\n    }\n}\n",
                    "styleUrl": "./star-rating.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ng-template #star let-fill=\"fill\">\n    <span class=\"star\" [class.full]=\"fill === 100\"> <span class=\"half\" [style.width.%]=\"fill\"> &#9733;</span>&#9733;</span>\n</ng-template>\n\n<ngb-rating [(rate)]=\"rating\" [starTemplate]=\"star\" [readonly]=\"true\" [max]=\"5\"></ngb-rating>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-bc69e3df8075309d7efeca27f2eebad218587a11940957f7801c91d917f939e4a05030ce72a5e084ae70503411aa09f6edf0c9d836a555255c546b06dc174dae",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core'\nimport { BrowserModule } from '@angular/platform-browser'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\n\nimport { SearchBarComponent } from './components/search-bar/search-bar.component'\nimport { AppRoutingModule } from './app-routing.module'\nimport { AppComponent } from './app.component'\nimport { InputComponent } from './components/input/input.component'\nimport { CardComponent } from './components/card/card.component'\nimport { DropDownMenuComponent } from './components/drop-down-menu/drop-down-menu.component'\nimport { ButtonComponent } from './components/button/button.component'\nimport { NavigationBarComponent } from './components/navigation-bar/navigation-bar.component'\nimport { ProfileMenuComponent } from './components/profile-menu/profile-menu.component'\nimport { NavigationMenuComponent } from './components/navigation-menu/navigation-menu.component'\nimport { MovieSeriesCardComponent } from './components/movie-series-card/movie-series-card.component'\nimport { GenreComponent } from './components/genre/genre.component'\nimport { RegistrationPageComponent } from './modules/registration-page/registration-page.component'\nimport { HttpClientModule } from '@angular/common/http'\nimport { LoginPageComponent } from './modules/login-page/login-page.component'\nimport { UserAuthService } from './services/user-auth.service'\nimport { HomePageComponent } from './modules/home-page/home-page.component'\nimport { AuthGuardService } from './services/auth-guard.service'\nimport { JwtModule } from '@auth0/angular-jwt'\nimport { NoResultPageComponent } from './modules/no-result-page/no-result-page.component'\nimport { BannerComponent } from './components/banner/banner.component'\nimport { BookmarkPageComponent } from './modules/bookmark-page/bookmark-page.component';\nimport { MovieGenrePageComponent } from './modules/movie-genre-page/movie-genre-page.component';\nimport { MovieGenreDetailsPageComponent } from './modules/movie-genre-details-page/movie-genre-details-page.component'\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { DashboardComponent } from './modules/dashboard/dashboard.component'\nimport { CarouselModule } from 'ngx-owl-carousel-o'\nimport { StarRatingComponent } from './components/star-rating/star-rating.component'\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MovieDetailComponent } from './components/movie-detail/movie-detail.component';\nimport { GenreCardComponent } from './components/genre-card/genre-card.component';\nimport { CastMemberComponent } from './components/cast-member/cast-member.component';\nimport { DetailPageComponent } from './modules/detail-page/detail-page.component'\nimport { SearchResultPageComponent } from './modules/search-result-page/search-result-page.component'\nimport { LoginRegisterAuthService } from './services/login-register-auth.service';\nimport { BookmarkIconComponent } from './components/bookmark-icon/bookmark-icon.component'\nimport { BookmarkService } from './services/bookmark.service'\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ButtonComponent,\n        GenreComponent,\n        MovieSeriesCardComponent,\n        NavigationBarComponent,\n        ProfileMenuComponent,\n        SearchBarComponent,\n        NavigationMenuComponent,\n        DropDownMenuComponent,\n        ProfileMenuComponent,\n        CardComponent,\n        InputComponent,\n        LoginPageComponent,\n        RegistrationPageComponent,\n        HomePageComponent,\n        SearchResultPageComponent,\n        NoResultPageComponent,\n        DashboardComponent,\n        BannerComponent,\n        BookmarkPageComponent,\n        MovieGenrePageComponent,\n        MovieGenreDetailsPageComponent,\n        DashboardComponent,\n        StarRatingComponent,\n        MovieDetailComponent,\n        GenreCardComponent,\n        CastMemberComponent,\n        DetailPageComponent,\n        SearchResultPageComponent,\n        BookmarkIconComponent,\n    ],\n\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        BrowserAnimationsModule,\n        InfiniteScrollModule,\n        JwtModule.forRoot({\n            config: {\n                tokenGetter: () => localStorage.getItem('access_token'),\n            },\n        }),\n        CarouselModule,\n        BrowserAnimationsModule,\n        NgbModule,\n    ],\n\n    providers: [UserAuthService, AuthGuardService, LoginRegisterAuthService, BookmarkService],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "BookmarkService"
                        },
                        {
                            "name": "UserAuthService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "BannerComponent"
                        },
                        {
                            "name": "BookmarkIconComponent"
                        },
                        {
                            "name": "BookmarkPageComponent"
                        },
                        {
                            "name": "CardComponent"
                        },
                        {
                            "name": "CastMemberComponent"
                        },
                        {
                            "name": "DashboardComponent"
                        },
                        {
                            "name": "DashboardComponent"
                        },
                        {
                            "name": "DetailPageComponent"
                        },
                        {
                            "name": "DropDownMenuComponent"
                        },
                        {
                            "name": "GenreCardComponent"
                        },
                        {
                            "name": "GenreComponent"
                        },
                        {
                            "name": "HomePageComponent"
                        },
                        {
                            "name": "InputComponent"
                        },
                        {
                            "name": "LoginPageComponent"
                        },
                        {
                            "name": "MovieDetailComponent"
                        },
                        {
                            "name": "MovieGenreDetailsPageComponent"
                        },
                        {
                            "name": "MovieGenrePageComponent"
                        },
                        {
                            "name": "MovieSeriesCardComponent"
                        },
                        {
                            "name": "NavigationBarComponent"
                        },
                        {
                            "name": "NavigationMenuComponent"
                        },
                        {
                            "name": "NoResultPageComponent"
                        },
                        {
                            "name": "ProfileMenuComponent"
                        },
                        {
                            "name": "ProfileMenuComponent"
                        },
                        {
                            "name": "RegistrationPageComponent"
                        },
                        {
                            "name": "SearchBarComponent"
                        },
                        {
                            "name": "SearchResultPageComponent"
                        },
                        {
                            "name": "SearchResultPageComponent"
                        },
                        {
                            "name": "StarRatingComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-064018a4bab016512be8502424ad7a10718cf7ba247a3744397caadd6b460df3327a6201c213fd9ff474161caa34d0191f7053157a035ca59e1cdf8aa58feab8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\nimport { NoResultPageComponent } from './modules/no-result-page/no-result-page.component'\nimport { BookmarkPageComponent } from './modules/bookmark-page/bookmark-page.component'\nimport { HomePageComponent } from './modules/home-page/home-page.component'\nimport { LoginPageComponent } from './modules/login-page/login-page.component'\nimport { MovieGenreDetailsPageComponent } from './modules/movie-genre-details-page/movie-genre-details-page.component'\nimport { MovieGenrePageComponent } from './modules/movie-genre-page/movie-genre-page.component'\nimport { DashboardComponent } from './modules/dashboard/dashboard.component'\nimport { DetailPageComponent } from './modules/detail-page/detail-page.component'\nimport { SearchResultPageComponent } from './modules/search-result-page/search-result-page.component'\nimport { RegistrationPageComponent } from './modules/registration-page/registration-page.component'\nimport { AuthGuardService } from './services/auth-guard.service'\nimport { LoginRegisterAuthService } from './services/login-register-auth.service'\n\nconst routes: Routes = [\n    { path: 'login', component: LoginPageComponent, canActivate: [LoginRegisterAuthService] },\n    { path: 'register', component: RegistrationPageComponent, canActivate: [LoginRegisterAuthService] },\n    {\n        path: 'home',\n        component: HomePageComponent,\n        // canActivate: [AuthGuardService],\n        children: [\n            { path: '', component: DashboardComponent },\n            { path: 'bookmarks', component: BookmarkPageComponent },\n            { path: 'bookmarks/details/:id', component: DetailPageComponent },\n            { path: 'bookmarks/:type/details/:id', component: DetailPageComponent },\n            { path: 'details/:id', component: DetailPageComponent },\n            { path: 'movies/details/:id', component: DetailPageComponent },\n            { path: 'search/:query', component: SearchResultPageComponent },\n            { path: 'search/:query/:type/details/:id', component: DetailPageComponent },\n            { path: ':moviesSeries', component: MovieGenrePageComponent },\n            { path: ':moviesSeries/:id', component: MovieGenreDetailsPageComponent },\n            { path: ':moviesSeries/:id/details/:id', component: DetailPageComponent },\n        ],\n    },\n    { path: '', redirectTo: 'login', pathMatch: 'full' },\n    { path: 'no-result/:errorData', component: NoResultPageComponent },\n]\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "ActionGenre",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/genre/genre.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n    props: {\n        genre: 'Action',\n        color: '#0e7490',\n    },\n})"
            },
            {
                "name": "AdventureGenre",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/genre/genre.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n    props: {\n        genre: 'Adventure',\n        color: '#171E31',\n    },\n})"
            },
            {
                "name": "AnimationGenre",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/genre/genre.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n    props: {\n        genre: 'Animation',\n        color: '#0e7490',\n    },\n})"
            },
            {
                "name": "bannerjohnwick",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/banner/banner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n    props: {\n        year: '2000',\n        title: 'John wick: Chapter 3 - Parabellum',\n        overview:\n            'In \"John Wick: Chapter 3 - Parabellum\", legendary hitman John Wick is on the run after being declared \"excommunicado\" by the High Table, with a $14 million bounty on his head. Wick must fight his way through waves of assassins and navigate the dangerous world of the criminal underworld to try and survive.',\n        voteAverage: '4.5',\n        background: 'assets/card-movie.png',\n    },\n})"
            },
            {
                "name": "Casts",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/cast-member/cast-member.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n    props: {\n        name: 'Morgan Freeman',\n    },\n})"
            },
            {
                "name": "ConfirmPassword",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n    props: {\n        label: 'Confirm password',\n        placeholder: 'Confirm password',\n    },\n})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "DocumentaryGenre",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/genre/genre.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n    props: {\n        genre: 'Documentary',\n        color: '#0F766E',\n    },\n})"
            },
            {
                "name": "DropDownOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/drop-down-menu/drop-down-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n        props: {\n            dropdownData: [\n                {\n                    name: 'Profile Menu',\n                    onClick: () => {\n                        console.log('Option 1 clicked')\n                    },\n                },\n                {\n                    name: 'Logout',\n                    onClick: () => {\n                        console.log('Option 2 clicked')\n                    },\n                },\n            ],\n        },\n})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n    production: true,\n    apiUrl: 'https://sea-turtle-app-ccc3d.ondigitalocean.app/api/auth/local',\n    imageBaseUrl: 'https://www.themoviedb.org/t/p/w355_and_h200_multi_faces',\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n    production: false,\n    apiUrl: 'https://sea-turtle-app-ccc3d.ondigitalocean.app/api/auth/local',\n    imageBaseUrl: 'https://www.themoviedb.org/t/p/w355_and_h200_multi_faces',\n}"
            },
            {
                "name": "InputEmail",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n    props: {\n        label: 'Email',\n        placeholder: 'Email',\n    },\n})"
            },
            {
                "name": "InputName",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n    props: {\n        label: 'Full Name',\n        placeholder: 'Full Name',\n    },\n})"
            },
            {
                "name": "InputPassword",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n    props: {\n        label: 'Password',\n        placeholder: 'Password',\n    },\n})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "loginCard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n    template: `\n    <app-card type=\"primary\"> \n    <div style=\"display: flex; margin: -60px -48px;\">\n    <app-card type=\"secondary\" style=\"flex: 0 0 50%\"></app-card>\n    <div>\n    goto signup\n    </div>  \n    </div>      \n    </app-card>`,\n})"
            },
            {
                "name": "MovieDetails1",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/movie-detail/movie-detail.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n    props: {\n        label: 'Language',\n        movieDetail: 'English',\n    },\n})"
            },
            {
                "name": "MovieDetails2",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/movie-detail/movie-detail.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n    props: {\n        label: 'Year',\n        movieDetail: '1994',\n    },\n})"
            },
            {
                "name": "MovieGenre",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/genre-card/genre-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n    props: {\n        genre: 'Action',\n    },\n})"
            },
            {
                "name": "moviescard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/movie-series-card/movie-series-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n    props: {\n        image: 'assets/card-movie.png',\n        icon: 'assets/movie-icon.png',\n        label: 'Movie',\n        title: 'Batman',\n        year: 2000,\n        isBookmark: false,\n    },\n})"
            },
            {
                "name": "NavigationMenu",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/navigation-menu/navigation-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n    props: {\n        items: [\n            { name: 'home', icon: 'assets/home-icon.svg', path: '/home' },\n            { name: 'movie', icon: 'assets/movie-icon.svg', path: '/movies' },\n            { name: 'series', icon: 'assets/series-icon.svg', path: '/series' },\n            { name: 'bookmark', icon: 'assets/bookmark-icon.svg', path: '/bookmarks' },\n        ],\n    },\n})"
            },
            {
                "name": "NavigationWithNavMenu",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/navigation-bar/navigation-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n    template: `<app-navigation-bar>\n    <app-navigation-menu></app-navigation-menu>\n    </app-navigation-bar>`,\n    props: {\n        dropDownData: [\n            {\n                name: 'Profile Menu',\n                onClick: () => {\n                    console.log('Option 1 clicked')\n                },\n            },\n            {\n                name: 'Logout',\n                onClick: () => {\n                    console.log('Option 2 clicked')\n                },\n            },\n        ],\n        icon: 'assets/profile-menu.svg',\n    },\n})"
            },
            {
                "name": "OTTApp",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n    props: {},\n})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "primaryCard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n    props: {\n        type: 'primary',\n    },\n})"
            },
            {
                "name": "ProfileIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/profile-menu/profile-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n    props: {\n        dropDownData: [\n            {\n                name: 'Profile Menu',\n                onClick: () => {\n                    console.log('Option 1 clicked')\n                },\n            },\n            {\n                name: 'Logout',\n                onClick: () => {\n                    console.log('Option 2 clicked')\n                },\n            },\n        ],\n        icon: 'assets/profile-menu.svg',\n    },\n})"
            },
            {
                "name": "RegisterDisabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n    props: {\n        label: 'Register',\n        disabled: true,\n        type: 'primary',\n    },\n})"
            },
            {
                "name": "RegisterEnabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n    props: {\n        label: 'Register',\n        disabled: false,\n        type: 'primary',\n    },\n})"
            },
            {
                "name": "registration",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/home-page/home-page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n    props: {},\n})"
            },
            {
                "name": "registration",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/login-page/login-page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n    props: {},\n})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "SearchBar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/search-bar/search-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n    props: {\n        inputPlaceholder: 'Search for movies or TV series',\n    },\n})"
            },
            {
                "name": "SearchDisabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n    props: {\n        label: 'Search',\n        size: 'large',\n        type: 'primary',\n        disabled: true,\n    },\n})"
            },
            {
                "name": "SearchEnabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n    props: {\n        label: 'Search',\n        size: 'large',\n        type: 'primary',\n        disabled: false,\n    },\n})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "secondaryCard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n    props: {\n        type: 'secondary',\n    },\n})"
            },
            {
                "name": "seriescard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/movie-series-card/movie-series-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n    props: {\n        image: 'assets/card-series.png',\n        icon: 'assets/movie-icon.png',\n        label: 'TV Series',\n        title: 'Friends',\n        year: 1999,\n        isBookmark: true,\n    },\n})"
            },
            {
                "name": "SignInDisabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n    props: {\n        label: 'Sign In',\n        disabled: true,\n    },\n})"
            },
            {
                "name": "SignInEnabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n    props: {\n        label: 'Sign In',\n        disabled: false,\n        type: 'primary',\n    },\n})"
            },
            {
                "name": "SignUpDisabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n    props: {\n        label: 'Sign Up',\n        disabled: true,\n        type: 'secondary',\n    },\n})"
            },
            {
                "name": "SignUpEnabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n    props: {\n        label: 'Sign Up',\n        disabled: false,\n        type: 'secondary',\n    },\n})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "starTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/star-rating/star-rating.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\n  <ng-template #star let-fill=\"fill\">\n    <span class=\"star\" [class.full]=\"fill === 100\">\n      <span class=\"half\" [style.width.%]=\"fill\"> &#9733;</span>&#9733;\n    </span>\n  </ng-template>\n`"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            },
            {
                "name": "ThreeStarRating",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/star-rating/star-rating.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n    component: StarRatingComponent,\n    props: {\n        rating: 3.5,\n        starTemplate,\n    },\n})"
            },
            {
                "name": "TwoStarRating",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/star-rating/star-rating.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n    component: StarRatingComponent,\n    props: {\n        rating: 2,\n        starTemplate,\n    },\n})"
            },
            {
                "name": "VALIDATION_TXT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/input/input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any",
                "defaultValue": "{\n    email: 'Invalid email',\n    password: 'Empty password',\n    required: 'Field is required',\n    username: 'Invalid username',\n    MATCH_PASSWORD: 'Password is not matching!',\n}"
            }
        ],
        "functions": [
            {
                "name": "email",
                "file": "src/app/components/input/input.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "AC",
                        "type": "AbstractControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "null | literal type",
                "jsdoctags": [
                    {
                        "name": "AC",
                        "type": "AbstractControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "passwordMatch",
                "file": "src/app/components/input/input.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "AC",
                        "type": "AbstractControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "null | literal type",
                "jsdoctags": [
                    {
                        "name": "AC",
                        "type": "AbstractControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "username",
                "file": "src/app/components/input/input.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "AC",
                        "type": "AbstractControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "null | literal type",
                "jsdoctags": [
                    {
                        "name": "AC",
                        "type": "AbstractControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/components/genre/genre.stories.ts": [
                {
                    "name": "ActionGenre",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/genre/genre.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n    props: {\n        genre: 'Action',\n        color: '#0e7490',\n    },\n})"
                },
                {
                    "name": "AdventureGenre",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/genre/genre.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n    props: {\n        genre: 'Adventure',\n        color: '#171E31',\n    },\n})"
                },
                {
                    "name": "AnimationGenre",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/genre/genre.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n    props: {\n        genre: 'Animation',\n        color: '#0e7490',\n    },\n})"
                },
                {
                    "name": "DocumentaryGenre",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/genre/genre.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n    props: {\n        genre: 'Documentary',\n        color: '#0F766E',\n    },\n})"
                }
            ],
            "src/app/components/banner/banner.stories.ts": [
                {
                    "name": "bannerjohnwick",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/banner/banner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n    props: {\n        year: '2000',\n        title: 'John wick: Chapter 3 - Parabellum',\n        overview:\n            'In \"John Wick: Chapter 3 - Parabellum\", legendary hitman John Wick is on the run after being declared \"excommunicado\" by the High Table, with a $14 million bounty on his head. Wick must fight his way through waves of assassins and navigate the dangerous world of the criminal underworld to try and survive.',\n        voteAverage: '4.5',\n        background: 'assets/card-movie.png',\n    },\n})"
                }
            ],
            "src/app/components/cast-member/cast-member.stories.ts": [
                {
                    "name": "Casts",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/cast-member/cast-member.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n    props: {\n        name: 'Morgan Freeman',\n    },\n})"
                }
            ],
            "src/app/components/input/input.stories.ts": [
                {
                    "name": "ConfirmPassword",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n    props: {\n        label: 'Confirm password',\n        placeholder: 'Confirm password',\n    },\n})"
                },
                {
                    "name": "InputEmail",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n    props: {\n        label: 'Email',\n        placeholder: 'Email',\n    },\n})"
                },
                {
                    "name": "InputName",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n    props: {\n        label: 'Full Name',\n        placeholder: 'Full Name',\n    },\n})"
                },
                {
                    "name": "InputPassword",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n    props: {\n        label: 'Password',\n        placeholder: 'Password',\n    },\n})"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/app/components/drop-down-menu/drop-down-menu.stories.ts": [
                {
                    "name": "DropDownOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/drop-down-menu/drop-down-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n        props: {\n            dropdownData: [\n                {\n                    name: 'Profile Menu',\n                    onClick: () => {\n                        console.log('Option 1 clicked')\n                    },\n                },\n                {\n                    name: 'Logout',\n                    onClick: () => {\n                        console.log('Option 2 clicked')\n                    },\n                },\n            ],\n        },\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n    production: true,\n    apiUrl: 'https://sea-turtle-app-ccc3d.ondigitalocean.app/api/auth/local',\n    imageBaseUrl: 'https://www.themoviedb.org/t/p/w355_and_h200_multi_faces',\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n    production: false,\n    apiUrl: 'https://sea-turtle-app-ccc3d.ondigitalocean.app/api/auth/local',\n    imageBaseUrl: 'https://www.themoviedb.org/t/p/w355_and_h200_multi_faces',\n}"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ],
            "src/app/components/card/card.stories.ts": [
                {
                    "name": "loginCard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n    template: `\n    <app-card type=\"primary\"> \n    <div style=\"display: flex; margin: -60px -48px;\">\n    <app-card type=\"secondary\" style=\"flex: 0 0 50%\"></app-card>\n    <div>\n    goto signup\n    </div>  \n    </div>      \n    </app-card>`,\n})"
                },
                {
                    "name": "primaryCard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n    props: {\n        type: 'primary',\n    },\n})"
                },
                {
                    "name": "secondaryCard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n    props: {\n        type: 'secondary',\n    },\n})"
                }
            ],
            "src/app/components/movie-detail/movie-detail.stories.ts": [
                {
                    "name": "MovieDetails1",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/movie-detail/movie-detail.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n    props: {\n        label: 'Language',\n        movieDetail: 'English',\n    },\n})"
                },
                {
                    "name": "MovieDetails2",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/movie-detail/movie-detail.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n    props: {\n        label: 'Year',\n        movieDetail: '1994',\n    },\n})"
                }
            ],
            "src/app/components/genre-card/genre-card.stories.ts": [
                {
                    "name": "MovieGenre",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/genre-card/genre-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n    props: {\n        genre: 'Action',\n    },\n})"
                }
            ],
            "src/app/components/movie-series-card/movie-series-card.stories.ts": [
                {
                    "name": "moviescard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/movie-series-card/movie-series-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n    props: {\n        image: 'assets/card-movie.png',\n        icon: 'assets/movie-icon.png',\n        label: 'Movie',\n        title: 'Batman',\n        year: 2000,\n        isBookmark: false,\n    },\n})"
                },
                {
                    "name": "seriescard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/movie-series-card/movie-series-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n    props: {\n        image: 'assets/card-series.png',\n        icon: 'assets/movie-icon.png',\n        label: 'TV Series',\n        title: 'Friends',\n        year: 1999,\n        isBookmark: true,\n    },\n})"
                }
            ],
            "src/app/components/navigation-menu/navigation-menu.stories.ts": [
                {
                    "name": "NavigationMenu",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/navigation-menu/navigation-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n    props: {\n        items: [\n            { name: 'home', icon: 'assets/home-icon.svg', path: '/home' },\n            { name: 'movie', icon: 'assets/movie-icon.svg', path: '/movies' },\n            { name: 'series', icon: 'assets/series-icon.svg', path: '/series' },\n            { name: 'bookmark', icon: 'assets/bookmark-icon.svg', path: '/bookmarks' },\n        ],\n    },\n})"
                }
            ],
            "src/app/components/navigation-bar/navigation-bar.stories.ts": [
                {
                    "name": "NavigationWithNavMenu",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/navigation-bar/navigation-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n    template: `<app-navigation-bar>\n    <app-navigation-menu></app-navigation-menu>\n    </app-navigation-bar>`,\n    props: {\n        dropDownData: [\n            {\n                name: 'Profile Menu',\n                onClick: () => {\n                    console.log('Option 1 clicked')\n                },\n            },\n            {\n                name: 'Logout',\n                onClick: () => {\n                    console.log('Option 2 clicked')\n                },\n            },\n        ],\n        icon: 'assets/profile-menu.svg',\n    },\n})"
                }
            ],
            "src/app/app.stories.ts": [
                {
                    "name": "OTTApp",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n    props: {},\n})"
                }
            ],
            "src/app/components/profile-menu/profile-menu.stories.ts": [
                {
                    "name": "ProfileIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/profile-menu/profile-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n    props: {\n        dropDownData: [\n            {\n                name: 'Profile Menu',\n                onClick: () => {\n                    console.log('Option 1 clicked')\n                },\n            },\n            {\n                name: 'Logout',\n                onClick: () => {\n                    console.log('Option 2 clicked')\n                },\n            },\n        ],\n        icon: 'assets/profile-menu.svg',\n    },\n})"
                }
            ],
            "src/app/components/button/button.stories.ts": [
                {
                    "name": "RegisterDisabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n    props: {\n        label: 'Register',\n        disabled: true,\n        type: 'primary',\n    },\n})"
                },
                {
                    "name": "RegisterEnabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n    props: {\n        label: 'Register',\n        disabled: false,\n        type: 'primary',\n    },\n})"
                },
                {
                    "name": "SearchDisabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n    props: {\n        label: 'Search',\n        size: 'large',\n        type: 'primary',\n        disabled: true,\n    },\n})"
                },
                {
                    "name": "SearchEnabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n    props: {\n        label: 'Search',\n        size: 'large',\n        type: 'primary',\n        disabled: false,\n    },\n})"
                },
                {
                    "name": "SignInDisabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n    props: {\n        label: 'Sign In',\n        disabled: true,\n    },\n})"
                },
                {
                    "name": "SignInEnabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n    props: {\n        label: 'Sign In',\n        disabled: false,\n        type: 'primary',\n    },\n})"
                },
                {
                    "name": "SignUpDisabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n    props: {\n        label: 'Sign Up',\n        disabled: true,\n        type: 'secondary',\n    },\n})"
                },
                {
                    "name": "SignUpEnabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n    props: {\n        label: 'Sign Up',\n        disabled: false,\n        type: 'secondary',\n    },\n})"
                }
            ],
            "src/app/modules/home-page/home-page.stories.ts": [
                {
                    "name": "registration",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/home-page/home-page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n    props: {},\n})"
                }
            ],
            "src/app/modules/login-page/login-page.stories.ts": [
                {
                    "name": "registration",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/login-page/login-page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n    props: {},\n})"
                }
            ],
            "src/app/components/search-bar/search-bar.stories.ts": [
                {
                    "name": "SearchBar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/search-bar/search-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n    props: {\n        inputPlaceholder: 'Search for movies or TV series',\n    },\n})"
                }
            ],
            "src/app/components/star-rating/star-rating.stories.ts": [
                {
                    "name": "starTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/star-rating/star-rating.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\n  <ng-template #star let-fill=\"fill\">\n    <span class=\"star\" [class.full]=\"fill === 100\">\n      <span class=\"half\" [style.width.%]=\"fill\"> &#9733;</span>&#9733;\n    </span>\n  </ng-template>\n`"
                },
                {
                    "name": "ThreeStarRating",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/star-rating/star-rating.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n    component: StarRatingComponent,\n    props: {\n        rating: 3.5,\n        starTemplate,\n    },\n})"
                },
                {
                    "name": "TwoStarRating",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/star-rating/star-rating.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n    component: StarRatingComponent,\n    props: {\n        rating: 2,\n        starTemplate,\n    },\n})"
                }
            ],
            "src/app/components/input/input.component.ts": [
                {
                    "name": "VALIDATION_TXT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/input/input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "defaultValue": "{\n    email: 'Invalid email',\n    password: 'Empty password',\n    required: 'Field is required',\n    username: 'Invalid username',\n    MATCH_PASSWORD: 'Password is not matching!',\n}"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/components/input/input.component.ts": [
                {
                    "name": "email",
                    "file": "src/app/components/input/input.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "AC",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "null | literal type",
                    "jsdoctags": [
                        {
                            "name": "AC",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "passwordMatch",
                    "file": "src/app/components/input/input.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "AC",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "null | literal type",
                    "jsdoctags": [
                        {
                            "name": "AC",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "username",
                    "file": "src/app/components/input/input.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "AC",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "null | literal type",
                    "jsdoctags": [
                        {
                            "name": "AC",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "login",
                        "component": "LoginPageComponent",
                        "canActivate": [
                            "LoginRegisterAuthService"
                        ]
                    },
                    {
                        "path": "register",
                        "component": "RegistrationPageComponent",
                        "canActivate": [
                            "LoginRegisterAuthService"
                        ]
                    },
                    {
                        "path": "home",
                        "component": "HomePageComponent",
                        "children": [
                            {
                                "path": "",
                                "component": "DashboardComponent"
                            },
                            {
                                "path": "bookmarks",
                                "component": "BookmarkPageComponent"
                            },
                            {
                                "path": "bookmarks/details/:id",
                                "component": "DetailPageComponent"
                            },
                            {
                                "path": "bookmarks/:type/details/:id",
                                "component": "DetailPageComponent"
                            },
                            {
                                "path": "details/:id",
                                "component": "DetailPageComponent"
                            },
                            {
                                "path": "movies/details/:id",
                                "component": "DetailPageComponent"
                            },
                            {
                                "path": "search/:query",
                                "component": "SearchResultPageComponent"
                            },
                            {
                                "path": "search/:query/:type/details/:id",
                                "component": "DetailPageComponent"
                            },
                            {
                                "path": ":moviesSeries",
                                "component": "MovieGenrePageComponent"
                            },
                            {
                                "path": ":moviesSeries/:id",
                                "component": "MovieGenreDetailsPageComponent"
                            },
                            {
                                "path": ":moviesSeries/:id/details/:id",
                                "component": "DetailPageComponent"
                            }
                        ]
                    },
                    {
                        "path": "",
                        "redirectTo": "login",
                        "pathMatch": "full"
                    },
                    {
                        "path": "no-result/:errorData",
                        "component": "NoResultPageComponent"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OTTApp",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/banner/banner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BannerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/banner/banner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "bannerjohnwick",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/bookmark-icon/bookmark-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BookmarkIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RegisterDisabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RegisterEnabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SearchDisabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SearchEnabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SignInDisabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SignInEnabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SignUpDisabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SignUpEnabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loginCard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "primaryCard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "secondaryCard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/cast-member/cast-member.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CastMemberComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/cast-member/cast-member.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Casts",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/drop-down-menu/drop-down-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DropDownMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/drop-down-menu/drop-down-menu.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IDropDownData",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/drop-down-menu/drop-down-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DropDownOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/genre-card/genre-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GenreCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/genre-card/genre-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MovieGenre",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/genre/genre.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GenreComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/genre/genre.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ActionGenre",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/genre/genre.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AdventureGenre",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/genre/genre.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AnimationGenre",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/genre/genre.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DocumentaryGenre",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "src/app/components/input/input.component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "email",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/input/input.component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "passwordMatch",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/input/input.component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "username",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/input/input.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "VALIDATION_TXT",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ConfirmPassword",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InputEmail",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InputName",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InputPassword",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/movie-detail/movie-detail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MovieDetailComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/movie-detail/movie-detail.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MovieDetails1",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/movie-detail/movie-detail.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MovieDetails2",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/movie-series-card/movie-series-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MovieSeriesCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/components/movie-series-card/movie-series-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "moviescard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/movie-series-card/movie-series-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "seriescard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/navigation-bar/navigation-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavigationBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/navigation-bar/navigation-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NavigationWithNavMenu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/navigation-menu/navigation-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavigationMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/navigation-menu/navigation-menu.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IItems",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/navigation-menu/navigation-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NavigationMenu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/profile-menu/profile-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProfileMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/profile-menu/profile-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProfileIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/search-bar/search-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/components/search-bar/search-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SearchBar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/star-rating/star-rating.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StarRatingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/star-rating/star-rating.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "starTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/star-rating/star-rating.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ThreeStarRating",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/star-rating/star-rating.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TwoStarRating",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/bookmark-page/bookmark-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BookmarkPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/dashboard/dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/detail-page/detail-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DetailPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/home-page/home-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomePageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/home-page/home-page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "registration",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/login-page/login-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/login-page/login-page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "registration",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/movie-genre-details-page/movie-genre-details-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MovieGenreDetailsPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/movie-genre-details-page/movie-genre-details-page.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IMovieSeries",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/movie-genre-page/movie-genre-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MovieGenrePageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/no-result-page/no-result-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NoResultPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/registration-page/registration-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RegistrationPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/search-result-page/search-result-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchResultPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/search-result-page/search-result-page.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IMovieSeries",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/services/auth-guard.service.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AuthGuardService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/services/bookmark.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "BookmarkService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/services/login-register-auth.service.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "LoginRegisterAuthService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/services/user-auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserAuthService",
                "coveragePercent": 7,
                "coverageCount": "1/13",
                "status": "low"
            },
            {
                "filePath": "src/app/services/user-auth.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ILogin",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/services/user-auth.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IRegister",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}